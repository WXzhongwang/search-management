// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin/meta.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "admin/meta.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CreateClusterRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterRequest>
     _instance;
} _CreateClusterRequest_default_instance_;
class CreateClusterReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterReply>
     _instance;
} _CreateClusterReply_default_instance_;
class GetClusterInfoRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetClusterInfoRequest>
     _instance;
} _GetClusterInfoRequest_default_instance_;
class GetClusterInfoReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetClusterInfoReply>
     _instance;
} _GetClusterInfoReply_default_instance_;
class ClusterInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClusterInfo>
     _instance;
} _ClusterInfo_default_instance_;
class NodeInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NodeInfo>
     _instance;
} _NodeInfo_default_instance_;
class UpdateClusterInfoRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterInfoRequest>
     _instance;
} _UpdateClusterInfoRequest_default_instance_;
class UpdateClusterInfoReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterInfoReply>
     _instance;
} _UpdateClusterInfoReply_default_instance_;
class DeleteClusterRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterRequest>
     _instance;
} _DeleteClusterRequest_default_instance_;
class DeleteClusterReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterReply>
     _instance;
} _DeleteClusterReply_default_instance_;
class ListClusterRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListClusterRequest>
     _instance;
} _ListClusterRequest_default_instance_;
class ListClusterReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListClusterReply>
     _instance;
} _ListClusterReply_default_instance_;
class ListClusterDetailsRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListClusterDetailsRequest>
     _instance;
} _ListClusterDetailsRequest_default_instance_;
class ListClusterDetailsReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListClusterDetailsReply>
     _instance;
} _ListClusterDetailsReply_default_instance_;
class CreateProjectRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateProjectRequest>
     _instance;
} _CreateProjectRequest_default_instance_;
class CreateProjectReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateProjectReply>
     _instance;
} _CreateProjectReply_default_instance_;
class DeleteProjectRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteProjectRequest>
     _instance;
} _DeleteProjectRequest_default_instance_;
class DeleteProjectReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteProjectReply>
     _instance;
} _DeleteProjectReply_default_instance_;
class UpdateProjectRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateProjectRequest>
     _instance;
} _UpdateProjectRequest_default_instance_;
class UpdateProjectReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateProjectReply>
     _instance;
} _UpdateProjectReply_default_instance_;
class GetProjectRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetProjectRequest>
     _instance;
} _GetProjectRequest_default_instance_;
class GetProjectReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetProjectReply>
     _instance;
} _GetProjectReply_default_instance_;
class ProjectInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProjectInfo>
     _instance;
} _ProjectInfo_default_instance_;
class ListProjectRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListProjectRequest>
     _instance;
} _ListProjectRequest_default_instance_;
class ListProjectReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListProjectReply>
     _instance;
} _ListProjectReply_default_instance_;
class ListProjectDetailsRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListProjectDetailsRequest>
     _instance;
} _ListProjectDetailsRequest_default_instance_;
class ListProjectDetailsReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListProjectDetailsReply>
     _instance;
} _ListProjectDetailsReply_default_instance_;
class CreateIndexRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateIndexRequest>
     _instance;
} _CreateIndexRequest_default_instance_;
class CreateIndexReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateIndexReply>
     _instance;
} _CreateIndexReply_default_instance_;
class GetIndexRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetIndexRequest>
     _instance;
} _GetIndexRequest_default_instance_;
class GetIndexReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetIndexReply>
     _instance;
} _GetIndexReply_default_instance_;
class IndexInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IndexInfo>
     _instance;
} _IndexInfo_default_instance_;
class UpdateIndexRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateIndexRequest>
     _instance;
} _UpdateIndexRequest_default_instance_;
class UpdateIndexReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateIndexReply>
     _instance;
} _UpdateIndexReply_default_instance_;
class DeleteIndexRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexRequest>
     _instance;
} _DeleteIndexRequest_default_instance_;
class DeleteIndexReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteIndexReply>
     _instance;
} _DeleteIndexReply_default_instance_;
class ListIndexRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListIndexRequest>
     _instance;
} _ListIndexRequest_default_instance_;
class ListIndexReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ListIndexReply>
     _instance;
} _ListIndexReply_default_instance_;

namespace protobuf_admin_2fmeta_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[38];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, internal_endpoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterInfoReply, cluster_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, internal_endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, last_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, es_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, total_project_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, total_index_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, total_doc_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, total_data_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, cluster_health_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterInfo, total_template_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, is_master_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, cpu_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, ram_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, ram_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, heap_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, heap_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, disk_avail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, disk_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoRequest, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoRequest, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoRequest, internal_endpoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterInfoReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterReply, clusters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterDetailsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterDetailsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterDetailsReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterDetailsReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClusterDetailsReply, clusters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProjectRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProjectRequest, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProjectRequest, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProjectReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProjectReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProjectReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteProjectRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteProjectRequest, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteProjectReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteProjectReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteProjectReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProjectRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProjectRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProjectRequest, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProjectReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProjectReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProjectReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProjectRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProjectReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProjectReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProjectReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProjectReply, project_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, total_index_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, total_doc_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, total_data_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, total_template_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectReply, projects_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectDetailsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectDetailsRequest, cluster_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectDetailsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectDetailsReply, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectDetailsReply, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListProjectDetailsReply, projects_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexRequest, project_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexRequest, aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexRequest, mapping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexRequest, setting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexRequest, rolling_policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateIndexReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIndexRequest, index_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIndexReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIndexReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIndexReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIndexReply, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, project_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, mapping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, setting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, total_doc_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, total_data_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, primary_shard_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, replica_shard_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, index_health_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, rolling_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexInfo, index_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateIndexRequest, index_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateIndexRequest, mapping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateIndexRequest, setting_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateIndexReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateIndexReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateIndexReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteIndexRequest, index_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteIndexReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteIndexReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteIndexReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListIndexRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListIndexRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListIndexRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListIndexReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListIndexReply, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListIndexReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListIndexReply, indices_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(CreateClusterRequest)},
  { 11, -1, sizeof(CreateClusterReply)},
  { 18, -1, sizeof(GetClusterInfoRequest)},
  { 24, -1, sizeof(GetClusterInfoReply)},
  { 32, -1, sizeof(ClusterInfo)},
  { 54, -1, sizeof(NodeInfo)},
  { 72, -1, sizeof(UpdateClusterInfoRequest)},
  { 82, -1, sizeof(UpdateClusterInfoReply)},
  { 89, -1, sizeof(DeleteClusterRequest)},
  { 95, -1, sizeof(DeleteClusterReply)},
  { 102, -1, sizeof(ListClusterRequest)},
  { 107, -1, sizeof(ListClusterReply)},
  { 115, -1, sizeof(ListClusterDetailsRequest)},
  { 120, -1, sizeof(ListClusterDetailsReply)},
  { 128, -1, sizeof(CreateProjectRequest)},
  { 136, -1, sizeof(CreateProjectReply)},
  { 143, -1, sizeof(DeleteProjectRequest)},
  { 150, -1, sizeof(DeleteProjectReply)},
  { 157, -1, sizeof(UpdateProjectRequest)},
  { 165, -1, sizeof(UpdateProjectReply)},
  { 172, -1, sizeof(GetProjectRequest)},
  { 178, -1, sizeof(GetProjectReply)},
  { 186, -1, sizeof(ProjectInfo)},
  { 201, -1, sizeof(ListProjectRequest)},
  { 208, -1, sizeof(ListProjectReply)},
  { 216, -1, sizeof(ListProjectDetailsRequest)},
  { 222, -1, sizeof(ListProjectDetailsReply)},
  { 230, -1, sizeof(CreateIndexRequest)},
  { 241, -1, sizeof(CreateIndexReply)},
  { 248, -1, sizeof(GetIndexRequest)},
  { 254, -1, sizeof(GetIndexReply)},
  { 262, -1, sizeof(IndexInfo)},
  { 282, -1, sizeof(UpdateIndexRequest)},
  { 290, -1, sizeof(UpdateIndexReply)},
  { 297, -1, sizeof(DeleteIndexRequest)},
  { 303, -1, sizeof(DeleteIndexReply)},
  { 310, -1, sizeof(ListIndexRequest)},
  { 318, -1, sizeof(ListIndexReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateClusterReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetClusterInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetClusterInfoReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClusterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NodeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateClusterInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateClusterInfoReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteClusterReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListClusterReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListClusterDetailsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListClusterDetailsReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateProjectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateProjectReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteProjectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteProjectReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateProjectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateProjectReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetProjectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetProjectReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProjectInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListProjectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListProjectReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListProjectDetailsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListProjectDetailsReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateIndexReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetIndexReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateIndexReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteIndexReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListIndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListIndexReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "admin/meta.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 38);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  _CreateClusterRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateClusterRequest_default_instance_);_CreateClusterReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateClusterReply_default_instance_);_GetClusterInfoRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetClusterInfoRequest_default_instance_);_GetClusterInfoReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetClusterInfoReply_default_instance_);_ClusterInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClusterInfo_default_instance_);_NodeInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NodeInfo_default_instance_);_UpdateClusterInfoRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateClusterInfoRequest_default_instance_);_UpdateClusterInfoReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateClusterInfoReply_default_instance_);_DeleteClusterRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteClusterRequest_default_instance_);_DeleteClusterReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteClusterReply_default_instance_);_ListClusterRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListClusterRequest_default_instance_);_ListClusterReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListClusterReply_default_instance_);_ListClusterDetailsRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListClusterDetailsRequest_default_instance_);_ListClusterDetailsReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListClusterDetailsReply_default_instance_);_CreateProjectRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateProjectRequest_default_instance_);_CreateProjectReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateProjectReply_default_instance_);_DeleteProjectRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteProjectRequest_default_instance_);_DeleteProjectReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteProjectReply_default_instance_);_UpdateProjectRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateProjectRequest_default_instance_);_UpdateProjectReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateProjectReply_default_instance_);_GetProjectRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetProjectRequest_default_instance_);_GetProjectReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetProjectReply_default_instance_);_ProjectInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProjectInfo_default_instance_);_ListProjectRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListProjectRequest_default_instance_);_ListProjectReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListProjectReply_default_instance_);_ListProjectDetailsRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListProjectDetailsRequest_default_instance_);_ListProjectDetailsReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListProjectDetailsReply_default_instance_);_CreateIndexRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateIndexRequest_default_instance_);_CreateIndexReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateIndexReply_default_instance_);_GetIndexRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetIndexRequest_default_instance_);_GetIndexReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetIndexReply_default_instance_);_IndexInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IndexInfo_default_instance_);_UpdateIndexRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateIndexRequest_default_instance_);_UpdateIndexReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateIndexReply_default_instance_);_DeleteIndexRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteIndexRequest_default_instance_);_DeleteIndexReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteIndexReply_default_instance_);_ListIndexRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListIndexRequest_default_instance_);_ListIndexReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ListIndexReply_default_instance_);_GetClusterInfoReply_default_instance_._instance.get_mutable()->cluster_ = const_cast< ::ClusterInfo*>(
      ::ClusterInfo::internal_default_instance());
  _GetProjectReply_default_instance_._instance.get_mutable()->project_ = const_cast< ::ProjectInfo*>(
      ::ProjectInfo::internal_default_instance());
  _CreateIndexRequest_default_instance_._instance.get_mutable()->mapping_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  _CreateIndexRequest_default_instance_._instance.get_mutable()->setting_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  _GetIndexReply_default_instance_._instance.get_mutable()->index_ = const_cast< ::IndexInfo*>(
      ::IndexInfo::internal_default_instance());
  _UpdateIndexRequest_default_instance_._instance.get_mutable()->mapping_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  _UpdateIndexRequest_default_instance_._instance.get_mutable()->setting_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020admin/meta.proto\032\036google/protobuf/wrap"
      "pers.proto\"\245\001\n\024CreateClusterRequest\022\014\n\004n"
      "ame\030\001 \001(\t\022\035\n\007cluster\030\002 \001(\0162\014.ClusterType"
      "\022\023\n\013description\030\003 \001(\t\022\036\n\006status\030\004 \001(\0162\016."
      "ClusterStatus\022\020\n\010endpoint\030\005 \001(\t\022\031\n\021inter"
      "nal_endpoint\030\006 \001(\t\"3\n\022CreateClusterReply"
      "\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"%\n\025GetCl"
      "usterInfoRequest\022\014\n\004name\030\001 \001(\t\"S\n\023GetClu"
      "sterInfoReply\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002"
      " \001(\t\022\035\n\007cluster\030\003 \001(\0132\014.ClusterInfo\"\246\003\n\013"
      "ClusterInfo\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\020\n"
      "\010endpoint\030\003 \001(\t\022\031\n\021internal_endpoint\030\004 \001"
      "(\t\022\032\n\004type\030\005 \001(\0162\014.ClusterType\022\023\n\013descri"
      "ption\030\006 \001(\t\022\023\n\013create_time\030\007 \001(\003\022\030\n\020last"
      "_update_time\030\010 \001(\003\022\036\n\006status\030\t \001(\0162\016.Clu"
      "sterStatus\022\022\n\nes_version\030\n \001(\t\022\034\n\024total_"
      "project_number\030\013 \001(\005\022\032\n\022total_index_numb"
      "er\030\014 \001(\005\022\030\n\020total_doc_number\030\r \001(\003\022\027\n\017to"
      "tal_data_size\030\016 \001(\003\022\026\n\016cluster_health\030\017 "
      "\001(\t\022\030\n\005nodes\030\020 \003(\0132\t.NodeInfo\022\035\n\025total_t"
      "emplate_number\030\021 \001(\005\"\364\001\n\010NodeInfo\022\n\n\002id\030"
      "\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\022\n\nip_address\030\003 \001(\t\022"
      "\021\n\tis_master\030\004 \001(\010\022\023\n\013cpu_percent\030\005 \001(\001\022"
      "\017\n\007ram_max\030\006 \001(\t\022\023\n\013ram_current\030\007 \001(\t\022\020\n"
      "\010heap_max\030\010 \001(\t\022\024\n\014heap_current\030\t \001(\t\022\022\n"
      "\ndisk_avail\030\n \001(\t\022\024\n\014disk_percent\030\013 \001(\001\022"
      "\r\n\005group\030\014 \001(\t\022\013\n\003tag\030\r \001(\t\"\204\001\n\030UpdateCl"
      "usterInfoRequest\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001"
      "(\t\022\036\n\006status\030\003 \001(\0162\016.ClusterStatus\022\023\n\013de"
      "scription\030\004 \001(\t\022\031\n\021internal_endpoint\030\005 \001"
      "(\t\"7\n\026UpdateClusterInfoReply\022\014\n\004code\030\001 \001"
      "(\005\022\017\n\007message\030\002 \001(\t\"$\n\024DeleteClusterRequ"
      "est\022\014\n\004name\030\001 \001(\t\"3\n\022DeleteClusterReply\022"
      "\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"\024\n\022ListCl"
      "usterRequest\"C\n\020ListClusterReply\022\014\n\004code"
      "\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\020\n\010clusters\030\003 \003("
      "\t\"\033\n\031ListClusterDetailsRequest\"X\n\027ListCl"
      "usterDetailsReply\022\014\n\004code\030\001 \001(\005\022\017\n\007messa"
      "ge\030\002 \001(\t\022\036\n\010clusters\030\003 \003(\0132\014.ClusterInfo"
      "\"J\n\024CreateProjectRequest\022\014\n\004name\030\001 \001(\t\022\017"
      "\n\007cluster\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\"3\n\022"
      "CreateProjectReply\022\014\n\004code\030\001 \001(\005\022\017\n\007mess"
      "age\030\002 \001(\t\"D\n\024DeleteProjectRequest\022\014\n\004nam"
      "e\030\001 \001(\t\022\036\n\006status\030\002 \001(\0162\016.ProjectStatus\""
      "3\n\022DeleteProjectReply\022\014\n\004code\030\001 \001(\005\022\017\n\007m"
      "essage\030\002 \001(\t\"E\n\024UpdateProjectRequest\022\n\n\002"
      "id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\023\n\013description\030\003 "
      "\001(\t\"3\n\022UpdateProjectReply\022\014\n\004code\030\001 \001(\005\022"
      "\017\n\007message\030\002 \001(\t\"!\n\021GetProjectRequest\022\014\n"
      "\004name\030\001 \001(\t\"O\n\017GetProjectReply\022\014\n\004code\030\001"
      " \001(\005\022\017\n\007message\030\002 \001(\t\022\035\n\007project\030\003 \001(\0132\014"
      ".ProjectInfo\"\364\001\n\013ProjectInfo\022\n\n\002id\030\001 \001(\005"
      "\022\014\n\004name\030\002 \001(\t\022\024\n\014cluster_name\030\003 \001(\t\022\023\n\013"
      "description\030\004 \001(\t\022\032\n\022total_index_number\030"
      "\005 \001(\005\022\030\n\020total_doc_number\030\006 \001(\003\022\027\n\017total"
      "_data_size\030\007 \001(\003\022\022\n\ncluster_id\030\010 \001(\005\022\036\n\006"
      "status\030\t \001(\0162\016.ProjectStatus\022\035\n\025total_te"
      "mplate_number\030\021 \001(\005\"6\n\022ListProjectReques"
      "t\022\022\n\ncluster_id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"C\n\020L"
      "istProjectReply\022\014\n\004code\030\001 \001(\005\022\017\n\007message"
      "\030\002 \001(\t\022\020\n\010projects\030\003 \003(\t\",\n\031ListProjectD"
      "etailsRequest\022\017\n\007cluster\030\001 \001(\t\"d\n\027ListPr"
      "ojectDetailsReply\022\022\n\nerror_code\030\001 \001(\005\022\025\n"
      "\rerror_message\030\002 \001(\t\022\036\n\010projects\030\003 \003(\0132\014"
      ".ProjectInfo\"\323\001\n\022CreateIndexRequest\022\014\n\004n"
      "ame\030\001 \001(\t\022\017\n\007project\030\002 \001(\t\022\017\n\007aliases\030\004 "
      "\003(\t\022-\n\007mapping\030\005 \001(\0132\034.google.protobuf.S"
      "tringValue\022-\n\007setting\030\006 \001(\0132\034.google.pro"
      "tobuf.StringValue\022/\n\016rolling_policy\030\007 \001("
      "\0162\027.AutoIndexRollingPolicy\"1\n\020CreateInde"
      "xReply\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"#\n"
      "\017GetIndexRequest\022\020\n\010index_id\030\001 \001(\005\"I\n\rGe"
      "tIndexReply\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001"
      "(\t\022\031\n\005index\030\003 \001(\0132\n.IndexInfo\"\350\002\n\tIndexI"
      "nfo\022\014\n\004name\030\001 \001(\t\022\024\n\014cluster_name\030\002 \001(\t\022"
      "\024\n\014project_name\030\003 \001(\t\022\017\n\007mapping\030\005 \001(\t\022\017"
      "\n\007setting\030\006 \001(\t\022\017\n\007aliases\030\007 \003(\t\022\030\n\020tota"
      "l_doc_number\030\010 \001(\003\022\027\n\017total_data_size\030\t "
      "\001(\003\022\034\n\024primary_shard_number\030\n \001(\005\022\034\n\024rep"
      "lica_shard_number\030\013 \001(\005\022\024\n\014index_health\030"
      "\014 \001(\t\022\022\n\nproject_id\030\r \001(\t\022\022\n\ncluster_id\030"
      "\016 \001(\t\022/\n\016rolling_policy\030\017 \001(\0162\027.AutoInde"
      "xRollingPolicy\022\020\n\010index_id\030\020 \001(\005\"\204\001\n\022Upd"
      "ateIndexRequest\022\020\n\010index_id\030\001 \001(\005\022-\n\007map"
      "ping\030\004 \001(\0132\034.google.protobuf.StringValue"
      "\022-\n\007setting\030\005 \001(\0132\034.google.protobuf.Stri"
      "ngValue\"1\n\020UpdateIndexReply\022\014\n\004code\030\001 \001("
      "\005\022\017\n\007message\030\002 \001(\t\"&\n\022DeleteIndexRequest"
      "\022\020\n\010index_id\030\001 \001(\005\"1\n\020DeleteIndexReply\022\014"
      "\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"H\n\020ListInd"
      "exRequest\022\022\n\ncluster_id\030\001 \001(\005\022\022\n\nproject"
      "_id\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\"L\n\016ListIndexRepl"
      "y\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\033\n\007indi"
      "ces\030\003 \003(\0132\n.IndexInfo*\037\n\013ClusterType\022\007\n\003"
      "HDD\020\000\022\007\n\003SSD\020\001*S\n\rClusterStatus\022\010\n\004NULL\020"
      "\000\022\014\n\010CREATING\020\001\022\016\n\nIN_SERVICE\020\002\022\014\n\010DISAB"
      "LED\020\003\022\014\n\010DELETING\020\004*\'\n\rProjectStatus\022\n\n\006"
      "NORMAL\020\000\022\n\n\006DELETE\020\001*\\\n\026AutoIndexRolling"
      "Policy\022\010\n\004NONE\020\000\022\007\n\003DAY\020\001\022\t\n\005MONTH\020\002\022\013\n\007"
      "QUARTER\020\003\022\r\n\tHALF_YEAR\020\004\022\010\n\004YEAR\020\0052\325\007\n\013M"
      "etaService\022=\n\rCreateCluster\022\025.CreateClus"
      "terRequest\032\023.CreateClusterReply\"\000\022=\n\rDel"
      "eteCluster\022\025.DeleteClusterRequest\032\023.Dele"
      "teClusterReply\"\000\022E\n\rUpdateCluster\022\031.Upda"
      "teClusterInfoRequest\032\027.UpdateClusterInfo"
      "Reply\"\000\022@\n\016GetClusterInfo\022\026.GetClusterIn"
      "foRequest\032\024.GetClusterInfoReply\"\000\0227\n\013Lis"
      "tCluster\022\023.ListClusterRequest\032\021.ListClus"
      "terReply\"\000\022L\n\022ListClusterDetails\022\032.ListC"
      "lusterDetailsRequest\032\030.ListClusterDetail"
      "sReply\"\000\022=\n\rCreateProject\022\025.CreateProjec"
      "tRequest\032\023.CreateProjectReply\"\000\022=\n\rDelet"
      "eProject\022\025.DeleteProjectRequest\032\023.Delete"
      "ProjectReply\"\000\022=\n\rUpdateProject\022\025.Update"
      "ProjectRequest\032\023.UpdateProjectReply\"\000\0224\n"
      "\nGetProject\022\022.GetProjectRequest\032\020.GetPro"
      "jectReply\"\000\0227\n\013ListProject\022\023.ListProject"
      "Request\032\021.ListProjectReply\"\000\0227\n\013CreateIn"
      "dex\022\023.CreateIndexRequest\032\021.CreateIndexRe"
      "ply\"\000\022.\n\010GetIndex\022\020.GetIndexRequest\032\016.Ge"
      "tIndexReply\"\000\0227\n\013UpdateIndex\022\023.UpdateInd"
      "exRequest\032\021.UpdateIndexReply\"\000\0227\n\013Delete"
      "Index\022\023.DeleteIndexRequest\032\021.DeleteIndex"
      "Reply\"\000\0221\n\tListIndex\022\021.ListIndexRequest\032"
      "\017.ListIndexReply\"\000BC\n\036com.rany.service.p"
      "latform.metaB\037SearchMiddlePlatformMetaSe"
      "rviceP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5055);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "admin/meta.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_admin_2fmeta_2eproto

const ::google::protobuf::EnumDescriptor* ClusterType_descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_enum_descriptors[0];
}
bool ClusterType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClusterStatus_descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_enum_descriptors[1];
}
bool ClusterStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProjectStatus_descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_enum_descriptors[2];
}
bool ProjectStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AutoIndexRollingPolicy_descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_enum_descriptors[3];
}
bool AutoIndexRollingPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterRequest::kNameFieldNumber;
const int CreateClusterRequest::kClusterFieldNumber;
const int CreateClusterRequest::kDescriptionFieldNumber;
const int CreateClusterRequest::kStatusFieldNumber;
const int CreateClusterRequest::kEndpointFieldNumber;
const int CreateClusterRequest::kInternalEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterRequest::CreateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateClusterRequest)
}
CreateClusterRequest::CreateClusterRequest(const CreateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.endpoint().size() > 0) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  internal_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.internal_endpoint().size() > 0) {
    internal_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_endpoint_);
  }
  ::memcpy(&cluster_, &from.cluster_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&cluster_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:CreateClusterRequest)
}

void CreateClusterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&cluster_)) + sizeof(status_));
  _cached_size_ = 0;
}

CreateClusterRequest::~CreateClusterRequest() {
  // @@protoc_insertion_point(destructor:CreateClusterRequest)
  SharedDtor();
}

void CreateClusterRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateClusterRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateClusterRequest& CreateClusterRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateClusterRequest* CreateClusterRequest::New(::google::protobuf::Arena* arena) const {
  CreateClusterRequest* n = new CreateClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&cluster_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool CreateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClusterType cluster = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster(static_cast< ::ClusterType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateClusterRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClusterStatus status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ClusterStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string endpoint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateClusterRequest.endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string internal_endpoint = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateClusterRequest.internal_endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateClusterRequest)
  return false;
#undef DO_
}

void CreateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .ClusterType cluster = 2;
  if (this->cluster() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cluster(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .ClusterStatus status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // string endpoint = 5;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterRequest.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->endpoint(), output);
  }

  // string internal_endpoint = 6;
  if (this->internal_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterRequest.internal_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->internal_endpoint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateClusterRequest)
}

::google::protobuf::uint8* CreateClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .ClusterType cluster = 2;
  if (this->cluster() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cluster(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .ClusterStatus status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // string endpoint = 5;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterRequest.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->endpoint(), target);
  }

  // string internal_endpoint = 6;
  if (this->internal_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterRequest.internal_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->internal_endpoint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateClusterRequest)
  return target;
}

size_t CreateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string endpoint = 5;
  if (this->endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  // string internal_endpoint = 6;
  if (this->internal_endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->internal_endpoint());
  }

  // .ClusterType cluster = 2;
  if (this->cluster() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster());
  }

  // .ClusterStatus status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateClusterRequest)
    MergeFrom(*source);
  }
}

void CreateClusterRequest::MergeFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.endpoint().size() > 0) {

    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  if (from.internal_endpoint().size() > 0) {

    internal_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_endpoint_);
  }
  if (from.cluster() != 0) {
    set_cluster(from.cluster());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void CreateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterRequest::CopyFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterRequest::IsInitialized() const {
  return true;
}

void CreateClusterRequest::Swap(CreateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterRequest::InternalSwap(CreateClusterRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  endpoint_.Swap(&other->endpoint_);
  internal_endpoint_.Swap(&other->internal_endpoint_);
  swap(cluster_, other->cluster_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateClusterRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateClusterRequest

// string name = 1;
void CreateClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:CreateClusterRequest.name)
  return name_.GetNoArena();
}
void CreateClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateClusterRequest.name)
}
#if LANG_CXX11
void CreateClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateClusterRequest.name)
}
#endif
void CreateClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateClusterRequest.name)
}
void CreateClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateClusterRequest.name)
}
::std::string* CreateClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CreateClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:CreateClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CreateClusterRequest.name)
}

// .ClusterType cluster = 2;
void CreateClusterRequest::clear_cluster() {
  cluster_ = 0;
}
::ClusterType CreateClusterRequest::cluster() const {
  // @@protoc_insertion_point(field_get:CreateClusterRequest.cluster)
  return static_cast< ::ClusterType >(cluster_);
}
void CreateClusterRequest::set_cluster(::ClusterType value) {
  
  cluster_ = value;
  // @@protoc_insertion_point(field_set:CreateClusterRequest.cluster)
}

// string description = 3;
void CreateClusterRequest::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateClusterRequest::description() const {
  // @@protoc_insertion_point(field_get:CreateClusterRequest.description)
  return description_.GetNoArena();
}
void CreateClusterRequest::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateClusterRequest.description)
}
#if LANG_CXX11
void CreateClusterRequest::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateClusterRequest.description)
}
#endif
void CreateClusterRequest::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateClusterRequest.description)
}
void CreateClusterRequest::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateClusterRequest.description)
}
::std::string* CreateClusterRequest::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:CreateClusterRequest.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClusterRequest::release_description() {
  // @@protoc_insertion_point(field_release:CreateClusterRequest.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClusterRequest::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:CreateClusterRequest.description)
}

// .ClusterStatus status = 4;
void CreateClusterRequest::clear_status() {
  status_ = 0;
}
::ClusterStatus CreateClusterRequest::status() const {
  // @@protoc_insertion_point(field_get:CreateClusterRequest.status)
  return static_cast< ::ClusterStatus >(status_);
}
void CreateClusterRequest::set_status(::ClusterStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CreateClusterRequest.status)
}

// string endpoint = 5;
void CreateClusterRequest::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateClusterRequest::endpoint() const {
  // @@protoc_insertion_point(field_get:CreateClusterRequest.endpoint)
  return endpoint_.GetNoArena();
}
void CreateClusterRequest::set_endpoint(const ::std::string& value) {
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateClusterRequest.endpoint)
}
#if LANG_CXX11
void CreateClusterRequest::set_endpoint(::std::string&& value) {
  
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateClusterRequest.endpoint)
}
#endif
void CreateClusterRequest::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateClusterRequest.endpoint)
}
void CreateClusterRequest::set_endpoint(const char* value, size_t size) {
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateClusterRequest.endpoint)
}
::std::string* CreateClusterRequest::mutable_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:CreateClusterRequest.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClusterRequest::release_endpoint() {
  // @@protoc_insertion_point(field_release:CreateClusterRequest.endpoint)
  
  return endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClusterRequest::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    
  } else {
    
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:CreateClusterRequest.endpoint)
}

// string internal_endpoint = 6;
void CreateClusterRequest::clear_internal_endpoint() {
  internal_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateClusterRequest::internal_endpoint() const {
  // @@protoc_insertion_point(field_get:CreateClusterRequest.internal_endpoint)
  return internal_endpoint_.GetNoArena();
}
void CreateClusterRequest::set_internal_endpoint(const ::std::string& value) {
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateClusterRequest.internal_endpoint)
}
#if LANG_CXX11
void CreateClusterRequest::set_internal_endpoint(::std::string&& value) {
  
  internal_endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateClusterRequest.internal_endpoint)
}
#endif
void CreateClusterRequest::set_internal_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateClusterRequest.internal_endpoint)
}
void CreateClusterRequest::set_internal_endpoint(const char* value, size_t size) {
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateClusterRequest.internal_endpoint)
}
::std::string* CreateClusterRequest::mutable_internal_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:CreateClusterRequest.internal_endpoint)
  return internal_endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClusterRequest::release_internal_endpoint() {
  // @@protoc_insertion_point(field_release:CreateClusterRequest.internal_endpoint)
  
  return internal_endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClusterRequest::set_allocated_internal_endpoint(::std::string* internal_endpoint) {
  if (internal_endpoint != NULL) {
    
  } else {
    
  }
  internal_endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), internal_endpoint);
  // @@protoc_insertion_point(field_set_allocated:CreateClusterRequest.internal_endpoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterReply::kCodeFieldNumber;
const int CreateClusterReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterReply::CreateClusterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateClusterReply)
}
CreateClusterReply::CreateClusterReply(const CreateClusterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:CreateClusterReply)
}

void CreateClusterReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

CreateClusterReply::~CreateClusterReply() {
  // @@protoc_insertion_point(destructor:CreateClusterReply)
  SharedDtor();
}

void CreateClusterReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateClusterReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateClusterReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateClusterReply& CreateClusterReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateClusterReply* CreateClusterReply::New(::google::protobuf::Arena* arena) const {
  CreateClusterReply* n = new CreateClusterReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateClusterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool CreateClusterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateClusterReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateClusterReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateClusterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateClusterReply)
  return false;
#undef DO_
}

void CreateClusterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateClusterReply)
}

::google::protobuf::uint8* CreateClusterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateClusterReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateClusterReply)
  return target;
}

size_t CreateClusterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateClusterReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateClusterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateClusterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateClusterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateClusterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateClusterReply)
    MergeFrom(*source);
  }
}

void CreateClusterReply::MergeFrom(const CreateClusterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateClusterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void CreateClusterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateClusterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterReply::CopyFrom(const CreateClusterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateClusterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterReply::IsInitialized() const {
  return true;
}

void CreateClusterReply::Swap(CreateClusterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterReply::InternalSwap(CreateClusterReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateClusterReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateClusterReply

// int32 code = 1;
void CreateClusterReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 CreateClusterReply::code() const {
  // @@protoc_insertion_point(field_get:CreateClusterReply.code)
  return code_;
}
void CreateClusterReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:CreateClusterReply.code)
}

// string message = 2;
void CreateClusterReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateClusterReply::message() const {
  // @@protoc_insertion_point(field_get:CreateClusterReply.message)
  return message_.GetNoArena();
}
void CreateClusterReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateClusterReply.message)
}
#if LANG_CXX11
void CreateClusterReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateClusterReply.message)
}
#endif
void CreateClusterReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateClusterReply.message)
}
void CreateClusterReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateClusterReply.message)
}
::std::string* CreateClusterReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CreateClusterReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClusterReply::release_message() {
  // @@protoc_insertion_point(field_release:CreateClusterReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClusterReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CreateClusterReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterInfoRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterInfoRequest::GetClusterInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetClusterInfoRequest)
}
GetClusterInfoRequest::GetClusterInfoRequest(const GetClusterInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:GetClusterInfoRequest)
}

void GetClusterInfoRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetClusterInfoRequest::~GetClusterInfoRequest() {
  // @@protoc_insertion_point(destructor:GetClusterInfoRequest)
  SharedDtor();
}

void GetClusterInfoRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterInfoRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterInfoRequest& GetClusterInfoRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetClusterInfoRequest* GetClusterInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetClusterInfoRequest* n = new GetClusterInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetClusterInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetClusterInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetClusterInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetClusterInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetClusterInfoRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetClusterInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetClusterInfoRequest)
  return false;
#undef DO_
}

void GetClusterInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetClusterInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetClusterInfoRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetClusterInfoRequest)
}

::google::protobuf::uint8* GetClusterInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetClusterInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetClusterInfoRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetClusterInfoRequest)
  return target;
}

size_t GetClusterInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetClusterInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetClusterInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetClusterInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetClusterInfoRequest)
    MergeFrom(*source);
  }
}

void GetClusterInfoRequest::MergeFrom(const GetClusterInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetClusterInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetClusterInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetClusterInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterInfoRequest::CopyFrom(const GetClusterInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetClusterInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterInfoRequest::IsInitialized() const {
  return true;
}

void GetClusterInfoRequest::Swap(GetClusterInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterInfoRequest::InternalSwap(GetClusterInfoRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetClusterInfoRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetClusterInfoRequest

// string name = 1;
void GetClusterInfoRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetClusterInfoRequest::name() const {
  // @@protoc_insertion_point(field_get:GetClusterInfoRequest.name)
  return name_.GetNoArena();
}
void GetClusterInfoRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetClusterInfoRequest.name)
}
#if LANG_CXX11
void GetClusterInfoRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetClusterInfoRequest.name)
}
#endif
void GetClusterInfoRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetClusterInfoRequest.name)
}
void GetClusterInfoRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetClusterInfoRequest.name)
}
::std::string* GetClusterInfoRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:GetClusterInfoRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetClusterInfoRequest::release_name() {
  // @@protoc_insertion_point(field_release:GetClusterInfoRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetClusterInfoRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GetClusterInfoRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterInfoReply::kCodeFieldNumber;
const int GetClusterInfoReply::kMessageFieldNumber;
const int GetClusterInfoReply::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterInfoReply::GetClusterInfoReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetClusterInfoReply)
}
GetClusterInfoReply::GetClusterInfoReply(const GetClusterInfoReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_cluster()) {
    cluster_ = new ::ClusterInfo(*from.cluster_);
  } else {
    cluster_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GetClusterInfoReply)
}

void GetClusterInfoReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&cluster_)) + sizeof(code_));
  _cached_size_ = 0;
}

GetClusterInfoReply::~GetClusterInfoReply() {
  // @@protoc_insertion_point(destructor:GetClusterInfoReply)
  SharedDtor();
}

void GetClusterInfoReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cluster_;
}

void GetClusterInfoReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterInfoReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterInfoReply& GetClusterInfoReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetClusterInfoReply* GetClusterInfoReply::New(::google::protobuf::Arena* arena) const {
  GetClusterInfoReply* n = new GetClusterInfoReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetClusterInfoReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GetClusterInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) {
    delete cluster_;
  }
  cluster_ = NULL;
  code_ = 0;
  _internal_metadata_.Clear();
}

bool GetClusterInfoReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetClusterInfoReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetClusterInfoReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClusterInfo cluster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetClusterInfoReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetClusterInfoReply)
  return false;
#undef DO_
}

void GetClusterInfoReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetClusterInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetClusterInfoReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .ClusterInfo cluster = 3;
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cluster_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetClusterInfoReply)
}

::google::protobuf::uint8* GetClusterInfoReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetClusterInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetClusterInfoReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .ClusterInfo cluster = 3;
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cluster_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetClusterInfoReply)
  return target;
}

size_t GetClusterInfoReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetClusterInfoReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .ClusterInfo cluster = 3;
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cluster_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterInfoReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetClusterInfoReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterInfoReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterInfoReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetClusterInfoReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetClusterInfoReply)
    MergeFrom(*source);
  }
}

void GetClusterInfoReply::MergeFrom(const GetClusterInfoReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetClusterInfoReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_cluster()) {
    mutable_cluster()->::ClusterInfo::MergeFrom(from.cluster());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void GetClusterInfoReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetClusterInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterInfoReply::CopyFrom(const GetClusterInfoReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetClusterInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterInfoReply::IsInitialized() const {
  return true;
}

void GetClusterInfoReply::Swap(GetClusterInfoReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterInfoReply::InternalSwap(GetClusterInfoReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(cluster_, other->cluster_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetClusterInfoReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetClusterInfoReply

// int32 code = 1;
void GetClusterInfoReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 GetClusterInfoReply::code() const {
  // @@protoc_insertion_point(field_get:GetClusterInfoReply.code)
  return code_;
}
void GetClusterInfoReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:GetClusterInfoReply.code)
}

// string message = 2;
void GetClusterInfoReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetClusterInfoReply::message() const {
  // @@protoc_insertion_point(field_get:GetClusterInfoReply.message)
  return message_.GetNoArena();
}
void GetClusterInfoReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetClusterInfoReply.message)
}
#if LANG_CXX11
void GetClusterInfoReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetClusterInfoReply.message)
}
#endif
void GetClusterInfoReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetClusterInfoReply.message)
}
void GetClusterInfoReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetClusterInfoReply.message)
}
::std::string* GetClusterInfoReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:GetClusterInfoReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetClusterInfoReply::release_message() {
  // @@protoc_insertion_point(field_release:GetClusterInfoReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetClusterInfoReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:GetClusterInfoReply.message)
}

// .ClusterInfo cluster = 3;
bool GetClusterInfoReply::has_cluster() const {
  return this != internal_default_instance() && cluster_ != NULL;
}
void GetClusterInfoReply::clear_cluster() {
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) delete cluster_;
  cluster_ = NULL;
}
const ::ClusterInfo& GetClusterInfoReply::cluster() const {
  const ::ClusterInfo* p = cluster_;
  // @@protoc_insertion_point(field_get:GetClusterInfoReply.cluster)
  return p != NULL ? *p : *reinterpret_cast<const ::ClusterInfo*>(
      &::_ClusterInfo_default_instance_);
}
::ClusterInfo* GetClusterInfoReply::mutable_cluster() {
  
  if (cluster_ == NULL) {
    cluster_ = new ::ClusterInfo;
  }
  // @@protoc_insertion_point(field_mutable:GetClusterInfoReply.cluster)
  return cluster_;
}
::ClusterInfo* GetClusterInfoReply::release_cluster() {
  // @@protoc_insertion_point(field_release:GetClusterInfoReply.cluster)
  
  ::ClusterInfo* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
void GetClusterInfoReply::set_allocated_cluster(::ClusterInfo* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GetClusterInfoReply.cluster)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterInfo::kIdFieldNumber;
const int ClusterInfo::kNameFieldNumber;
const int ClusterInfo::kEndpointFieldNumber;
const int ClusterInfo::kInternalEndpointFieldNumber;
const int ClusterInfo::kTypeFieldNumber;
const int ClusterInfo::kDescriptionFieldNumber;
const int ClusterInfo::kCreateTimeFieldNumber;
const int ClusterInfo::kLastUpdateTimeFieldNumber;
const int ClusterInfo::kStatusFieldNumber;
const int ClusterInfo::kEsVersionFieldNumber;
const int ClusterInfo::kTotalProjectNumberFieldNumber;
const int ClusterInfo::kTotalIndexNumberFieldNumber;
const int ClusterInfo::kTotalDocNumberFieldNumber;
const int ClusterInfo::kTotalDataSizeFieldNumber;
const int ClusterInfo::kClusterHealthFieldNumber;
const int ClusterInfo::kNodesFieldNumber;
const int ClusterInfo::kTotalTemplateNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterInfo::ClusterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClusterInfo)
}
ClusterInfo::ClusterInfo(const ClusterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.endpoint().size() > 0) {
    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  internal_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.internal_endpoint().size() > 0) {
    internal_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_endpoint_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  es_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.es_version().size() > 0) {
    es_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.es_version_);
  }
  cluster_health_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_health().size() > 0) {
    cluster_health_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_health_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_template_number_) -
    reinterpret_cast<char*>(&id_)) + sizeof(total_template_number_));
  // @@protoc_insertion_point(copy_constructor:ClusterInfo)
}

void ClusterInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  es_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_health_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_template_number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(total_template_number_));
  _cached_size_ = 0;
}

ClusterInfo::~ClusterInfo() {
  // @@protoc_insertion_point(destructor:ClusterInfo)
  SharedDtor();
}

void ClusterInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  es_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_health_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClusterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterInfo::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterInfo& ClusterInfo::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClusterInfo* ClusterInfo::New(::google::protobuf::Arena* arena) const {
  ClusterInfo* n = new ClusterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClusterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  es_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_template_number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(total_template_number_));
  _internal_metadata_.Clear();
}

bool ClusterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClusterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClusterInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint().data(), static_cast<int>(this->endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClusterInfo.endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string internal_endpoint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClusterInfo.internal_endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClusterType type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ClusterType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClusterInfo.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 last_update_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClusterStatus status = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ClusterStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string es_version = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_es_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->es_version().data(), static_cast<int>(this->es_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClusterInfo.es_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_project_number = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_project_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_index_number = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_index_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_doc_number = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_doc_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_data_size = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_data_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_health = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_health()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_health().data(), static_cast<int>(this->cluster_health().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClusterInfo.cluster_health"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NodeInfo nodes = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_template_number = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_template_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClusterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClusterInfo)
  return false;
#undef DO_
}

void ClusterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClusterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string endpoint = 3;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint(), output);
  }

  // string internal_endpoint = 4;
  if (this->internal_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.internal_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->internal_endpoint(), output);
  }

  // .ClusterType type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // int64 create_time = 7;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->create_time(), output);
  }

  // int64 last_update_time = 8;
  if (this->last_update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->last_update_time(), output);
  }

  // .ClusterStatus status = 9;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->status(), output);
  }

  // string es_version = 10;
  if (this->es_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->es_version().data(), static_cast<int>(this->es_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.es_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->es_version(), output);
  }

  // int32 total_project_number = 11;
  if (this->total_project_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->total_project_number(), output);
  }

  // int32 total_index_number = 12;
  if (this->total_index_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->total_index_number(), output);
  }

  // int64 total_doc_number = 13;
  if (this->total_doc_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->total_doc_number(), output);
  }

  // int64 total_data_size = 14;
  if (this->total_data_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->total_data_size(), output);
  }

  // string cluster_health = 15;
  if (this->cluster_health().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_health().data(), static_cast<int>(this->cluster_health().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.cluster_health");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->cluster_health(), output);
  }

  // repeated .NodeInfo nodes = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->nodes(static_cast<int>(i)), output);
  }

  // int32 total_template_number = 17;
  if (this->total_template_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->total_template_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClusterInfo)
}

::google::protobuf::uint8* ClusterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClusterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string endpoint = 3;
  if (this->endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint().data(), static_cast<int>(this->endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint(), target);
  }

  // string internal_endpoint = 4;
  if (this->internal_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.internal_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->internal_endpoint(), target);
  }

  // .ClusterType type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // int64 create_time = 7;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->create_time(), target);
  }

  // int64 last_update_time = 8;
  if (this->last_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->last_update_time(), target);
  }

  // .ClusterStatus status = 9;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->status(), target);
  }

  // string es_version = 10;
  if (this->es_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->es_version().data(), static_cast<int>(this->es_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.es_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->es_version(), target);
  }

  // int32 total_project_number = 11;
  if (this->total_project_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->total_project_number(), target);
  }

  // int32 total_index_number = 12;
  if (this->total_index_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->total_index_number(), target);
  }

  // int64 total_doc_number = 13;
  if (this->total_doc_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->total_doc_number(), target);
  }

  // int64 total_data_size = 14;
  if (this->total_data_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->total_data_size(), target);
  }

  // string cluster_health = 15;
  if (this->cluster_health().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_health().data(), static_cast<int>(this->cluster_health().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterInfo.cluster_health");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->cluster_health(), target);
  }

  // repeated .NodeInfo nodes = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // int32 total_template_number = 17;
  if (this->total_template_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->total_template_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClusterInfo)
  return target;
}

size_t ClusterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClusterInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NodeInfo nodes = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string endpoint = 3;
  if (this->endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint());
  }

  // string internal_endpoint = 4;
  if (this->internal_endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->internal_endpoint());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string es_version = 10;
  if (this->es_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->es_version());
  }

  // string cluster_health = 15;
  if (this->cluster_health().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_health());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // .ClusterType type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int64 create_time = 7;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_time());
  }

  // int64 last_update_time = 8;
  if (this->last_update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last_update_time());
  }

  // .ClusterStatus status = 9;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 total_project_number = 11;
  if (this->total_project_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_project_number());
  }

  // int64 total_doc_number = 13;
  if (this->total_doc_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_doc_number());
  }

  // int64 total_data_size = 14;
  if (this->total_data_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_data_size());
  }

  // int32 total_index_number = 12;
  if (this->total_index_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_index_number());
  }

  // int32 total_template_number = 17;
  if (this->total_template_number() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_template_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClusterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClusterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClusterInfo)
    MergeFrom(*source);
  }
}

void ClusterInfo::MergeFrom(const ClusterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClusterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.endpoint().size() > 0) {

    endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_);
  }
  if (from.internal_endpoint().size() > 0) {

    internal_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_endpoint_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.es_version().size() > 0) {

    es_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.es_version_);
  }
  if (from.cluster_health().size() > 0) {

    cluster_health_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_health_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.last_update_time() != 0) {
    set_last_update_time(from.last_update_time());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.total_project_number() != 0) {
    set_total_project_number(from.total_project_number());
  }
  if (from.total_doc_number() != 0) {
    set_total_doc_number(from.total_doc_number());
  }
  if (from.total_data_size() != 0) {
    set_total_data_size(from.total_data_size());
  }
  if (from.total_index_number() != 0) {
    set_total_index_number(from.total_index_number());
  }
  if (from.total_template_number() != 0) {
    set_total_template_number(from.total_template_number());
  }
}

void ClusterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClusterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterInfo::CopyFrom(const ClusterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClusterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterInfo::IsInitialized() const {
  return true;
}

void ClusterInfo::Swap(ClusterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterInfo::InternalSwap(ClusterInfo* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  name_.Swap(&other->name_);
  endpoint_.Swap(&other->endpoint_);
  internal_endpoint_.Swap(&other->internal_endpoint_);
  description_.Swap(&other->description_);
  es_version_.Swap(&other->es_version_);
  cluster_health_.Swap(&other->cluster_health_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(create_time_, other->create_time_);
  swap(last_update_time_, other->last_update_time_);
  swap(status_, other->status_);
  swap(total_project_number_, other->total_project_number_);
  swap(total_doc_number_, other->total_doc_number_);
  swap(total_data_size_, other->total_data_size_);
  swap(total_index_number_, other->total_index_number_);
  swap(total_template_number_, other->total_template_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterInfo::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterInfo

// int32 id = 1;
void ClusterInfo::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 ClusterInfo::id() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.id)
  return id_;
}
void ClusterInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.id)
}

// string name = 2;
void ClusterInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterInfo::name() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.name)
  return name_.GetNoArena();
}
void ClusterInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClusterInfo.name)
}
#if LANG_CXX11
void ClusterInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClusterInfo.name)
}
#endif
void ClusterInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClusterInfo.name)
}
void ClusterInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClusterInfo.name)
}
::std::string* ClusterInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ClusterInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterInfo::release_name() {
  // @@protoc_insertion_point(field_release:ClusterInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ClusterInfo.name)
}

// string endpoint = 3;
void ClusterInfo::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterInfo::endpoint() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.endpoint)
  return endpoint_.GetNoArena();
}
void ClusterInfo::set_endpoint(const ::std::string& value) {
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClusterInfo.endpoint)
}
#if LANG_CXX11
void ClusterInfo::set_endpoint(::std::string&& value) {
  
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClusterInfo.endpoint)
}
#endif
void ClusterInfo::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClusterInfo.endpoint)
}
void ClusterInfo::set_endpoint(const char* value, size_t size) {
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClusterInfo.endpoint)
}
::std::string* ClusterInfo::mutable_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:ClusterInfo.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterInfo::release_endpoint() {
  // @@protoc_insertion_point(field_release:ClusterInfo.endpoint)
  
  return endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterInfo::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    
  } else {
    
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:ClusterInfo.endpoint)
}

// string internal_endpoint = 4;
void ClusterInfo::clear_internal_endpoint() {
  internal_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterInfo::internal_endpoint() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.internal_endpoint)
  return internal_endpoint_.GetNoArena();
}
void ClusterInfo::set_internal_endpoint(const ::std::string& value) {
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClusterInfo.internal_endpoint)
}
#if LANG_CXX11
void ClusterInfo::set_internal_endpoint(::std::string&& value) {
  
  internal_endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClusterInfo.internal_endpoint)
}
#endif
void ClusterInfo::set_internal_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClusterInfo.internal_endpoint)
}
void ClusterInfo::set_internal_endpoint(const char* value, size_t size) {
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClusterInfo.internal_endpoint)
}
::std::string* ClusterInfo::mutable_internal_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:ClusterInfo.internal_endpoint)
  return internal_endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterInfo::release_internal_endpoint() {
  // @@protoc_insertion_point(field_release:ClusterInfo.internal_endpoint)
  
  return internal_endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterInfo::set_allocated_internal_endpoint(::std::string* internal_endpoint) {
  if (internal_endpoint != NULL) {
    
  } else {
    
  }
  internal_endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), internal_endpoint);
  // @@protoc_insertion_point(field_set_allocated:ClusterInfo.internal_endpoint)
}

// .ClusterType type = 5;
void ClusterInfo::clear_type() {
  type_ = 0;
}
::ClusterType ClusterInfo::type() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.type)
  return static_cast< ::ClusterType >(type_);
}
void ClusterInfo::set_type(::ClusterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.type)
}

// string description = 6;
void ClusterInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterInfo::description() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.description)
  return description_.GetNoArena();
}
void ClusterInfo::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClusterInfo.description)
}
#if LANG_CXX11
void ClusterInfo::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClusterInfo.description)
}
#endif
void ClusterInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClusterInfo.description)
}
void ClusterInfo::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClusterInfo.description)
}
::std::string* ClusterInfo::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:ClusterInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterInfo::release_description() {
  // @@protoc_insertion_point(field_release:ClusterInfo.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ClusterInfo.description)
}

// int64 create_time = 7;
void ClusterInfo::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ClusterInfo::create_time() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.create_time)
  return create_time_;
}
void ClusterInfo::set_create_time(::google::protobuf::int64 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.create_time)
}

// int64 last_update_time = 8;
void ClusterInfo::clear_last_update_time() {
  last_update_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ClusterInfo::last_update_time() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.last_update_time)
  return last_update_time_;
}
void ClusterInfo::set_last_update_time(::google::protobuf::int64 value) {
  
  last_update_time_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.last_update_time)
}

// .ClusterStatus status = 9;
void ClusterInfo::clear_status() {
  status_ = 0;
}
::ClusterStatus ClusterInfo::status() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.status)
  return static_cast< ::ClusterStatus >(status_);
}
void ClusterInfo::set_status(::ClusterStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.status)
}

// string es_version = 10;
void ClusterInfo::clear_es_version() {
  es_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterInfo::es_version() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.es_version)
  return es_version_.GetNoArena();
}
void ClusterInfo::set_es_version(const ::std::string& value) {
  
  es_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClusterInfo.es_version)
}
#if LANG_CXX11
void ClusterInfo::set_es_version(::std::string&& value) {
  
  es_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClusterInfo.es_version)
}
#endif
void ClusterInfo::set_es_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  es_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClusterInfo.es_version)
}
void ClusterInfo::set_es_version(const char* value, size_t size) {
  
  es_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClusterInfo.es_version)
}
::std::string* ClusterInfo::mutable_es_version() {
  
  // @@protoc_insertion_point(field_mutable:ClusterInfo.es_version)
  return es_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterInfo::release_es_version() {
  // @@protoc_insertion_point(field_release:ClusterInfo.es_version)
  
  return es_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterInfo::set_allocated_es_version(::std::string* es_version) {
  if (es_version != NULL) {
    
  } else {
    
  }
  es_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), es_version);
  // @@protoc_insertion_point(field_set_allocated:ClusterInfo.es_version)
}

// int32 total_project_number = 11;
void ClusterInfo::clear_total_project_number() {
  total_project_number_ = 0;
}
::google::protobuf::int32 ClusterInfo::total_project_number() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.total_project_number)
  return total_project_number_;
}
void ClusterInfo::set_total_project_number(::google::protobuf::int32 value) {
  
  total_project_number_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.total_project_number)
}

// int32 total_index_number = 12;
void ClusterInfo::clear_total_index_number() {
  total_index_number_ = 0;
}
::google::protobuf::int32 ClusterInfo::total_index_number() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.total_index_number)
  return total_index_number_;
}
void ClusterInfo::set_total_index_number(::google::protobuf::int32 value) {
  
  total_index_number_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.total_index_number)
}

// int64 total_doc_number = 13;
void ClusterInfo::clear_total_doc_number() {
  total_doc_number_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ClusterInfo::total_doc_number() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.total_doc_number)
  return total_doc_number_;
}
void ClusterInfo::set_total_doc_number(::google::protobuf::int64 value) {
  
  total_doc_number_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.total_doc_number)
}

// int64 total_data_size = 14;
void ClusterInfo::clear_total_data_size() {
  total_data_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ClusterInfo::total_data_size() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.total_data_size)
  return total_data_size_;
}
void ClusterInfo::set_total_data_size(::google::protobuf::int64 value) {
  
  total_data_size_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.total_data_size)
}

// string cluster_health = 15;
void ClusterInfo::clear_cluster_health() {
  cluster_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterInfo::cluster_health() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.cluster_health)
  return cluster_health_.GetNoArena();
}
void ClusterInfo::set_cluster_health(const ::std::string& value) {
  
  cluster_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClusterInfo.cluster_health)
}
#if LANG_CXX11
void ClusterInfo::set_cluster_health(::std::string&& value) {
  
  cluster_health_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClusterInfo.cluster_health)
}
#endif
void ClusterInfo::set_cluster_health(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClusterInfo.cluster_health)
}
void ClusterInfo::set_cluster_health(const char* value, size_t size) {
  
  cluster_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClusterInfo.cluster_health)
}
::std::string* ClusterInfo::mutable_cluster_health() {
  
  // @@protoc_insertion_point(field_mutable:ClusterInfo.cluster_health)
  return cluster_health_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterInfo::release_cluster_health() {
  // @@protoc_insertion_point(field_release:ClusterInfo.cluster_health)
  
  return cluster_health_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterInfo::set_allocated_cluster_health(::std::string* cluster_health) {
  if (cluster_health != NULL) {
    
  } else {
    
  }
  cluster_health_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_health);
  // @@protoc_insertion_point(field_set_allocated:ClusterInfo.cluster_health)
}

// repeated .NodeInfo nodes = 16;
int ClusterInfo::nodes_size() const {
  return nodes_.size();
}
void ClusterInfo::clear_nodes() {
  nodes_.Clear();
}
const ::NodeInfo& ClusterInfo::nodes(int index) const {
  // @@protoc_insertion_point(field_get:ClusterInfo.nodes)
  return nodes_.Get(index);
}
::NodeInfo* ClusterInfo::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:ClusterInfo.nodes)
  return nodes_.Mutable(index);
}
::NodeInfo* ClusterInfo::add_nodes() {
  // @@protoc_insertion_point(field_add:ClusterInfo.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::NodeInfo >*
ClusterInfo::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:ClusterInfo.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::NodeInfo >&
ClusterInfo::nodes() const {
  // @@protoc_insertion_point(field_list:ClusterInfo.nodes)
  return nodes_;
}

// int32 total_template_number = 17;
void ClusterInfo::clear_total_template_number() {
  total_template_number_ = 0;
}
::google::protobuf::int32 ClusterInfo::total_template_number() const {
  // @@protoc_insertion_point(field_get:ClusterInfo.total_template_number)
  return total_template_number_;
}
void ClusterInfo::set_total_template_number(::google::protobuf::int32 value) {
  
  total_template_number_ = value;
  // @@protoc_insertion_point(field_set:ClusterInfo.total_template_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeInfo::kIdFieldNumber;
const int NodeInfo::kNameFieldNumber;
const int NodeInfo::kIpAddressFieldNumber;
const int NodeInfo::kIsMasterFieldNumber;
const int NodeInfo::kCpuPercentFieldNumber;
const int NodeInfo::kRamMaxFieldNumber;
const int NodeInfo::kRamCurrentFieldNumber;
const int NodeInfo::kHeapMaxFieldNumber;
const int NodeInfo::kHeapCurrentFieldNumber;
const int NodeInfo::kDiskAvailFieldNumber;
const int NodeInfo::kDiskPercentFieldNumber;
const int NodeInfo::kGroupFieldNumber;
const int NodeInfo::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeInfo::NodeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NodeInfo)
}
NodeInfo::NodeInfo(const NodeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_address().size() > 0) {
    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  ram_max_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ram_max().size() > 0) {
    ram_max_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_max_);
  }
  ram_current_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ram_current().size() > 0) {
    ram_current_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_current_);
  }
  heap_max_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.heap_max().size() > 0) {
    heap_max_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heap_max_);
  }
  heap_current_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.heap_current().size() > 0) {
    heap_current_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heap_current_);
  }
  disk_avail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.disk_avail().size() > 0) {
    disk_avail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disk_avail_);
  }
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group().size() > 0) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tag().size() > 0) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&disk_percent_) -
    reinterpret_cast<char*>(&id_)) + sizeof(disk_percent_));
  // @@protoc_insertion_point(copy_constructor:NodeInfo)
}

void NodeInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_max_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_current_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heap_max_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heap_current_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_avail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disk_percent_) -
      reinterpret_cast<char*>(&id_)) + sizeof(disk_percent_));
  _cached_size_ = 0;
}

NodeInfo::~NodeInfo() {
  // @@protoc_insertion_point(destructor:NodeInfo)
  SharedDtor();
}

void NodeInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_max_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_current_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heap_max_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heap_current_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_avail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeInfo::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeInfo& NodeInfo::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

NodeInfo* NodeInfo::New(::google::protobuf::Arena* arena) const {
  NodeInfo* n = new NodeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_max_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_current_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heap_max_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heap_current_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disk_avail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disk_percent_) -
      reinterpret_cast<char*>(&id_)) + sizeof(disk_percent_));
  _internal_metadata_.Clear();
}

bool NodeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NodeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), static_cast<int>(this->ip_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.ip_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_master = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_master_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cpu_percent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cpu_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ram_max = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ram_max()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ram_max().data(), static_cast<int>(this->ram_max().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.ram_max"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ram_current = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ram_current()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ram_current().data(), static_cast<int>(this->ram_current().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.ram_current"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string heap_max = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_heap_max()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->heap_max().data(), static_cast<int>(this->heap_max().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.heap_max"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string heap_current = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_heap_current()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->heap_current().data(), static_cast<int>(this->heap_current().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.heap_current"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string disk_avail = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disk_avail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->disk_avail().data(), static_cast<int>(this->disk_avail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.disk_avail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double disk_percent = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &disk_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group().data(), static_cast<int>(this->group().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tag = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeInfo.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NodeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NodeInfo)
  return false;
#undef DO_
}

void NodeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_address(), output);
  }

  // bool is_master = 4;
  if (this->is_master() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_master(), output);
  }

  // double cpu_percent = 5;
  if (this->cpu_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->cpu_percent(), output);
  }

  // string ram_max = 6;
  if (this->ram_max().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram_max().data(), static_cast<int>(this->ram_max().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.ram_max");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->ram_max(), output);
  }

  // string ram_current = 7;
  if (this->ram_current().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram_current().data(), static_cast<int>(this->ram_current().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.ram_current");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ram_current(), output);
  }

  // string heap_max = 8;
  if (this->heap_max().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->heap_max().data(), static_cast<int>(this->heap_max().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.heap_max");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->heap_max(), output);
  }

  // string heap_current = 9;
  if (this->heap_current().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->heap_current().data(), static_cast<int>(this->heap_current().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.heap_current");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->heap_current(), output);
  }

  // string disk_avail = 10;
  if (this->disk_avail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk_avail().data(), static_cast<int>(this->disk_avail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.disk_avail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->disk_avail(), output);
  }

  // double disk_percent = 11;
  if (this->disk_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->disk_percent(), output);
  }

  // string group = 12;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), static_cast<int>(this->group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->group(), output);
  }

  // string tag = 13;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->tag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NodeInfo)
}

::google::protobuf::uint8* NodeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_address(), target);
  }

  // bool is_master = 4;
  if (this->is_master() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_master(), target);
  }

  // double cpu_percent = 5;
  if (this->cpu_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->cpu_percent(), target);
  }

  // string ram_max = 6;
  if (this->ram_max().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram_max().data(), static_cast<int>(this->ram_max().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.ram_max");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->ram_max(), target);
  }

  // string ram_current = 7;
  if (this->ram_current().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram_current().data(), static_cast<int>(this->ram_current().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.ram_current");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ram_current(), target);
  }

  // string heap_max = 8;
  if (this->heap_max().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->heap_max().data(), static_cast<int>(this->heap_max().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.heap_max");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->heap_max(), target);
  }

  // string heap_current = 9;
  if (this->heap_current().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->heap_current().data(), static_cast<int>(this->heap_current().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.heap_current");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->heap_current(), target);
  }

  // string disk_avail = 10;
  if (this->disk_avail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disk_avail().data(), static_cast<int>(this->disk_avail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.disk_avail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->disk_avail(), target);
  }

  // double disk_percent = 11;
  if (this->disk_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->disk_percent(), target);
  }

  // string group = 12;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), static_cast<int>(this->group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->group(), target);
  }

  // string tag = 13;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeInfo.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->tag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NodeInfo)
  return target;
}

size_t NodeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NodeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // string ram_max = 6;
  if (this->ram_max().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ram_max());
  }

  // string ram_current = 7;
  if (this->ram_current().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ram_current());
  }

  // string heap_max = 8;
  if (this->heap_max().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->heap_max());
  }

  // string heap_current = 9;
  if (this->heap_current().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->heap_current());
  }

  // string disk_avail = 10;
  if (this->disk_avail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->disk_avail());
  }

  // string group = 12;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  // string tag = 13;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // bool is_master = 4;
  if (this->is_master() != 0) {
    total_size += 1 + 1;
  }

  // double cpu_percent = 5;
  if (this->cpu_percent() != 0) {
    total_size += 1 + 8;
  }

  // double disk_percent = 11;
  if (this->disk_percent() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NodeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NodeInfo)
    MergeFrom(*source);
  }
}

void NodeInfo::MergeFrom(const NodeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.ram_max().size() > 0) {

    ram_max_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_max_);
  }
  if (from.ram_current().size() > 0) {

    ram_current_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_current_);
  }
  if (from.heap_max().size() > 0) {

    heap_max_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heap_max_);
  }
  if (from.heap_current().size() > 0) {

    heap_current_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heap_current_);
  }
  if (from.disk_avail().size() > 0) {

    disk_avail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disk_avail_);
  }
  if (from.group().size() > 0) {

    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.is_master() != 0) {
    set_is_master(from.is_master());
  }
  if (from.cpu_percent() != 0) {
    set_cpu_percent(from.cpu_percent());
  }
  if (from.disk_percent() != 0) {
    set_disk_percent(from.disk_percent());
  }
}

void NodeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeInfo::CopyFrom(const NodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeInfo::IsInitialized() const {
  return true;
}

void NodeInfo::Swap(NodeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeInfo::InternalSwap(NodeInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  ip_address_.Swap(&other->ip_address_);
  ram_max_.Swap(&other->ram_max_);
  ram_current_.Swap(&other->ram_current_);
  heap_max_.Swap(&other->heap_max_);
  heap_current_.Swap(&other->heap_current_);
  disk_avail_.Swap(&other->disk_avail_);
  group_.Swap(&other->group_);
  tag_.Swap(&other->tag_);
  swap(id_, other->id_);
  swap(is_master_, other->is_master_);
  swap(cpu_percent_, other->cpu_percent_);
  swap(disk_percent_, other->disk_percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeInfo::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeInfo

// int32 id = 1;
void NodeInfo::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 NodeInfo::id() const {
  // @@protoc_insertion_point(field_get:NodeInfo.id)
  return id_;
}
void NodeInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NodeInfo.id)
}

// string name = 2;
void NodeInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::name() const {
  // @@protoc_insertion_point(field_get:NodeInfo.name)
  return name_.GetNoArena();
}
void NodeInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.name)
}
#if LANG_CXX11
void NodeInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.name)
}
#endif
void NodeInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.name)
}
void NodeInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.name)
}
::std::string* NodeInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_name() {
  // @@protoc_insertion_point(field_release:NodeInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.name)
}

// string ip_address = 3;
void NodeInfo::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::ip_address() const {
  // @@protoc_insertion_point(field_get:NodeInfo.ip_address)
  return ip_address_.GetNoArena();
}
void NodeInfo::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.ip_address)
}
#if LANG_CXX11
void NodeInfo::set_ip_address(::std::string&& value) {
  
  ip_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.ip_address)
}
#endif
void NodeInfo::set_ip_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.ip_address)
}
void NodeInfo::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.ip_address)
}
::std::string* NodeInfo::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_ip_address() {
  // @@protoc_insertion_point(field_release:NodeInfo.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.ip_address)
}

// bool is_master = 4;
void NodeInfo::clear_is_master() {
  is_master_ = false;
}
bool NodeInfo::is_master() const {
  // @@protoc_insertion_point(field_get:NodeInfo.is_master)
  return is_master_;
}
void NodeInfo::set_is_master(bool value) {
  
  is_master_ = value;
  // @@protoc_insertion_point(field_set:NodeInfo.is_master)
}

// double cpu_percent = 5;
void NodeInfo::clear_cpu_percent() {
  cpu_percent_ = 0;
}
double NodeInfo::cpu_percent() const {
  // @@protoc_insertion_point(field_get:NodeInfo.cpu_percent)
  return cpu_percent_;
}
void NodeInfo::set_cpu_percent(double value) {
  
  cpu_percent_ = value;
  // @@protoc_insertion_point(field_set:NodeInfo.cpu_percent)
}

// string ram_max = 6;
void NodeInfo::clear_ram_max() {
  ram_max_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::ram_max() const {
  // @@protoc_insertion_point(field_get:NodeInfo.ram_max)
  return ram_max_.GetNoArena();
}
void NodeInfo::set_ram_max(const ::std::string& value) {
  
  ram_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.ram_max)
}
#if LANG_CXX11
void NodeInfo::set_ram_max(::std::string&& value) {
  
  ram_max_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.ram_max)
}
#endif
void NodeInfo::set_ram_max(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ram_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.ram_max)
}
void NodeInfo::set_ram_max(const char* value, size_t size) {
  
  ram_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.ram_max)
}
::std::string* NodeInfo::mutable_ram_max() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.ram_max)
  return ram_max_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_ram_max() {
  // @@protoc_insertion_point(field_release:NodeInfo.ram_max)
  
  return ram_max_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_ram_max(::std::string* ram_max) {
  if (ram_max != NULL) {
    
  } else {
    
  }
  ram_max_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ram_max);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.ram_max)
}

// string ram_current = 7;
void NodeInfo::clear_ram_current() {
  ram_current_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::ram_current() const {
  // @@protoc_insertion_point(field_get:NodeInfo.ram_current)
  return ram_current_.GetNoArena();
}
void NodeInfo::set_ram_current(const ::std::string& value) {
  
  ram_current_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.ram_current)
}
#if LANG_CXX11
void NodeInfo::set_ram_current(::std::string&& value) {
  
  ram_current_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.ram_current)
}
#endif
void NodeInfo::set_ram_current(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ram_current_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.ram_current)
}
void NodeInfo::set_ram_current(const char* value, size_t size) {
  
  ram_current_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.ram_current)
}
::std::string* NodeInfo::mutable_ram_current() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.ram_current)
  return ram_current_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_ram_current() {
  // @@protoc_insertion_point(field_release:NodeInfo.ram_current)
  
  return ram_current_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_ram_current(::std::string* ram_current) {
  if (ram_current != NULL) {
    
  } else {
    
  }
  ram_current_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ram_current);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.ram_current)
}

// string heap_max = 8;
void NodeInfo::clear_heap_max() {
  heap_max_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::heap_max() const {
  // @@protoc_insertion_point(field_get:NodeInfo.heap_max)
  return heap_max_.GetNoArena();
}
void NodeInfo::set_heap_max(const ::std::string& value) {
  
  heap_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.heap_max)
}
#if LANG_CXX11
void NodeInfo::set_heap_max(::std::string&& value) {
  
  heap_max_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.heap_max)
}
#endif
void NodeInfo::set_heap_max(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  heap_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.heap_max)
}
void NodeInfo::set_heap_max(const char* value, size_t size) {
  
  heap_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.heap_max)
}
::std::string* NodeInfo::mutable_heap_max() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.heap_max)
  return heap_max_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_heap_max() {
  // @@protoc_insertion_point(field_release:NodeInfo.heap_max)
  
  return heap_max_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_heap_max(::std::string* heap_max) {
  if (heap_max != NULL) {
    
  } else {
    
  }
  heap_max_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), heap_max);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.heap_max)
}

// string heap_current = 9;
void NodeInfo::clear_heap_current() {
  heap_current_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::heap_current() const {
  // @@protoc_insertion_point(field_get:NodeInfo.heap_current)
  return heap_current_.GetNoArena();
}
void NodeInfo::set_heap_current(const ::std::string& value) {
  
  heap_current_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.heap_current)
}
#if LANG_CXX11
void NodeInfo::set_heap_current(::std::string&& value) {
  
  heap_current_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.heap_current)
}
#endif
void NodeInfo::set_heap_current(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  heap_current_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.heap_current)
}
void NodeInfo::set_heap_current(const char* value, size_t size) {
  
  heap_current_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.heap_current)
}
::std::string* NodeInfo::mutable_heap_current() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.heap_current)
  return heap_current_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_heap_current() {
  // @@protoc_insertion_point(field_release:NodeInfo.heap_current)
  
  return heap_current_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_heap_current(::std::string* heap_current) {
  if (heap_current != NULL) {
    
  } else {
    
  }
  heap_current_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), heap_current);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.heap_current)
}

// string disk_avail = 10;
void NodeInfo::clear_disk_avail() {
  disk_avail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::disk_avail() const {
  // @@protoc_insertion_point(field_get:NodeInfo.disk_avail)
  return disk_avail_.GetNoArena();
}
void NodeInfo::set_disk_avail(const ::std::string& value) {
  
  disk_avail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.disk_avail)
}
#if LANG_CXX11
void NodeInfo::set_disk_avail(::std::string&& value) {
  
  disk_avail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.disk_avail)
}
#endif
void NodeInfo::set_disk_avail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  disk_avail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.disk_avail)
}
void NodeInfo::set_disk_avail(const char* value, size_t size) {
  
  disk_avail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.disk_avail)
}
::std::string* NodeInfo::mutable_disk_avail() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.disk_avail)
  return disk_avail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_disk_avail() {
  // @@protoc_insertion_point(field_release:NodeInfo.disk_avail)
  
  return disk_avail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_disk_avail(::std::string* disk_avail) {
  if (disk_avail != NULL) {
    
  } else {
    
  }
  disk_avail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), disk_avail);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.disk_avail)
}

// double disk_percent = 11;
void NodeInfo::clear_disk_percent() {
  disk_percent_ = 0;
}
double NodeInfo::disk_percent() const {
  // @@protoc_insertion_point(field_get:NodeInfo.disk_percent)
  return disk_percent_;
}
void NodeInfo::set_disk_percent(double value) {
  
  disk_percent_ = value;
  // @@protoc_insertion_point(field_set:NodeInfo.disk_percent)
}

// string group = 12;
void NodeInfo::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::group() const {
  // @@protoc_insertion_point(field_get:NodeInfo.group)
  return group_.GetNoArena();
}
void NodeInfo::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.group)
}
#if LANG_CXX11
void NodeInfo::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.group)
}
#endif
void NodeInfo::set_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.group)
}
void NodeInfo::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.group)
}
::std::string* NodeInfo::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_group() {
  // @@protoc_insertion_point(field_release:NodeInfo.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.group)
}

// string tag = 13;
void NodeInfo::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::tag() const {
  // @@protoc_insertion_point(field_get:NodeInfo.tag)
  return tag_.GetNoArena();
}
void NodeInfo::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeInfo.tag)
}
#if LANG_CXX11
void NodeInfo::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeInfo.tag)
}
#endif
void NodeInfo::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeInfo.tag)
}
void NodeInfo::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeInfo.tag)
}
::std::string* NodeInfo::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:NodeInfo.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_tag() {
  // @@protoc_insertion_point(field_release:NodeInfo.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:NodeInfo.tag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterInfoRequest::kIdFieldNumber;
const int UpdateClusterInfoRequest::kNameFieldNumber;
const int UpdateClusterInfoRequest::kStatusFieldNumber;
const int UpdateClusterInfoRequest::kDescriptionFieldNumber;
const int UpdateClusterInfoRequest::kInternalEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterInfoRequest::UpdateClusterInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateClusterInfoRequest)
}
UpdateClusterInfoRequest::UpdateClusterInfoRequest(const UpdateClusterInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  internal_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.internal_endpoint().size() > 0) {
    internal_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_endpoint_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:UpdateClusterInfoRequest)
}

void UpdateClusterInfoRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _cached_size_ = 0;
}

UpdateClusterInfoRequest::~UpdateClusterInfoRequest() {
  // @@protoc_insertion_point(destructor:UpdateClusterInfoRequest)
  SharedDtor();
}

void UpdateClusterInfoRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateClusterInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateClusterInfoRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateClusterInfoRequest& UpdateClusterInfoRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateClusterInfoRequest* UpdateClusterInfoRequest::New(::google::protobuf::Arena* arena) const {
  UpdateClusterInfoRequest* n = new UpdateClusterInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateClusterInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateClusterInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool UpdateClusterInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateClusterInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateClusterInfoRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClusterStatus status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ClusterStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateClusterInfoRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string internal_endpoint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateClusterInfoRequest.internal_endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateClusterInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateClusterInfoRequest)
  return false;
#undef DO_
}

void UpdateClusterInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateClusterInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateClusterInfoRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .ClusterStatus status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateClusterInfoRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // string internal_endpoint = 5;
  if (this->internal_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateClusterInfoRequest.internal_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->internal_endpoint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateClusterInfoRequest)
}

::google::protobuf::uint8* UpdateClusterInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateClusterInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateClusterInfoRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .ClusterStatus status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateClusterInfoRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // string internal_endpoint = 5;
  if (this->internal_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_endpoint().data(), static_cast<int>(this->internal_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateClusterInfoRequest.internal_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->internal_endpoint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateClusterInfoRequest)
  return target;
}

size_t UpdateClusterInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateClusterInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string internal_endpoint = 5;
  if (this->internal_endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->internal_endpoint());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // .ClusterStatus status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateClusterInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateClusterInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateClusterInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateClusterInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateClusterInfoRequest)
    MergeFrom(*source);
  }
}

void UpdateClusterInfoRequest::MergeFrom(const UpdateClusterInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateClusterInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.internal_endpoint().size() > 0) {

    internal_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_endpoint_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void UpdateClusterInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateClusterInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterInfoRequest::CopyFrom(const UpdateClusterInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateClusterInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterInfoRequest::IsInitialized() const {
  return true;
}

void UpdateClusterInfoRequest::Swap(UpdateClusterInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterInfoRequest::InternalSwap(UpdateClusterInfoRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  internal_endpoint_.Swap(&other->internal_endpoint_);
  swap(id_, other->id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateClusterInfoRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateClusterInfoRequest

// int32 id = 1;
void UpdateClusterInfoRequest::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 UpdateClusterInfoRequest::id() const {
  // @@protoc_insertion_point(field_get:UpdateClusterInfoRequest.id)
  return id_;
}
void UpdateClusterInfoRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:UpdateClusterInfoRequest.id)
}

// string name = 2;
void UpdateClusterInfoRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateClusterInfoRequest::name() const {
  // @@protoc_insertion_point(field_get:UpdateClusterInfoRequest.name)
  return name_.GetNoArena();
}
void UpdateClusterInfoRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateClusterInfoRequest.name)
}
#if LANG_CXX11
void UpdateClusterInfoRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateClusterInfoRequest.name)
}
#endif
void UpdateClusterInfoRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateClusterInfoRequest.name)
}
void UpdateClusterInfoRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateClusterInfoRequest.name)
}
::std::string* UpdateClusterInfoRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:UpdateClusterInfoRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateClusterInfoRequest::release_name() {
  // @@protoc_insertion_point(field_release:UpdateClusterInfoRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateClusterInfoRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:UpdateClusterInfoRequest.name)
}

// .ClusterStatus status = 3;
void UpdateClusterInfoRequest::clear_status() {
  status_ = 0;
}
::ClusterStatus UpdateClusterInfoRequest::status() const {
  // @@protoc_insertion_point(field_get:UpdateClusterInfoRequest.status)
  return static_cast< ::ClusterStatus >(status_);
}
void UpdateClusterInfoRequest::set_status(::ClusterStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:UpdateClusterInfoRequest.status)
}

// string description = 4;
void UpdateClusterInfoRequest::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateClusterInfoRequest::description() const {
  // @@protoc_insertion_point(field_get:UpdateClusterInfoRequest.description)
  return description_.GetNoArena();
}
void UpdateClusterInfoRequest::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateClusterInfoRequest.description)
}
#if LANG_CXX11
void UpdateClusterInfoRequest::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateClusterInfoRequest.description)
}
#endif
void UpdateClusterInfoRequest::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateClusterInfoRequest.description)
}
void UpdateClusterInfoRequest::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateClusterInfoRequest.description)
}
::std::string* UpdateClusterInfoRequest::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:UpdateClusterInfoRequest.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateClusterInfoRequest::release_description() {
  // @@protoc_insertion_point(field_release:UpdateClusterInfoRequest.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateClusterInfoRequest::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:UpdateClusterInfoRequest.description)
}

// string internal_endpoint = 5;
void UpdateClusterInfoRequest::clear_internal_endpoint() {
  internal_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateClusterInfoRequest::internal_endpoint() const {
  // @@protoc_insertion_point(field_get:UpdateClusterInfoRequest.internal_endpoint)
  return internal_endpoint_.GetNoArena();
}
void UpdateClusterInfoRequest::set_internal_endpoint(const ::std::string& value) {
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateClusterInfoRequest.internal_endpoint)
}
#if LANG_CXX11
void UpdateClusterInfoRequest::set_internal_endpoint(::std::string&& value) {
  
  internal_endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateClusterInfoRequest.internal_endpoint)
}
#endif
void UpdateClusterInfoRequest::set_internal_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateClusterInfoRequest.internal_endpoint)
}
void UpdateClusterInfoRequest::set_internal_endpoint(const char* value, size_t size) {
  
  internal_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateClusterInfoRequest.internal_endpoint)
}
::std::string* UpdateClusterInfoRequest::mutable_internal_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:UpdateClusterInfoRequest.internal_endpoint)
  return internal_endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateClusterInfoRequest::release_internal_endpoint() {
  // @@protoc_insertion_point(field_release:UpdateClusterInfoRequest.internal_endpoint)
  
  return internal_endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateClusterInfoRequest::set_allocated_internal_endpoint(::std::string* internal_endpoint) {
  if (internal_endpoint != NULL) {
    
  } else {
    
  }
  internal_endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), internal_endpoint);
  // @@protoc_insertion_point(field_set_allocated:UpdateClusterInfoRequest.internal_endpoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterInfoReply::kCodeFieldNumber;
const int UpdateClusterInfoReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterInfoReply::UpdateClusterInfoReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateClusterInfoReply)
}
UpdateClusterInfoReply::UpdateClusterInfoReply(const UpdateClusterInfoReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:UpdateClusterInfoReply)
}

void UpdateClusterInfoReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

UpdateClusterInfoReply::~UpdateClusterInfoReply() {
  // @@protoc_insertion_point(destructor:UpdateClusterInfoReply)
  SharedDtor();
}

void UpdateClusterInfoReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateClusterInfoReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateClusterInfoReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateClusterInfoReply& UpdateClusterInfoReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateClusterInfoReply* UpdateClusterInfoReply::New(::google::protobuf::Arena* arena) const {
  UpdateClusterInfoReply* n = new UpdateClusterInfoReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateClusterInfoReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateClusterInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateClusterInfoReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateClusterInfoReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateClusterInfoReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateClusterInfoReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateClusterInfoReply)
  return false;
#undef DO_
}

void UpdateClusterInfoReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateClusterInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateClusterInfoReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateClusterInfoReply)
}

::google::protobuf::uint8* UpdateClusterInfoReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateClusterInfoReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateClusterInfoReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateClusterInfoReply)
  return target;
}

size_t UpdateClusterInfoReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateClusterInfoReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateClusterInfoReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateClusterInfoReply)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterInfoReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateClusterInfoReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateClusterInfoReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateClusterInfoReply)
    MergeFrom(*source);
  }
}

void UpdateClusterInfoReply::MergeFrom(const UpdateClusterInfoReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateClusterInfoReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void UpdateClusterInfoReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateClusterInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterInfoReply::CopyFrom(const UpdateClusterInfoReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateClusterInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterInfoReply::IsInitialized() const {
  return true;
}

void UpdateClusterInfoReply::Swap(UpdateClusterInfoReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterInfoReply::InternalSwap(UpdateClusterInfoReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateClusterInfoReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateClusterInfoReply

// int32 code = 1;
void UpdateClusterInfoReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 UpdateClusterInfoReply::code() const {
  // @@protoc_insertion_point(field_get:UpdateClusterInfoReply.code)
  return code_;
}
void UpdateClusterInfoReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:UpdateClusterInfoReply.code)
}

// string message = 2;
void UpdateClusterInfoReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateClusterInfoReply::message() const {
  // @@protoc_insertion_point(field_get:UpdateClusterInfoReply.message)
  return message_.GetNoArena();
}
void UpdateClusterInfoReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateClusterInfoReply.message)
}
#if LANG_CXX11
void UpdateClusterInfoReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateClusterInfoReply.message)
}
#endif
void UpdateClusterInfoReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateClusterInfoReply.message)
}
void UpdateClusterInfoReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateClusterInfoReply.message)
}
::std::string* UpdateClusterInfoReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:UpdateClusterInfoReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateClusterInfoReply::release_message() {
  // @@protoc_insertion_point(field_release:UpdateClusterInfoReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateClusterInfoReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:UpdateClusterInfoReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterRequest::DeleteClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteClusterRequest)
}
DeleteClusterRequest::DeleteClusterRequest(const DeleteClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:DeleteClusterRequest)
}

void DeleteClusterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteClusterRequest::~DeleteClusterRequest() {
  // @@protoc_insertion_point(destructor:DeleteClusterRequest)
  SharedDtor();
}

void DeleteClusterRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteClusterRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteClusterRequest& DeleteClusterRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteClusterRequest* DeleteClusterRequest::New(::google::protobuf::Arena* arena) const {
  DeleteClusterRequest* n = new DeleteClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeleteClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteClusterRequest)
  return false;
#undef DO_
}

void DeleteClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteClusterRequest)
}

::google::protobuf::uint8* DeleteClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteClusterRequest)
  return target;
}

size_t DeleteClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteClusterRequest)
    MergeFrom(*source);
  }
}

void DeleteClusterRequest::MergeFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterRequest::CopyFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterRequest::IsInitialized() const {
  return true;
}

void DeleteClusterRequest::Swap(DeleteClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterRequest::InternalSwap(DeleteClusterRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteClusterRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteClusterRequest

// string name = 1;
void DeleteClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:DeleteClusterRequest.name)
  return name_.GetNoArena();
}
void DeleteClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteClusterRequest.name)
}
#if LANG_CXX11
void DeleteClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeleteClusterRequest.name)
}
#endif
void DeleteClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteClusterRequest.name)
}
void DeleteClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteClusterRequest.name)
}
::std::string* DeleteClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:DeleteClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:DeleteClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DeleteClusterRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterReply::kCodeFieldNumber;
const int DeleteClusterReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterReply::DeleteClusterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteClusterReply)
}
DeleteClusterReply::DeleteClusterReply(const DeleteClusterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:DeleteClusterReply)
}

void DeleteClusterReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

DeleteClusterReply::~DeleteClusterReply() {
  // @@protoc_insertion_point(destructor:DeleteClusterReply)
  SharedDtor();
}

void DeleteClusterReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteClusterReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteClusterReply& DeleteClusterReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteClusterReply* DeleteClusterReply::New(::google::protobuf::Arena* arena) const {
  DeleteClusterReply* n = new DeleteClusterReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteClusterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteClusterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteClusterReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeleteClusterReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteClusterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteClusterReply)
  return false;
#undef DO_
}

void DeleteClusterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteClusterReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteClusterReply)
}

::google::protobuf::uint8* DeleteClusterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeleteClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteClusterReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteClusterReply)
  return target;
}

size_t DeleteClusterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteClusterReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteClusterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteClusterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteClusterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteClusterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteClusterReply)
    MergeFrom(*source);
  }
}

void DeleteClusterReply::MergeFrom(const DeleteClusterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteClusterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void DeleteClusterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteClusterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterReply::CopyFrom(const DeleteClusterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteClusterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterReply::IsInitialized() const {
  return true;
}

void DeleteClusterReply::Swap(DeleteClusterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterReply::InternalSwap(DeleteClusterReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteClusterReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteClusterReply

// int32 code = 1;
void DeleteClusterReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 DeleteClusterReply::code() const {
  // @@protoc_insertion_point(field_get:DeleteClusterReply.code)
  return code_;
}
void DeleteClusterReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:DeleteClusterReply.code)
}

// string message = 2;
void DeleteClusterReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteClusterReply::message() const {
  // @@protoc_insertion_point(field_get:DeleteClusterReply.message)
  return message_.GetNoArena();
}
void DeleteClusterReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteClusterReply.message)
}
#if LANG_CXX11
void DeleteClusterReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeleteClusterReply.message)
}
#endif
void DeleteClusterReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteClusterReply.message)
}
void DeleteClusterReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteClusterReply.message)
}
::std::string* DeleteClusterReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:DeleteClusterReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteClusterReply::release_message() {
  // @@protoc_insertion_point(field_release:DeleteClusterReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteClusterReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:DeleteClusterReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClusterRequest::ListClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListClusterRequest)
}
ListClusterRequest::ListClusterRequest(const ListClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ListClusterRequest)
}

void ListClusterRequest::SharedCtor() {
  _cached_size_ = 0;
}

ListClusterRequest::~ListClusterRequest() {
  // @@protoc_insertion_point(destructor:ListClusterRequest)
  SharedDtor();
}

void ListClusterRequest::SharedDtor() {
}

void ListClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListClusterRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClusterRequest& ListClusterRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListClusterRequest* ListClusterRequest::New(::google::protobuf::Arena* arena) const {
  ListClusterRequest* n = new ListClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ListClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ListClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ListClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListClusterRequest)
  return false;
#undef DO_
}

void ListClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListClusterRequest)
}

::google::protobuf::uint8* ListClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListClusterRequest)
  return target;
}

size_t ListClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListClusterRequest)
    MergeFrom(*source);
  }
}

void ListClusterRequest::MergeFrom(const ListClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClusterRequest::CopyFrom(const ListClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClusterRequest::IsInitialized() const {
  return true;
}

void ListClusterRequest::Swap(ListClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClusterRequest::InternalSwap(ListClusterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListClusterRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListClusterRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClusterReply::kCodeFieldNumber;
const int ListClusterReply::kMessageFieldNumber;
const int ListClusterReply::kClustersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClusterReply::ListClusterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListClusterReply)
}
ListClusterReply::ListClusterReply(const ListClusterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ListClusterReply)
}

void ListClusterReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ListClusterReply::~ListClusterReply() {
  // @@protoc_insertion_point(destructor:ListClusterReply)
  SharedDtor();
}

void ListClusterReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClusterReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListClusterReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClusterReply& ListClusterReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListClusterReply* ListClusterReply::New(::google::protobuf::Arena* arena) const {
  ListClusterReply* n = new ListClusterReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListClusterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ListClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool ListClusterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListClusterReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListClusterReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string clusters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_clusters()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clusters(this->clusters_size() - 1).data(),
            static_cast<int>(this->clusters(this->clusters_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListClusterReply.clusters"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListClusterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListClusterReply)
  return false;
#undef DO_
}

void ListClusterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListClusterReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // repeated string clusters = 3;
  for (int i = 0, n = this->clusters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clusters(i).data(), static_cast<int>(this->clusters(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListClusterReply.clusters");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->clusters(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListClusterReply)
}

::google::protobuf::uint8* ListClusterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListClusterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListClusterReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // repeated string clusters = 3;
  for (int i = 0, n = this->clusters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clusters(i).data(), static_cast<int>(this->clusters(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListClusterReply.clusters");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->clusters(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListClusterReply)
  return target;
}

size_t ListClusterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListClusterReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string clusters = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->clusters_size());
  for (int i = 0, n = this->clusters_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->clusters(i));
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListClusterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListClusterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClusterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClusterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListClusterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListClusterReply)
    MergeFrom(*source);
  }
}

void ListClusterReply::MergeFrom(const ListClusterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListClusterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ListClusterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListClusterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClusterReply::CopyFrom(const ListClusterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListClusterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClusterReply::IsInitialized() const {
  return true;
}

void ListClusterReply::Swap(ListClusterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClusterReply::InternalSwap(ListClusterReply* other) {
  using std::swap;
  clusters_.InternalSwap(&other->clusters_);
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListClusterReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListClusterReply

// int32 code = 1;
void ListClusterReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ListClusterReply::code() const {
  // @@protoc_insertion_point(field_get:ListClusterReply.code)
  return code_;
}
void ListClusterReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ListClusterReply.code)
}

// string message = 2;
void ListClusterReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListClusterReply::message() const {
  // @@protoc_insertion_point(field_get:ListClusterReply.message)
  return message_.GetNoArena();
}
void ListClusterReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListClusterReply.message)
}
#if LANG_CXX11
void ListClusterReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListClusterReply.message)
}
#endif
void ListClusterReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListClusterReply.message)
}
void ListClusterReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListClusterReply.message)
}
::std::string* ListClusterReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ListClusterReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListClusterReply::release_message() {
  // @@protoc_insertion_point(field_release:ListClusterReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListClusterReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ListClusterReply.message)
}

// repeated string clusters = 3;
int ListClusterReply::clusters_size() const {
  return clusters_.size();
}
void ListClusterReply::clear_clusters() {
  clusters_.Clear();
}
const ::std::string& ListClusterReply::clusters(int index) const {
  // @@protoc_insertion_point(field_get:ListClusterReply.clusters)
  return clusters_.Get(index);
}
::std::string* ListClusterReply::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:ListClusterReply.clusters)
  return clusters_.Mutable(index);
}
void ListClusterReply::set_clusters(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ListClusterReply.clusters)
  clusters_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ListClusterReply::set_clusters(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ListClusterReply.clusters)
  clusters_.Mutable(index)->assign(std::move(value));
}
#endif
void ListClusterReply::set_clusters(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  clusters_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ListClusterReply.clusters)
}
void ListClusterReply::set_clusters(int index, const char* value, size_t size) {
  clusters_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ListClusterReply.clusters)
}
::std::string* ListClusterReply::add_clusters() {
  // @@protoc_insertion_point(field_add_mutable:ListClusterReply.clusters)
  return clusters_.Add();
}
void ListClusterReply::add_clusters(const ::std::string& value) {
  clusters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ListClusterReply.clusters)
}
#if LANG_CXX11
void ListClusterReply::add_clusters(::std::string&& value) {
  clusters_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ListClusterReply.clusters)
}
#endif
void ListClusterReply::add_clusters(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  clusters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ListClusterReply.clusters)
}
void ListClusterReply::add_clusters(const char* value, size_t size) {
  clusters_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ListClusterReply.clusters)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListClusterReply::clusters() const {
  // @@protoc_insertion_point(field_list:ListClusterReply.clusters)
  return clusters_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListClusterReply::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:ListClusterReply.clusters)
  return &clusters_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClusterDetailsRequest::ListClusterDetailsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListClusterDetailsRequest)
}
ListClusterDetailsRequest::ListClusterDetailsRequest(const ListClusterDetailsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ListClusterDetailsRequest)
}

void ListClusterDetailsRequest::SharedCtor() {
  _cached_size_ = 0;
}

ListClusterDetailsRequest::~ListClusterDetailsRequest() {
  // @@protoc_insertion_point(destructor:ListClusterDetailsRequest)
  SharedDtor();
}

void ListClusterDetailsRequest::SharedDtor() {
}

void ListClusterDetailsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListClusterDetailsRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClusterDetailsRequest& ListClusterDetailsRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListClusterDetailsRequest* ListClusterDetailsRequest::New(::google::protobuf::Arena* arena) const {
  ListClusterDetailsRequest* n = new ListClusterDetailsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListClusterDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ListClusterDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ListClusterDetailsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListClusterDetailsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ListClusterDetailsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListClusterDetailsRequest)
  return false;
#undef DO_
}

void ListClusterDetailsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListClusterDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListClusterDetailsRequest)
}

::google::protobuf::uint8* ListClusterDetailsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListClusterDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListClusterDetailsRequest)
  return target;
}

size_t ListClusterDetailsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListClusterDetailsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListClusterDetailsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListClusterDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClusterDetailsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClusterDetailsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListClusterDetailsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListClusterDetailsRequest)
    MergeFrom(*source);
  }
}

void ListClusterDetailsRequest::MergeFrom(const ListClusterDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListClusterDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListClusterDetailsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListClusterDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClusterDetailsRequest::CopyFrom(const ListClusterDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListClusterDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClusterDetailsRequest::IsInitialized() const {
  return true;
}

void ListClusterDetailsRequest::Swap(ListClusterDetailsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClusterDetailsRequest::InternalSwap(ListClusterDetailsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListClusterDetailsRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListClusterDetailsRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClusterDetailsReply::kCodeFieldNumber;
const int ListClusterDetailsReply::kMessageFieldNumber;
const int ListClusterDetailsReply::kClustersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClusterDetailsReply::ListClusterDetailsReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListClusterDetailsReply)
}
ListClusterDetailsReply::ListClusterDetailsReply(const ListClusterDetailsReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ListClusterDetailsReply)
}

void ListClusterDetailsReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ListClusterDetailsReply::~ListClusterDetailsReply() {
  // @@protoc_insertion_point(destructor:ListClusterDetailsReply)
  SharedDtor();
}

void ListClusterDetailsReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClusterDetailsReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListClusterDetailsReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClusterDetailsReply& ListClusterDetailsReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListClusterDetailsReply* ListClusterDetailsReply::New(::google::protobuf::Arena* arena) const {
  ListClusterDetailsReply* n = new ListClusterDetailsReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListClusterDetailsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ListClusterDetailsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool ListClusterDetailsReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListClusterDetailsReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListClusterDetailsReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ClusterInfo clusters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListClusterDetailsReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListClusterDetailsReply)
  return false;
#undef DO_
}

void ListClusterDetailsReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListClusterDetailsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListClusterDetailsReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // repeated .ClusterInfo clusters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->clusters(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListClusterDetailsReply)
}

::google::protobuf::uint8* ListClusterDetailsReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListClusterDetailsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListClusterDetailsReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // repeated .ClusterInfo clusters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->clusters(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListClusterDetailsReply)
  return target;
}

size_t ListClusterDetailsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListClusterDetailsReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ClusterInfo clusters = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clusters(static_cast<int>(i)));
    }
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListClusterDetailsReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListClusterDetailsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClusterDetailsReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClusterDetailsReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListClusterDetailsReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListClusterDetailsReply)
    MergeFrom(*source);
  }
}

void ListClusterDetailsReply::MergeFrom(const ListClusterDetailsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListClusterDetailsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ListClusterDetailsReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListClusterDetailsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClusterDetailsReply::CopyFrom(const ListClusterDetailsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListClusterDetailsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClusterDetailsReply::IsInitialized() const {
  return true;
}

void ListClusterDetailsReply::Swap(ListClusterDetailsReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClusterDetailsReply::InternalSwap(ListClusterDetailsReply* other) {
  using std::swap;
  clusters_.InternalSwap(&other->clusters_);
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListClusterDetailsReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListClusterDetailsReply

// int32 code = 1;
void ListClusterDetailsReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ListClusterDetailsReply::code() const {
  // @@protoc_insertion_point(field_get:ListClusterDetailsReply.code)
  return code_;
}
void ListClusterDetailsReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ListClusterDetailsReply.code)
}

// string message = 2;
void ListClusterDetailsReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListClusterDetailsReply::message() const {
  // @@protoc_insertion_point(field_get:ListClusterDetailsReply.message)
  return message_.GetNoArena();
}
void ListClusterDetailsReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListClusterDetailsReply.message)
}
#if LANG_CXX11
void ListClusterDetailsReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListClusterDetailsReply.message)
}
#endif
void ListClusterDetailsReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListClusterDetailsReply.message)
}
void ListClusterDetailsReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListClusterDetailsReply.message)
}
::std::string* ListClusterDetailsReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ListClusterDetailsReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListClusterDetailsReply::release_message() {
  // @@protoc_insertion_point(field_release:ListClusterDetailsReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListClusterDetailsReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ListClusterDetailsReply.message)
}

// repeated .ClusterInfo clusters = 3;
int ListClusterDetailsReply::clusters_size() const {
  return clusters_.size();
}
void ListClusterDetailsReply::clear_clusters() {
  clusters_.Clear();
}
const ::ClusterInfo& ListClusterDetailsReply::clusters(int index) const {
  // @@protoc_insertion_point(field_get:ListClusterDetailsReply.clusters)
  return clusters_.Get(index);
}
::ClusterInfo* ListClusterDetailsReply::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:ListClusterDetailsReply.clusters)
  return clusters_.Mutable(index);
}
::ClusterInfo* ListClusterDetailsReply::add_clusters() {
  // @@protoc_insertion_point(field_add:ListClusterDetailsReply.clusters)
  return clusters_.Add();
}
::google::protobuf::RepeatedPtrField< ::ClusterInfo >*
ListClusterDetailsReply::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:ListClusterDetailsReply.clusters)
  return &clusters_;
}
const ::google::protobuf::RepeatedPtrField< ::ClusterInfo >&
ListClusterDetailsReply::clusters() const {
  // @@protoc_insertion_point(field_list:ListClusterDetailsReply.clusters)
  return clusters_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateProjectRequest::kNameFieldNumber;
const int CreateProjectRequest::kClusterFieldNumber;
const int CreateProjectRequest::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateProjectRequest::CreateProjectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateProjectRequest)
}
CreateProjectRequest::CreateProjectRequest(const CreateProjectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster().size() > 0) {
    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:CreateProjectRequest)
}

void CreateProjectRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateProjectRequest::~CreateProjectRequest() {
  // @@protoc_insertion_point(destructor:CreateProjectRequest)
  SharedDtor();
}

void CreateProjectRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateProjectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateProjectRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateProjectRequest& CreateProjectRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateProjectRequest* CreateProjectRequest::New(::google::protobuf::Arena* arena) const {
  CreateProjectRequest* n = new CreateProjectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateProjectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateProjectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateProjectRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster().data(), static_cast<int>(this->cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateProjectRequest.cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateProjectRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateProjectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateProjectRequest)
  return false;
#undef DO_
}

void CreateProjectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateProjectRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateProjectRequest.cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateProjectRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateProjectRequest)
}

::google::protobuf::uint8* CreateProjectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateProjectRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateProjectRequest.cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateProjectRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateProjectRequest)
  return target;
}

size_t CreateProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateProjectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateProjectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateProjectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateProjectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateProjectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateProjectRequest)
    MergeFrom(*source);
  }
}

void CreateProjectRequest::MergeFrom(const CreateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cluster().size() > 0) {

    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void CreateProjectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateProjectRequest::CopyFrom(const CreateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectRequest::IsInitialized() const {
  return true;
}

void CreateProjectRequest::Swap(CreateProjectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateProjectRequest::InternalSwap(CreateProjectRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  cluster_.Swap(&other->cluster_);
  description_.Swap(&other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateProjectRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateProjectRequest

// string name = 1;
void CreateProjectRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateProjectRequest::name() const {
  // @@protoc_insertion_point(field_get:CreateProjectRequest.name)
  return name_.GetNoArena();
}
void CreateProjectRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateProjectRequest.name)
}
#if LANG_CXX11
void CreateProjectRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateProjectRequest.name)
}
#endif
void CreateProjectRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateProjectRequest.name)
}
void CreateProjectRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateProjectRequest.name)
}
::std::string* CreateProjectRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CreateProjectRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateProjectRequest::release_name() {
  // @@protoc_insertion_point(field_release:CreateProjectRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateProjectRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CreateProjectRequest.name)
}

// string cluster = 2;
void CreateProjectRequest::clear_cluster() {
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateProjectRequest::cluster() const {
  // @@protoc_insertion_point(field_get:CreateProjectRequest.cluster)
  return cluster_.GetNoArena();
}
void CreateProjectRequest::set_cluster(const ::std::string& value) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateProjectRequest.cluster)
}
#if LANG_CXX11
void CreateProjectRequest::set_cluster(::std::string&& value) {
  
  cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateProjectRequest.cluster)
}
#endif
void CreateProjectRequest::set_cluster(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateProjectRequest.cluster)
}
void CreateProjectRequest::set_cluster(const char* value, size_t size) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateProjectRequest.cluster)
}
::std::string* CreateProjectRequest::mutable_cluster() {
  
  // @@protoc_insertion_point(field_mutable:CreateProjectRequest.cluster)
  return cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateProjectRequest::release_cluster() {
  // @@protoc_insertion_point(field_release:CreateProjectRequest.cluster)
  
  return cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateProjectRequest::set_allocated_cluster(::std::string* cluster) {
  if (cluster != NULL) {
    
  } else {
    
  }
  cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster);
  // @@protoc_insertion_point(field_set_allocated:CreateProjectRequest.cluster)
}

// string description = 3;
void CreateProjectRequest::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateProjectRequest::description() const {
  // @@protoc_insertion_point(field_get:CreateProjectRequest.description)
  return description_.GetNoArena();
}
void CreateProjectRequest::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateProjectRequest.description)
}
#if LANG_CXX11
void CreateProjectRequest::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateProjectRequest.description)
}
#endif
void CreateProjectRequest::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateProjectRequest.description)
}
void CreateProjectRequest::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateProjectRequest.description)
}
::std::string* CreateProjectRequest::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:CreateProjectRequest.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateProjectRequest::release_description() {
  // @@protoc_insertion_point(field_release:CreateProjectRequest.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateProjectRequest::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:CreateProjectRequest.description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateProjectReply::kCodeFieldNumber;
const int CreateProjectReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateProjectReply::CreateProjectReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateProjectReply)
}
CreateProjectReply::CreateProjectReply(const CreateProjectReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:CreateProjectReply)
}

void CreateProjectReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

CreateProjectReply::~CreateProjectReply() {
  // @@protoc_insertion_point(destructor:CreateProjectReply)
  SharedDtor();
}

void CreateProjectReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateProjectReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateProjectReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateProjectReply& CreateProjectReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateProjectReply* CreateProjectReply::New(::google::protobuf::Arena* arena) const {
  CreateProjectReply* n = new CreateProjectReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateProjectReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool CreateProjectReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateProjectReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateProjectReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateProjectReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateProjectReply)
  return false;
#undef DO_
}

void CreateProjectReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateProjectReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateProjectReply)
}

::google::protobuf::uint8* CreateProjectReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateProjectReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateProjectReply)
  return target;
}

size_t CreateProjectReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateProjectReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateProjectReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateProjectReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateProjectReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateProjectReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateProjectReply)
    MergeFrom(*source);
  }
}

void CreateProjectReply::MergeFrom(const CreateProjectReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void CreateProjectReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateProjectReply::CopyFrom(const CreateProjectReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectReply::IsInitialized() const {
  return true;
}

void CreateProjectReply::Swap(CreateProjectReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateProjectReply::InternalSwap(CreateProjectReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateProjectReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateProjectReply

// int32 code = 1;
void CreateProjectReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 CreateProjectReply::code() const {
  // @@protoc_insertion_point(field_get:CreateProjectReply.code)
  return code_;
}
void CreateProjectReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:CreateProjectReply.code)
}

// string message = 2;
void CreateProjectReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateProjectReply::message() const {
  // @@protoc_insertion_point(field_get:CreateProjectReply.message)
  return message_.GetNoArena();
}
void CreateProjectReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateProjectReply.message)
}
#if LANG_CXX11
void CreateProjectReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateProjectReply.message)
}
#endif
void CreateProjectReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateProjectReply.message)
}
void CreateProjectReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateProjectReply.message)
}
::std::string* CreateProjectReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CreateProjectReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateProjectReply::release_message() {
  // @@protoc_insertion_point(field_release:CreateProjectReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateProjectReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CreateProjectReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteProjectRequest::kNameFieldNumber;
const int DeleteProjectRequest::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteProjectRequest::DeleteProjectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteProjectRequest)
}
DeleteProjectRequest::DeleteProjectRequest(const DeleteProjectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:DeleteProjectRequest)
}

void DeleteProjectRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _cached_size_ = 0;
}

DeleteProjectRequest::~DeleteProjectRequest() {
  // @@protoc_insertion_point(destructor:DeleteProjectRequest)
  SharedDtor();
}

void DeleteProjectRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteProjectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteProjectRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteProjectRequest& DeleteProjectRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteProjectRequest* DeleteProjectRequest::New(::google::protobuf::Arena* arena) const {
  DeleteProjectRequest* n = new DeleteProjectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteProjectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteProjectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeleteProjectRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProjectStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ProjectStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteProjectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteProjectRequest)
  return false;
#undef DO_
}

void DeleteProjectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteProjectRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .ProjectStatus status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteProjectRequest)
}

::google::protobuf::uint8* DeleteProjectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeleteProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteProjectRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .ProjectStatus status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteProjectRequest)
  return target;
}

size_t DeleteProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteProjectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .ProjectStatus status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteProjectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteProjectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteProjectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteProjectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteProjectRequest)
    MergeFrom(*source);
  }
}

void DeleteProjectRequest::MergeFrom(const DeleteProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void DeleteProjectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteProjectRequest::CopyFrom(const DeleteProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectRequest::IsInitialized() const {
  return true;
}

void DeleteProjectRequest::Swap(DeleteProjectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteProjectRequest::InternalSwap(DeleteProjectRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteProjectRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteProjectRequest

// string name = 1;
void DeleteProjectRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteProjectRequest::name() const {
  // @@protoc_insertion_point(field_get:DeleteProjectRequest.name)
  return name_.GetNoArena();
}
void DeleteProjectRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteProjectRequest.name)
}
#if LANG_CXX11
void DeleteProjectRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeleteProjectRequest.name)
}
#endif
void DeleteProjectRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteProjectRequest.name)
}
void DeleteProjectRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteProjectRequest.name)
}
::std::string* DeleteProjectRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:DeleteProjectRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteProjectRequest::release_name() {
  // @@protoc_insertion_point(field_release:DeleteProjectRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteProjectRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DeleteProjectRequest.name)
}

// .ProjectStatus status = 2;
void DeleteProjectRequest::clear_status() {
  status_ = 0;
}
::ProjectStatus DeleteProjectRequest::status() const {
  // @@protoc_insertion_point(field_get:DeleteProjectRequest.status)
  return static_cast< ::ProjectStatus >(status_);
}
void DeleteProjectRequest::set_status(::ProjectStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:DeleteProjectRequest.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteProjectReply::kCodeFieldNumber;
const int DeleteProjectReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteProjectReply::DeleteProjectReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteProjectReply)
}
DeleteProjectReply::DeleteProjectReply(const DeleteProjectReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:DeleteProjectReply)
}

void DeleteProjectReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

DeleteProjectReply::~DeleteProjectReply() {
  // @@protoc_insertion_point(destructor:DeleteProjectReply)
  SharedDtor();
}

void DeleteProjectReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteProjectReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteProjectReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteProjectReply& DeleteProjectReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteProjectReply* DeleteProjectReply::New(::google::protobuf::Arena* arena) const {
  DeleteProjectReply* n = new DeleteProjectReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteProjectReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteProjectReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteProjectReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeleteProjectReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteProjectReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteProjectReply)
  return false;
#undef DO_
}

void DeleteProjectReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteProjectReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteProjectReply)
}

::google::protobuf::uint8* DeleteProjectReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeleteProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteProjectReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteProjectReply)
  return target;
}

size_t DeleteProjectReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteProjectReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteProjectReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteProjectReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteProjectReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteProjectReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteProjectReply)
    MergeFrom(*source);
  }
}

void DeleteProjectReply::MergeFrom(const DeleteProjectReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void DeleteProjectReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteProjectReply::CopyFrom(const DeleteProjectReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectReply::IsInitialized() const {
  return true;
}

void DeleteProjectReply::Swap(DeleteProjectReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteProjectReply::InternalSwap(DeleteProjectReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteProjectReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteProjectReply

// int32 code = 1;
void DeleteProjectReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 DeleteProjectReply::code() const {
  // @@protoc_insertion_point(field_get:DeleteProjectReply.code)
  return code_;
}
void DeleteProjectReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:DeleteProjectReply.code)
}

// string message = 2;
void DeleteProjectReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteProjectReply::message() const {
  // @@protoc_insertion_point(field_get:DeleteProjectReply.message)
  return message_.GetNoArena();
}
void DeleteProjectReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteProjectReply.message)
}
#if LANG_CXX11
void DeleteProjectReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeleteProjectReply.message)
}
#endif
void DeleteProjectReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteProjectReply.message)
}
void DeleteProjectReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteProjectReply.message)
}
::std::string* DeleteProjectReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:DeleteProjectReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteProjectReply::release_message() {
  // @@protoc_insertion_point(field_release:DeleteProjectReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteProjectReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:DeleteProjectReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateProjectRequest::kIdFieldNumber;
const int UpdateProjectRequest::kNameFieldNumber;
const int UpdateProjectRequest::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateProjectRequest::UpdateProjectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateProjectRequest)
}
UpdateProjectRequest::UpdateProjectRequest(const UpdateProjectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:UpdateProjectRequest)
}

void UpdateProjectRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

UpdateProjectRequest::~UpdateProjectRequest() {
  // @@protoc_insertion_point(destructor:UpdateProjectRequest)
  SharedDtor();
}

void UpdateProjectRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateProjectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateProjectRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateProjectRequest& UpdateProjectRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateProjectRequest* UpdateProjectRequest::New(::google::protobuf::Arena* arena) const {
  UpdateProjectRequest* n = new UpdateProjectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateProjectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateProjectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateProjectRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateProjectRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateProjectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateProjectRequest)
  return false;
#undef DO_
}

void UpdateProjectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateProjectRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateProjectRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateProjectRequest)
}

::google::protobuf::uint8* UpdateProjectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateProjectRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateProjectRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateProjectRequest)
  return target;
}

size_t UpdateProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateProjectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateProjectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateProjectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateProjectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateProjectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateProjectRequest)
    MergeFrom(*source);
  }
}

void UpdateProjectRequest::MergeFrom(const UpdateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void UpdateProjectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateProjectRequest::CopyFrom(const UpdateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProjectRequest::IsInitialized() const {
  return true;
}

void UpdateProjectRequest::Swap(UpdateProjectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateProjectRequest::InternalSwap(UpdateProjectRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateProjectRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateProjectRequest

// int32 id = 1;
void UpdateProjectRequest::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 UpdateProjectRequest::id() const {
  // @@protoc_insertion_point(field_get:UpdateProjectRequest.id)
  return id_;
}
void UpdateProjectRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:UpdateProjectRequest.id)
}

// string name = 2;
void UpdateProjectRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateProjectRequest::name() const {
  // @@protoc_insertion_point(field_get:UpdateProjectRequest.name)
  return name_.GetNoArena();
}
void UpdateProjectRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateProjectRequest.name)
}
#if LANG_CXX11
void UpdateProjectRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateProjectRequest.name)
}
#endif
void UpdateProjectRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateProjectRequest.name)
}
void UpdateProjectRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateProjectRequest.name)
}
::std::string* UpdateProjectRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:UpdateProjectRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateProjectRequest::release_name() {
  // @@protoc_insertion_point(field_release:UpdateProjectRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateProjectRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:UpdateProjectRequest.name)
}

// string description = 3;
void UpdateProjectRequest::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateProjectRequest::description() const {
  // @@protoc_insertion_point(field_get:UpdateProjectRequest.description)
  return description_.GetNoArena();
}
void UpdateProjectRequest::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateProjectRequest.description)
}
#if LANG_CXX11
void UpdateProjectRequest::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateProjectRequest.description)
}
#endif
void UpdateProjectRequest::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateProjectRequest.description)
}
void UpdateProjectRequest::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateProjectRequest.description)
}
::std::string* UpdateProjectRequest::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:UpdateProjectRequest.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateProjectRequest::release_description() {
  // @@protoc_insertion_point(field_release:UpdateProjectRequest.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateProjectRequest::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:UpdateProjectRequest.description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateProjectReply::kCodeFieldNumber;
const int UpdateProjectReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateProjectReply::UpdateProjectReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateProjectReply)
}
UpdateProjectReply::UpdateProjectReply(const UpdateProjectReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:UpdateProjectReply)
}

void UpdateProjectReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

UpdateProjectReply::~UpdateProjectReply() {
  // @@protoc_insertion_point(destructor:UpdateProjectReply)
  SharedDtor();
}

void UpdateProjectReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateProjectReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateProjectReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateProjectReply& UpdateProjectReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateProjectReply* UpdateProjectReply::New(::google::protobuf::Arena* arena) const {
  UpdateProjectReply* n = new UpdateProjectReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateProjectReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateProjectReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateProjectReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateProjectReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateProjectReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateProjectReply)
  return false;
#undef DO_
}

void UpdateProjectReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateProjectReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateProjectReply)
}

::google::protobuf::uint8* UpdateProjectReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateProjectReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateProjectReply)
  return target;
}

size_t UpdateProjectReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateProjectReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateProjectReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateProjectReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateProjectReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateProjectReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateProjectReply)
    MergeFrom(*source);
  }
}

void UpdateProjectReply::MergeFrom(const UpdateProjectReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void UpdateProjectReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateProjectReply::CopyFrom(const UpdateProjectReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProjectReply::IsInitialized() const {
  return true;
}

void UpdateProjectReply::Swap(UpdateProjectReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateProjectReply::InternalSwap(UpdateProjectReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateProjectReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateProjectReply

// int32 code = 1;
void UpdateProjectReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 UpdateProjectReply::code() const {
  // @@protoc_insertion_point(field_get:UpdateProjectReply.code)
  return code_;
}
void UpdateProjectReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:UpdateProjectReply.code)
}

// string message = 2;
void UpdateProjectReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateProjectReply::message() const {
  // @@protoc_insertion_point(field_get:UpdateProjectReply.message)
  return message_.GetNoArena();
}
void UpdateProjectReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateProjectReply.message)
}
#if LANG_CXX11
void UpdateProjectReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateProjectReply.message)
}
#endif
void UpdateProjectReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateProjectReply.message)
}
void UpdateProjectReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateProjectReply.message)
}
::std::string* UpdateProjectReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:UpdateProjectReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateProjectReply::release_message() {
  // @@protoc_insertion_point(field_release:UpdateProjectReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateProjectReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:UpdateProjectReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProjectRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProjectRequest::GetProjectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetProjectRequest)
}
GetProjectRequest::GetProjectRequest(const GetProjectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:GetProjectRequest)
}

void GetProjectRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetProjectRequest::~GetProjectRequest() {
  // @@protoc_insertion_point(destructor:GetProjectRequest)
  SharedDtor();
}

void GetProjectRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetProjectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProjectRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProjectRequest& GetProjectRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetProjectRequest* GetProjectRequest::New(::google::protobuf::Arena* arena) const {
  GetProjectRequest* n = new GetProjectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetProjectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetProjectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetProjectRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetProjectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetProjectRequest)
  return false;
#undef DO_
}

void GetProjectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetProjectRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetProjectRequest)
}

::google::protobuf::uint8* GetProjectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetProjectRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetProjectRequest)
  return target;
}

size_t GetProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetProjectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProjectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProjectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProjectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetProjectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetProjectRequest)
    MergeFrom(*source);
  }
}

void GetProjectRequest::MergeFrom(const GetProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetProjectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProjectRequest::CopyFrom(const GetProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectRequest::IsInitialized() const {
  return true;
}

void GetProjectRequest::Swap(GetProjectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProjectRequest::InternalSwap(GetProjectRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProjectRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetProjectRequest

// string name = 1;
void GetProjectRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetProjectRequest::name() const {
  // @@protoc_insertion_point(field_get:GetProjectRequest.name)
  return name_.GetNoArena();
}
void GetProjectRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetProjectRequest.name)
}
#if LANG_CXX11
void GetProjectRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetProjectRequest.name)
}
#endif
void GetProjectRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetProjectRequest.name)
}
void GetProjectRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetProjectRequest.name)
}
::std::string* GetProjectRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:GetProjectRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProjectRequest::release_name() {
  // @@protoc_insertion_point(field_release:GetProjectRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProjectRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GetProjectRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProjectReply::kCodeFieldNumber;
const int GetProjectReply::kMessageFieldNumber;
const int GetProjectReply::kProjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProjectReply::GetProjectReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetProjectReply)
}
GetProjectReply::GetProjectReply(const GetProjectReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_project()) {
    project_ = new ::ProjectInfo(*from.project_);
  } else {
    project_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GetProjectReply)
}

void GetProjectReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&project_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&project_)) + sizeof(code_));
  _cached_size_ = 0;
}

GetProjectReply::~GetProjectReply() {
  // @@protoc_insertion_point(destructor:GetProjectReply)
  SharedDtor();
}

void GetProjectReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete project_;
}

void GetProjectReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProjectReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProjectReply& GetProjectReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetProjectReply* GetProjectReply::New(::google::protobuf::Arena* arena) const {
  GetProjectReply* n = new GetProjectReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProjectReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GetProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && project_ != NULL) {
    delete project_;
  }
  project_ = NULL;
  code_ = 0;
  _internal_metadata_.Clear();
}

bool GetProjectReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetProjectReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetProjectReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProjectInfo project = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetProjectReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetProjectReply)
  return false;
#undef DO_
}

void GetProjectReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetProjectReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .ProjectInfo project = 3;
  if (this->has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->project_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetProjectReply)
}

::google::protobuf::uint8* GetProjectReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetProjectReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .ProjectInfo project = 3;
  if (this->has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->project_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetProjectReply)
  return target;
}

size_t GetProjectReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetProjectReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .ProjectInfo project = 3;
  if (this->has_project()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->project_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProjectReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProjectReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProjectReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetProjectReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetProjectReply)
    MergeFrom(*source);
  }
}

void GetProjectReply::MergeFrom(const GetProjectReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_project()) {
    mutable_project()->::ProjectInfo::MergeFrom(from.project());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void GetProjectReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProjectReply::CopyFrom(const GetProjectReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectReply::IsInitialized() const {
  return true;
}

void GetProjectReply::Swap(GetProjectReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProjectReply::InternalSwap(GetProjectReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(project_, other->project_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProjectReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetProjectReply

// int32 code = 1;
void GetProjectReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 GetProjectReply::code() const {
  // @@protoc_insertion_point(field_get:GetProjectReply.code)
  return code_;
}
void GetProjectReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:GetProjectReply.code)
}

// string message = 2;
void GetProjectReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetProjectReply::message() const {
  // @@protoc_insertion_point(field_get:GetProjectReply.message)
  return message_.GetNoArena();
}
void GetProjectReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetProjectReply.message)
}
#if LANG_CXX11
void GetProjectReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetProjectReply.message)
}
#endif
void GetProjectReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetProjectReply.message)
}
void GetProjectReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetProjectReply.message)
}
::std::string* GetProjectReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:GetProjectReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProjectReply::release_message() {
  // @@protoc_insertion_point(field_release:GetProjectReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProjectReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:GetProjectReply.message)
}

// .ProjectInfo project = 3;
bool GetProjectReply::has_project() const {
  return this != internal_default_instance() && project_ != NULL;
}
void GetProjectReply::clear_project() {
  if (GetArenaNoVirtual() == NULL && project_ != NULL) delete project_;
  project_ = NULL;
}
const ::ProjectInfo& GetProjectReply::project() const {
  const ::ProjectInfo* p = project_;
  // @@protoc_insertion_point(field_get:GetProjectReply.project)
  return p != NULL ? *p : *reinterpret_cast<const ::ProjectInfo*>(
      &::_ProjectInfo_default_instance_);
}
::ProjectInfo* GetProjectReply::mutable_project() {
  
  if (project_ == NULL) {
    project_ = new ::ProjectInfo;
  }
  // @@protoc_insertion_point(field_mutable:GetProjectReply.project)
  return project_;
}
::ProjectInfo* GetProjectReply::release_project() {
  // @@protoc_insertion_point(field_release:GetProjectReply.project)
  
  ::ProjectInfo* temp = project_;
  project_ = NULL;
  return temp;
}
void GetProjectReply::set_allocated_project(::ProjectInfo* project) {
  delete project_;
  project_ = project;
  if (project) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GetProjectReply.project)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectInfo::kIdFieldNumber;
const int ProjectInfo::kNameFieldNumber;
const int ProjectInfo::kClusterNameFieldNumber;
const int ProjectInfo::kDescriptionFieldNumber;
const int ProjectInfo::kTotalIndexNumberFieldNumber;
const int ProjectInfo::kTotalDocNumberFieldNumber;
const int ProjectInfo::kTotalDataSizeFieldNumber;
const int ProjectInfo::kClusterIdFieldNumber;
const int ProjectInfo::kStatusFieldNumber;
const int ProjectInfo::kTotalTemplateNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectInfo::ProjectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProjectInfo)
}
ProjectInfo::ProjectInfo(const ProjectInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_template_number_) -
    reinterpret_cast<char*>(&id_)) + sizeof(total_template_number_));
  // @@protoc_insertion_point(copy_constructor:ProjectInfo)
}

void ProjectInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_template_number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(total_template_number_));
  _cached_size_ = 0;
}

ProjectInfo::~ProjectInfo() {
  // @@protoc_insertion_point(destructor:ProjectInfo)
  SharedDtor();
}

void ProjectInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProjectInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectInfo::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjectInfo& ProjectInfo::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProjectInfo* ProjectInfo::New(::google::protobuf::Arena* arena) const {
  ProjectInfo* n = new ProjectInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ProjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_template_number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(total_template_number_));
  _internal_metadata_.Clear();
}

bool ProjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProjectInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProjectInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProjectInfo.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProjectInfo.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_index_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_index_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_doc_number = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_doc_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_data_size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_data_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cluster_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProjectStatus status = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ProjectStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_template_number = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_template_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProjectInfo)
  return false;
#undef DO_
}

void ProjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProjectInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string cluster_name = 3;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProjectInfo.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cluster_name(), output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProjectInfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // int32 total_index_number = 5;
  if (this->total_index_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_index_number(), output);
  }

  // int64 total_doc_number = 6;
  if (this->total_doc_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->total_doc_number(), output);
  }

  // int64 total_data_size = 7;
  if (this->total_data_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->total_data_size(), output);
  }

  // int32 cluster_id = 8;
  if (this->cluster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cluster_id(), output);
  }

  // .ProjectStatus status = 9;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->status(), output);
  }

  // int32 total_template_number = 17;
  if (this->total_template_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->total_template_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProjectInfo)
}

::google::protobuf::uint8* ProjectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProjectInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string cluster_name = 3;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProjectInfo.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cluster_name(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProjectInfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // int32 total_index_number = 5;
  if (this->total_index_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_index_number(), target);
  }

  // int64 total_doc_number = 6;
  if (this->total_doc_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->total_doc_number(), target);
  }

  // int64 total_data_size = 7;
  if (this->total_data_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->total_data_size(), target);
  }

  // int32 cluster_id = 8;
  if (this->cluster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cluster_id(), target);
  }

  // .ProjectStatus status = 9;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->status(), target);
  }

  // int32 total_template_number = 17;
  if (this->total_template_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->total_template_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProjectInfo)
  return target;
}

size_t ProjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProjectInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string cluster_name = 3;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 total_index_number = 5;
  if (this->total_index_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_index_number());
  }

  // int64 total_doc_number = 6;
  if (this->total_doc_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_doc_number());
  }

  // int64 total_data_size = 7;
  if (this->total_data_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_data_size());
  }

  // int32 cluster_id = 8;
  if (this->cluster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cluster_id());
  }

  // .ProjectStatus status = 9;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 total_template_number = 17;
  if (this->total_template_number() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_template_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProjectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProjectInfo)
    MergeFrom(*source);
  }
}

void ProjectInfo::MergeFrom(const ProjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.total_index_number() != 0) {
    set_total_index_number(from.total_index_number());
  }
  if (from.total_doc_number() != 0) {
    set_total_doc_number(from.total_doc_number());
  }
  if (from.total_data_size() != 0) {
    set_total_data_size(from.total_data_size());
  }
  if (from.cluster_id() != 0) {
    set_cluster_id(from.cluster_id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.total_template_number() != 0) {
    set_total_template_number(from.total_template_number());
  }
}

void ProjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectInfo::CopyFrom(const ProjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectInfo::IsInitialized() const {
  return true;
}

void ProjectInfo::Swap(ProjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectInfo::InternalSwap(ProjectInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  cluster_name_.Swap(&other->cluster_name_);
  description_.Swap(&other->description_);
  swap(id_, other->id_);
  swap(total_index_number_, other->total_index_number_);
  swap(total_doc_number_, other->total_doc_number_);
  swap(total_data_size_, other->total_data_size_);
  swap(cluster_id_, other->cluster_id_);
  swap(status_, other->status_);
  swap(total_template_number_, other->total_template_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectInfo::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectInfo

// int32 id = 1;
void ProjectInfo::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 ProjectInfo::id() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.id)
  return id_;
}
void ProjectInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProjectInfo.id)
}

// string name = 2;
void ProjectInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectInfo::name() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.name)
  return name_.GetNoArena();
}
void ProjectInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProjectInfo.name)
}
#if LANG_CXX11
void ProjectInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProjectInfo.name)
}
#endif
void ProjectInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProjectInfo.name)
}
void ProjectInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProjectInfo.name)
}
::std::string* ProjectInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProjectInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectInfo::release_name() {
  // @@protoc_insertion_point(field_release:ProjectInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProjectInfo.name)
}

// string cluster_name = 3;
void ProjectInfo::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectInfo::cluster_name() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.cluster_name)
  return cluster_name_.GetNoArena();
}
void ProjectInfo::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProjectInfo.cluster_name)
}
#if LANG_CXX11
void ProjectInfo::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProjectInfo.cluster_name)
}
#endif
void ProjectInfo::set_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProjectInfo.cluster_name)
}
void ProjectInfo::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProjectInfo.cluster_name)
}
::std::string* ProjectInfo::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:ProjectInfo.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectInfo::release_cluster_name() {
  // @@protoc_insertion_point(field_release:ProjectInfo.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:ProjectInfo.cluster_name)
}

// string description = 4;
void ProjectInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectInfo::description() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.description)
  return description_.GetNoArena();
}
void ProjectInfo::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProjectInfo.description)
}
#if LANG_CXX11
void ProjectInfo::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProjectInfo.description)
}
#endif
void ProjectInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProjectInfo.description)
}
void ProjectInfo::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProjectInfo.description)
}
::std::string* ProjectInfo::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:ProjectInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectInfo::release_description() {
  // @@protoc_insertion_point(field_release:ProjectInfo.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ProjectInfo.description)
}

// int32 total_index_number = 5;
void ProjectInfo::clear_total_index_number() {
  total_index_number_ = 0;
}
::google::protobuf::int32 ProjectInfo::total_index_number() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.total_index_number)
  return total_index_number_;
}
void ProjectInfo::set_total_index_number(::google::protobuf::int32 value) {
  
  total_index_number_ = value;
  // @@protoc_insertion_point(field_set:ProjectInfo.total_index_number)
}

// int64 total_doc_number = 6;
void ProjectInfo::clear_total_doc_number() {
  total_doc_number_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ProjectInfo::total_doc_number() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.total_doc_number)
  return total_doc_number_;
}
void ProjectInfo::set_total_doc_number(::google::protobuf::int64 value) {
  
  total_doc_number_ = value;
  // @@protoc_insertion_point(field_set:ProjectInfo.total_doc_number)
}

// int64 total_data_size = 7;
void ProjectInfo::clear_total_data_size() {
  total_data_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ProjectInfo::total_data_size() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.total_data_size)
  return total_data_size_;
}
void ProjectInfo::set_total_data_size(::google::protobuf::int64 value) {
  
  total_data_size_ = value;
  // @@protoc_insertion_point(field_set:ProjectInfo.total_data_size)
}

// int32 cluster_id = 8;
void ProjectInfo::clear_cluster_id() {
  cluster_id_ = 0;
}
::google::protobuf::int32 ProjectInfo::cluster_id() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.cluster_id)
  return cluster_id_;
}
void ProjectInfo::set_cluster_id(::google::protobuf::int32 value) {
  
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:ProjectInfo.cluster_id)
}

// .ProjectStatus status = 9;
void ProjectInfo::clear_status() {
  status_ = 0;
}
::ProjectStatus ProjectInfo::status() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.status)
  return static_cast< ::ProjectStatus >(status_);
}
void ProjectInfo::set_status(::ProjectStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:ProjectInfo.status)
}

// int32 total_template_number = 17;
void ProjectInfo::clear_total_template_number() {
  total_template_number_ = 0;
}
::google::protobuf::int32 ProjectInfo::total_template_number() const {
  // @@protoc_insertion_point(field_get:ProjectInfo.total_template_number)
  return total_template_number_;
}
void ProjectInfo::set_total_template_number(::google::protobuf::int32 value) {
  
  total_template_number_ = value;
  // @@protoc_insertion_point(field_set:ProjectInfo.total_template_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListProjectRequest::kClusterIdFieldNumber;
const int ListProjectRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListProjectRequest::ListProjectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListProjectRequest)
}
ListProjectRequest::ListProjectRequest(const ListProjectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ListProjectRequest)
}

void ListProjectRequest::SharedCtor() {
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListProjectRequest::~ListProjectRequest() {
  // @@protoc_insertion_point(destructor:ListProjectRequest)
  SharedDtor();
}

void ListProjectRequest::SharedDtor() {
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListProjectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListProjectRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListProjectRequest& ListProjectRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListProjectRequest* ListProjectRequest::New(::google::protobuf::Arena* arena) const {
  ListProjectRequest* n = new ListProjectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ListProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListProjectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListProjectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListProjectRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListProjectRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListProjectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListProjectRequest)
  return false;
#undef DO_
}

void ListProjectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_id = 1;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListProjectRequest)
}

::google::protobuf::uint8* ListProjectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListProjectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_id = 1;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListProjectRequest)
  return target;
}

size_t ListProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListProjectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cluster_id = 1;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListProjectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListProjectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListProjectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListProjectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListProjectRequest)
    MergeFrom(*source);
  }
}

void ListProjectRequest::MergeFrom(const ListProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ListProjectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListProjectRequest::CopyFrom(const ListProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectRequest::IsInitialized() const {
  return true;
}

void ListProjectRequest::Swap(ListProjectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListProjectRequest::InternalSwap(ListProjectRequest* other) {
  using std::swap;
  cluster_id_.Swap(&other->cluster_id_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListProjectRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListProjectRequest

// string cluster_id = 1;
void ListProjectRequest::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListProjectRequest::cluster_id() const {
  // @@protoc_insertion_point(field_get:ListProjectRequest.cluster_id)
  return cluster_id_.GetNoArena();
}
void ListProjectRequest::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListProjectRequest.cluster_id)
}
#if LANG_CXX11
void ListProjectRequest::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListProjectRequest.cluster_id)
}
#endif
void ListProjectRequest::set_cluster_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListProjectRequest.cluster_id)
}
void ListProjectRequest::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListProjectRequest.cluster_id)
}
::std::string* ListProjectRequest::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:ListProjectRequest.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListProjectRequest::release_cluster_id() {
  // @@protoc_insertion_point(field_release:ListProjectRequest.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListProjectRequest::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:ListProjectRequest.cluster_id)
}

// string name = 2;
void ListProjectRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListProjectRequest::name() const {
  // @@protoc_insertion_point(field_get:ListProjectRequest.name)
  return name_.GetNoArena();
}
void ListProjectRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListProjectRequest.name)
}
#if LANG_CXX11
void ListProjectRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListProjectRequest.name)
}
#endif
void ListProjectRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListProjectRequest.name)
}
void ListProjectRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListProjectRequest.name)
}
::std::string* ListProjectRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ListProjectRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListProjectRequest::release_name() {
  // @@protoc_insertion_point(field_release:ListProjectRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListProjectRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ListProjectRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListProjectReply::kCodeFieldNumber;
const int ListProjectReply::kMessageFieldNumber;
const int ListProjectReply::kProjectsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListProjectReply::ListProjectReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListProjectReply)
}
ListProjectReply::ListProjectReply(const ListProjectReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      projects_(from.projects_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ListProjectReply)
}

void ListProjectReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ListProjectReply::~ListProjectReply() {
  // @@protoc_insertion_point(destructor:ListProjectReply)
  SharedDtor();
}

void ListProjectReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListProjectReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListProjectReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListProjectReply& ListProjectReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListProjectReply* ListProjectReply::New(::google::protobuf::Arena* arena) const {
  ListProjectReply* n = new ListProjectReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListProjectReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ListProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projects_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool ListProjectReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListProjectReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListProjectReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string projects = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_projects()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->projects(this->projects_size() - 1).data(),
            static_cast<int>(this->projects(this->projects_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListProjectReply.projects"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListProjectReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListProjectReply)
  return false;
#undef DO_
}

void ListProjectReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // repeated string projects = 3;
  for (int i = 0, n = this->projects_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->projects(i).data(), static_cast<int>(this->projects(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectReply.projects");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->projects(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListProjectReply)
}

::google::protobuf::uint8* ListProjectReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListProjectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // repeated string projects = 3;
  for (int i = 0, n = this->projects_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->projects(i).data(), static_cast<int>(this->projects(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectReply.projects");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->projects(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListProjectReply)
  return target;
}

size_t ListProjectReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListProjectReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string projects = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->projects_size());
  for (int i = 0, n = this->projects_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->projects(i));
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListProjectReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListProjectReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListProjectReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListProjectReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListProjectReply)
    MergeFrom(*source);
  }
}

void ListProjectReply::MergeFrom(const ListProjectReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListProjectReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projects_.MergeFrom(from.projects_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ListProjectReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListProjectReply::CopyFrom(const ListProjectReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectReply::IsInitialized() const {
  return true;
}

void ListProjectReply::Swap(ListProjectReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListProjectReply::InternalSwap(ListProjectReply* other) {
  using std::swap;
  projects_.InternalSwap(&other->projects_);
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListProjectReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListProjectReply

// int32 code = 1;
void ListProjectReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ListProjectReply::code() const {
  // @@protoc_insertion_point(field_get:ListProjectReply.code)
  return code_;
}
void ListProjectReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ListProjectReply.code)
}

// string message = 2;
void ListProjectReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListProjectReply::message() const {
  // @@protoc_insertion_point(field_get:ListProjectReply.message)
  return message_.GetNoArena();
}
void ListProjectReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListProjectReply.message)
}
#if LANG_CXX11
void ListProjectReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListProjectReply.message)
}
#endif
void ListProjectReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListProjectReply.message)
}
void ListProjectReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListProjectReply.message)
}
::std::string* ListProjectReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ListProjectReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListProjectReply::release_message() {
  // @@protoc_insertion_point(field_release:ListProjectReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListProjectReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ListProjectReply.message)
}

// repeated string projects = 3;
int ListProjectReply::projects_size() const {
  return projects_.size();
}
void ListProjectReply::clear_projects() {
  projects_.Clear();
}
const ::std::string& ListProjectReply::projects(int index) const {
  // @@protoc_insertion_point(field_get:ListProjectReply.projects)
  return projects_.Get(index);
}
::std::string* ListProjectReply::mutable_projects(int index) {
  // @@protoc_insertion_point(field_mutable:ListProjectReply.projects)
  return projects_.Mutable(index);
}
void ListProjectReply::set_projects(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ListProjectReply.projects)
  projects_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ListProjectReply::set_projects(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ListProjectReply.projects)
  projects_.Mutable(index)->assign(std::move(value));
}
#endif
void ListProjectReply::set_projects(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  projects_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ListProjectReply.projects)
}
void ListProjectReply::set_projects(int index, const char* value, size_t size) {
  projects_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ListProjectReply.projects)
}
::std::string* ListProjectReply::add_projects() {
  // @@protoc_insertion_point(field_add_mutable:ListProjectReply.projects)
  return projects_.Add();
}
void ListProjectReply::add_projects(const ::std::string& value) {
  projects_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ListProjectReply.projects)
}
#if LANG_CXX11
void ListProjectReply::add_projects(::std::string&& value) {
  projects_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ListProjectReply.projects)
}
#endif
void ListProjectReply::add_projects(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  projects_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ListProjectReply.projects)
}
void ListProjectReply::add_projects(const char* value, size_t size) {
  projects_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ListProjectReply.projects)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListProjectReply::projects() const {
  // @@protoc_insertion_point(field_list:ListProjectReply.projects)
  return projects_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListProjectReply::mutable_projects() {
  // @@protoc_insertion_point(field_mutable_list:ListProjectReply.projects)
  return &projects_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListProjectDetailsRequest::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListProjectDetailsRequest::ListProjectDetailsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListProjectDetailsRequest)
}
ListProjectDetailsRequest::ListProjectDetailsRequest(const ListProjectDetailsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster().size() > 0) {
    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  // @@protoc_insertion_point(copy_constructor:ListProjectDetailsRequest)
}

void ListProjectDetailsRequest::SharedCtor() {
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListProjectDetailsRequest::~ListProjectDetailsRequest() {
  // @@protoc_insertion_point(destructor:ListProjectDetailsRequest)
  SharedDtor();
}

void ListProjectDetailsRequest::SharedDtor() {
  cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListProjectDetailsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListProjectDetailsRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListProjectDetailsRequest& ListProjectDetailsRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListProjectDetailsRequest* ListProjectDetailsRequest::New(::google::protobuf::Arena* arena) const {
  ListProjectDetailsRequest* n = new ListProjectDetailsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListProjectDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ListProjectDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListProjectDetailsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListProjectDetailsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster().data(), static_cast<int>(this->cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListProjectDetailsRequest.cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListProjectDetailsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListProjectDetailsRequest)
  return false;
#undef DO_
}

void ListProjectDetailsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListProjectDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster = 1;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectDetailsRequest.cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListProjectDetailsRequest)
}

::google::protobuf::uint8* ListProjectDetailsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListProjectDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster = 1;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectDetailsRequest.cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListProjectDetailsRequest)
  return target;
}

size_t ListProjectDetailsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListProjectDetailsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cluster = 1;
  if (this->cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListProjectDetailsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListProjectDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListProjectDetailsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListProjectDetailsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListProjectDetailsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListProjectDetailsRequest)
    MergeFrom(*source);
  }
}

void ListProjectDetailsRequest::MergeFrom(const ListProjectDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListProjectDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster().size() > 0) {

    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
}

void ListProjectDetailsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListProjectDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListProjectDetailsRequest::CopyFrom(const ListProjectDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListProjectDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectDetailsRequest::IsInitialized() const {
  return true;
}

void ListProjectDetailsRequest::Swap(ListProjectDetailsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListProjectDetailsRequest::InternalSwap(ListProjectDetailsRequest* other) {
  using std::swap;
  cluster_.Swap(&other->cluster_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListProjectDetailsRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListProjectDetailsRequest

// string cluster = 1;
void ListProjectDetailsRequest::clear_cluster() {
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListProjectDetailsRequest::cluster() const {
  // @@protoc_insertion_point(field_get:ListProjectDetailsRequest.cluster)
  return cluster_.GetNoArena();
}
void ListProjectDetailsRequest::set_cluster(const ::std::string& value) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListProjectDetailsRequest.cluster)
}
#if LANG_CXX11
void ListProjectDetailsRequest::set_cluster(::std::string&& value) {
  
  cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListProjectDetailsRequest.cluster)
}
#endif
void ListProjectDetailsRequest::set_cluster(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListProjectDetailsRequest.cluster)
}
void ListProjectDetailsRequest::set_cluster(const char* value, size_t size) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListProjectDetailsRequest.cluster)
}
::std::string* ListProjectDetailsRequest::mutable_cluster() {
  
  // @@protoc_insertion_point(field_mutable:ListProjectDetailsRequest.cluster)
  return cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListProjectDetailsRequest::release_cluster() {
  // @@protoc_insertion_point(field_release:ListProjectDetailsRequest.cluster)
  
  return cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListProjectDetailsRequest::set_allocated_cluster(::std::string* cluster) {
  if (cluster != NULL) {
    
  } else {
    
  }
  cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster);
  // @@protoc_insertion_point(field_set_allocated:ListProjectDetailsRequest.cluster)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListProjectDetailsReply::kErrorCodeFieldNumber;
const int ListProjectDetailsReply::kErrorMessageFieldNumber;
const int ListProjectDetailsReply::kProjectsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListProjectDetailsReply::ListProjectDetailsReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListProjectDetailsReply)
}
ListProjectDetailsReply::ListProjectDetailsReply(const ListProjectDetailsReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      projects_(from.projects_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:ListProjectDetailsReply)
}

void ListProjectDetailsReply::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _cached_size_ = 0;
}

ListProjectDetailsReply::~ListProjectDetailsReply() {
  // @@protoc_insertion_point(destructor:ListProjectDetailsReply)
  SharedDtor();
}

void ListProjectDetailsReply::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListProjectDetailsReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListProjectDetailsReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListProjectDetailsReply& ListProjectDetailsReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListProjectDetailsReply* ListProjectDetailsReply::New(::google::protobuf::Arena* arena) const {
  ListProjectDetailsReply* n = new ListProjectDetailsReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListProjectDetailsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ListProjectDetailsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projects_.Clear();
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _internal_metadata_.Clear();
}

bool ListProjectDetailsReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListProjectDetailsReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListProjectDetailsReply.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProjectInfo projects = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_projects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListProjectDetailsReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListProjectDetailsReply)
  return false;
#undef DO_
}

void ListProjectDetailsReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListProjectDetailsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectDetailsReply.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  // repeated .ProjectInfo projects = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->projects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->projects(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListProjectDetailsReply)
}

::google::protobuf::uint8* ListProjectDetailsReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListProjectDetailsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListProjectDetailsReply.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  // repeated .ProjectInfo projects = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->projects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->projects(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListProjectDetailsReply)
  return target;
}

size_t ListProjectDetailsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListProjectDetailsReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ProjectInfo projects = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->projects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->projects(static_cast<int>(i)));
    }
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListProjectDetailsReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListProjectDetailsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListProjectDetailsReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListProjectDetailsReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListProjectDetailsReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListProjectDetailsReply)
    MergeFrom(*source);
  }
}

void ListProjectDetailsReply::MergeFrom(const ListProjectDetailsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListProjectDetailsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projects_.MergeFrom(from.projects_);
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void ListProjectDetailsReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListProjectDetailsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListProjectDetailsReply::CopyFrom(const ListProjectDetailsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListProjectDetailsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectDetailsReply::IsInitialized() const {
  return true;
}

void ListProjectDetailsReply::Swap(ListProjectDetailsReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListProjectDetailsReply::InternalSwap(ListProjectDetailsReply* other) {
  using std::swap;
  projects_.InternalSwap(&other->projects_);
  error_message_.Swap(&other->error_message_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListProjectDetailsReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListProjectDetailsReply

// int32 error_code = 1;
void ListProjectDetailsReply::clear_error_code() {
  error_code_ = 0;
}
::google::protobuf::int32 ListProjectDetailsReply::error_code() const {
  // @@protoc_insertion_point(field_get:ListProjectDetailsReply.error_code)
  return error_code_;
}
void ListProjectDetailsReply::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:ListProjectDetailsReply.error_code)
}

// string error_message = 2;
void ListProjectDetailsReply::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListProjectDetailsReply::error_message() const {
  // @@protoc_insertion_point(field_get:ListProjectDetailsReply.error_message)
  return error_message_.GetNoArena();
}
void ListProjectDetailsReply::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListProjectDetailsReply.error_message)
}
#if LANG_CXX11
void ListProjectDetailsReply::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListProjectDetailsReply.error_message)
}
#endif
void ListProjectDetailsReply::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListProjectDetailsReply.error_message)
}
void ListProjectDetailsReply::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListProjectDetailsReply.error_message)
}
::std::string* ListProjectDetailsReply::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:ListProjectDetailsReply.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListProjectDetailsReply::release_error_message() {
  // @@protoc_insertion_point(field_release:ListProjectDetailsReply.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListProjectDetailsReply::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:ListProjectDetailsReply.error_message)
}

// repeated .ProjectInfo projects = 3;
int ListProjectDetailsReply::projects_size() const {
  return projects_.size();
}
void ListProjectDetailsReply::clear_projects() {
  projects_.Clear();
}
const ::ProjectInfo& ListProjectDetailsReply::projects(int index) const {
  // @@protoc_insertion_point(field_get:ListProjectDetailsReply.projects)
  return projects_.Get(index);
}
::ProjectInfo* ListProjectDetailsReply::mutable_projects(int index) {
  // @@protoc_insertion_point(field_mutable:ListProjectDetailsReply.projects)
  return projects_.Mutable(index);
}
::ProjectInfo* ListProjectDetailsReply::add_projects() {
  // @@protoc_insertion_point(field_add:ListProjectDetailsReply.projects)
  return projects_.Add();
}
::google::protobuf::RepeatedPtrField< ::ProjectInfo >*
ListProjectDetailsReply::mutable_projects() {
  // @@protoc_insertion_point(field_mutable_list:ListProjectDetailsReply.projects)
  return &projects_;
}
const ::google::protobuf::RepeatedPtrField< ::ProjectInfo >&
ListProjectDetailsReply::projects() const {
  // @@protoc_insertion_point(field_list:ListProjectDetailsReply.projects)
  return projects_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateIndexRequest::kNameFieldNumber;
const int CreateIndexRequest::kProjectFieldNumber;
const int CreateIndexRequest::kAliasesFieldNumber;
const int CreateIndexRequest::kMappingFieldNumber;
const int CreateIndexRequest::kSettingFieldNumber;
const int CreateIndexRequest::kRollingPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIndexRequest::CreateIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateIndexRequest)
}
CreateIndexRequest::CreateIndexRequest(const CreateIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      aliases_(from.aliases_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.has_mapping()) {
    mapping_ = new ::google::protobuf::StringValue(*from.mapping_);
  } else {
    mapping_ = NULL;
  }
  if (from.has_setting()) {
    setting_ = new ::google::protobuf::StringValue(*from.setting_);
  } else {
    setting_ = NULL;
  }
  rolling_policy_ = from.rolling_policy_;
  // @@protoc_insertion_point(copy_constructor:CreateIndexRequest)
}

void CreateIndexRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mapping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rolling_policy_) -
      reinterpret_cast<char*>(&mapping_)) + sizeof(rolling_policy_));
  _cached_size_ = 0;
}

CreateIndexRequest::~CreateIndexRequest() {
  // @@protoc_insertion_point(destructor:CreateIndexRequest)
  SharedDtor();
}

void CreateIndexRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mapping_;
  if (this != internal_default_instance()) delete setting_;
}

void CreateIndexRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateIndexRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateIndexRequest& CreateIndexRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateIndexRequest* CreateIndexRequest::New(::google::protobuf::Arena* arena) const {
  CreateIndexRequest* n = new CreateIndexRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aliases_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && mapping_ != NULL) {
    delete mapping_;
  }
  mapping_ = NULL;
  if (GetArenaNoVirtual() == NULL && setting_ != NULL) {
    delete setting_;
  }
  setting_ = NULL;
  rolling_policy_ = 0;
  _internal_metadata_.Clear();
}

bool CreateIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateIndexRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateIndexRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateIndexRequest.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string aliases = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_aliases()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->aliases(this->aliases_size() - 1).data(),
            static_cast<int>(this->aliases(this->aliases_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateIndexRequest.aliases"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue mapping = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mapping()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue setting = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AutoIndexRollingPolicy rolling_policy = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rolling_policy(static_cast< ::AutoIndexRollingPolicy >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateIndexRequest)
  return false;
#undef DO_
}

void CreateIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateIndexRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string project = 2;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateIndexRequest.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project(), output);
  }

  // repeated string aliases = 4;
  for (int i = 0, n = this->aliases_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aliases(i).data(), static_cast<int>(this->aliases(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateIndexRequest.aliases");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->aliases(i), output);
  }

  // .google.protobuf.StringValue mapping = 5;
  if (this->has_mapping()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->mapping_, output);
  }

  // .google.protobuf.StringValue setting = 6;
  if (this->has_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->setting_, output);
  }

  // .AutoIndexRollingPolicy rolling_policy = 7;
  if (this->rolling_policy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->rolling_policy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateIndexRequest)
}

::google::protobuf::uint8* CreateIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateIndexRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string project = 2;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateIndexRequest.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project(), target);
  }

  // repeated string aliases = 4;
  for (int i = 0, n = this->aliases_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aliases(i).data(), static_cast<int>(this->aliases(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateIndexRequest.aliases");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->aliases(i), target);
  }

  // .google.protobuf.StringValue mapping = 5;
  if (this->has_mapping()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->mapping_, deterministic, target);
  }

  // .google.protobuf.StringValue setting = 6;
  if (this->has_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->setting_, deterministic, target);
  }

  // .AutoIndexRollingPolicy rolling_policy = 7;
  if (this->rolling_policy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->rolling_policy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateIndexRequest)
  return target;
}

size_t CreateIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string aliases = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->aliases_size());
  for (int i = 0, n = this->aliases_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->aliases(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string project = 2;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // .google.protobuf.StringValue mapping = 5;
  if (this->has_mapping()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mapping_);
  }

  // .google.protobuf.StringValue setting = 6;
  if (this->has_setting()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->setting_);
  }

  // .AutoIndexRollingPolicy rolling_policy = 7;
  if (this->rolling_policy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rolling_policy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateIndexRequest)
    MergeFrom(*source);
  }
}

void CreateIndexRequest::MergeFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aliases_.MergeFrom(from.aliases_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.has_mapping()) {
    mutable_mapping()->::google::protobuf::StringValue::MergeFrom(from.mapping());
  }
  if (from.has_setting()) {
    mutable_setting()->::google::protobuf::StringValue::MergeFrom(from.setting());
  }
  if (from.rolling_policy() != 0) {
    set_rolling_policy(from.rolling_policy());
  }
}

void CreateIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIndexRequest::CopyFrom(const CreateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexRequest::IsInitialized() const {
  return true;
}

void CreateIndexRequest::Swap(CreateIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateIndexRequest::InternalSwap(CreateIndexRequest* other) {
  using std::swap;
  aliases_.InternalSwap(&other->aliases_);
  name_.Swap(&other->name_);
  project_.Swap(&other->project_);
  swap(mapping_, other->mapping_);
  swap(setting_, other->setting_);
  swap(rolling_policy_, other->rolling_policy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateIndexRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateIndexRequest

// string name = 1;
void CreateIndexRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateIndexRequest::name() const {
  // @@protoc_insertion_point(field_get:CreateIndexRequest.name)
  return name_.GetNoArena();
}
void CreateIndexRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateIndexRequest.name)
}
#if LANG_CXX11
void CreateIndexRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateIndexRequest.name)
}
#endif
void CreateIndexRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateIndexRequest.name)
}
void CreateIndexRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateIndexRequest.name)
}
::std::string* CreateIndexRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CreateIndexRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateIndexRequest::release_name() {
  // @@protoc_insertion_point(field_release:CreateIndexRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateIndexRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CreateIndexRequest.name)
}

// string project = 2;
void CreateIndexRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateIndexRequest::project() const {
  // @@protoc_insertion_point(field_get:CreateIndexRequest.project)
  return project_.GetNoArena();
}
void CreateIndexRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateIndexRequest.project)
}
#if LANG_CXX11
void CreateIndexRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateIndexRequest.project)
}
#endif
void CreateIndexRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateIndexRequest.project)
}
void CreateIndexRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateIndexRequest.project)
}
::std::string* CreateIndexRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:CreateIndexRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateIndexRequest::release_project() {
  // @@protoc_insertion_point(field_release:CreateIndexRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateIndexRequest::set_allocated_project(::std::string* project) {
  if (project != NULL) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:CreateIndexRequest.project)
}

// repeated string aliases = 4;
int CreateIndexRequest::aliases_size() const {
  return aliases_.size();
}
void CreateIndexRequest::clear_aliases() {
  aliases_.Clear();
}
const ::std::string& CreateIndexRequest::aliases(int index) const {
  // @@protoc_insertion_point(field_get:CreateIndexRequest.aliases)
  return aliases_.Get(index);
}
::std::string* CreateIndexRequest::mutable_aliases(int index) {
  // @@protoc_insertion_point(field_mutable:CreateIndexRequest.aliases)
  return aliases_.Mutable(index);
}
void CreateIndexRequest::set_aliases(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CreateIndexRequest.aliases)
  aliases_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CreateIndexRequest::set_aliases(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CreateIndexRequest.aliases)
  aliases_.Mutable(index)->assign(std::move(value));
}
#endif
void CreateIndexRequest::set_aliases(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  aliases_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CreateIndexRequest.aliases)
}
void CreateIndexRequest::set_aliases(int index, const char* value, size_t size) {
  aliases_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CreateIndexRequest.aliases)
}
::std::string* CreateIndexRequest::add_aliases() {
  // @@protoc_insertion_point(field_add_mutable:CreateIndexRequest.aliases)
  return aliases_.Add();
}
void CreateIndexRequest::add_aliases(const ::std::string& value) {
  aliases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CreateIndexRequest.aliases)
}
#if LANG_CXX11
void CreateIndexRequest::add_aliases(::std::string&& value) {
  aliases_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CreateIndexRequest.aliases)
}
#endif
void CreateIndexRequest::add_aliases(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  aliases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CreateIndexRequest.aliases)
}
void CreateIndexRequest::add_aliases(const char* value, size_t size) {
  aliases_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CreateIndexRequest.aliases)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateIndexRequest::aliases() const {
  // @@protoc_insertion_point(field_list:CreateIndexRequest.aliases)
  return aliases_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CreateIndexRequest::mutable_aliases() {
  // @@protoc_insertion_point(field_mutable_list:CreateIndexRequest.aliases)
  return &aliases_;
}

// .google.protobuf.StringValue mapping = 5;
bool CreateIndexRequest::has_mapping() const {
  return this != internal_default_instance() && mapping_ != NULL;
}
void CreateIndexRequest::clear_mapping() {
  if (GetArenaNoVirtual() == NULL && mapping_ != NULL) delete mapping_;
  mapping_ = NULL;
}
const ::google::protobuf::StringValue& CreateIndexRequest::mapping() const {
  const ::google::protobuf::StringValue* p = mapping_;
  // @@protoc_insertion_point(field_get:CreateIndexRequest.mapping)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
::google::protobuf::StringValue* CreateIndexRequest::mutable_mapping() {
  
  if (mapping_ == NULL) {
    mapping_ = new ::google::protobuf::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:CreateIndexRequest.mapping)
  return mapping_;
}
::google::protobuf::StringValue* CreateIndexRequest::release_mapping() {
  // @@protoc_insertion_point(field_release:CreateIndexRequest.mapping)
  
  ::google::protobuf::StringValue* temp = mapping_;
  mapping_ = NULL;
  return temp;
}
void CreateIndexRequest::set_allocated_mapping(::google::protobuf::StringValue* mapping) {
  delete mapping_;
  if (mapping != NULL && mapping->GetArena() != NULL) {
    ::google::protobuf::StringValue* new_mapping = new ::google::protobuf::StringValue;
    new_mapping->CopyFrom(*mapping);
    mapping = new_mapping;
  }
  mapping_ = mapping;
  if (mapping) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CreateIndexRequest.mapping)
}

// .google.protobuf.StringValue setting = 6;
bool CreateIndexRequest::has_setting() const {
  return this != internal_default_instance() && setting_ != NULL;
}
void CreateIndexRequest::clear_setting() {
  if (GetArenaNoVirtual() == NULL && setting_ != NULL) delete setting_;
  setting_ = NULL;
}
const ::google::protobuf::StringValue& CreateIndexRequest::setting() const {
  const ::google::protobuf::StringValue* p = setting_;
  // @@protoc_insertion_point(field_get:CreateIndexRequest.setting)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
::google::protobuf::StringValue* CreateIndexRequest::mutable_setting() {
  
  if (setting_ == NULL) {
    setting_ = new ::google::protobuf::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:CreateIndexRequest.setting)
  return setting_;
}
::google::protobuf::StringValue* CreateIndexRequest::release_setting() {
  // @@protoc_insertion_point(field_release:CreateIndexRequest.setting)
  
  ::google::protobuf::StringValue* temp = setting_;
  setting_ = NULL;
  return temp;
}
void CreateIndexRequest::set_allocated_setting(::google::protobuf::StringValue* setting) {
  delete setting_;
  if (setting != NULL && setting->GetArena() != NULL) {
    ::google::protobuf::StringValue* new_setting = new ::google::protobuf::StringValue;
    new_setting->CopyFrom(*setting);
    setting = new_setting;
  }
  setting_ = setting;
  if (setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CreateIndexRequest.setting)
}

// .AutoIndexRollingPolicy rolling_policy = 7;
void CreateIndexRequest::clear_rolling_policy() {
  rolling_policy_ = 0;
}
::AutoIndexRollingPolicy CreateIndexRequest::rolling_policy() const {
  // @@protoc_insertion_point(field_get:CreateIndexRequest.rolling_policy)
  return static_cast< ::AutoIndexRollingPolicy >(rolling_policy_);
}
void CreateIndexRequest::set_rolling_policy(::AutoIndexRollingPolicy value) {
  
  rolling_policy_ = value;
  // @@protoc_insertion_point(field_set:CreateIndexRequest.rolling_policy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateIndexReply::kCodeFieldNumber;
const int CreateIndexReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateIndexReply::CreateIndexReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateIndexReply)
}
CreateIndexReply::CreateIndexReply(const CreateIndexReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:CreateIndexReply)
}

void CreateIndexReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

CreateIndexReply::~CreateIndexReply() {
  // @@protoc_insertion_point(destructor:CreateIndexReply)
  SharedDtor();
}

void CreateIndexReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateIndexReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateIndexReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateIndexReply& CreateIndexReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateIndexReply* CreateIndexReply::New(::google::protobuf::Arena* arena) const {
  CreateIndexReply* n = new CreateIndexReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateIndexReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool CreateIndexReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateIndexReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateIndexReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateIndexReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateIndexReply)
  return false;
#undef DO_
}

void CreateIndexReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateIndexReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateIndexReply)
}

::google::protobuf::uint8* CreateIndexReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateIndexReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateIndexReply)
  return target;
}

size_t CreateIndexReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateIndexReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateIndexReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateIndexReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateIndexReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateIndexReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateIndexReply)
    MergeFrom(*source);
  }
}

void CreateIndexReply::MergeFrom(const CreateIndexReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void CreateIndexReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateIndexReply::CopyFrom(const CreateIndexReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateIndexReply::IsInitialized() const {
  return true;
}

void CreateIndexReply::Swap(CreateIndexReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateIndexReply::InternalSwap(CreateIndexReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateIndexReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateIndexReply

// int32 code = 1;
void CreateIndexReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 CreateIndexReply::code() const {
  // @@protoc_insertion_point(field_get:CreateIndexReply.code)
  return code_;
}
void CreateIndexReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:CreateIndexReply.code)
}

// string message = 2;
void CreateIndexReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateIndexReply::message() const {
  // @@protoc_insertion_point(field_get:CreateIndexReply.message)
  return message_.GetNoArena();
}
void CreateIndexReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateIndexReply.message)
}
#if LANG_CXX11
void CreateIndexReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateIndexReply.message)
}
#endif
void CreateIndexReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateIndexReply.message)
}
void CreateIndexReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateIndexReply.message)
}
::std::string* CreateIndexReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CreateIndexReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateIndexReply::release_message() {
  // @@protoc_insertion_point(field_release:CreateIndexReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateIndexReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CreateIndexReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIndexRequest::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIndexRequest::GetIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetIndexRequest)
}
GetIndexRequest::GetIndexRequest(const GetIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_id_ = from.index_id_;
  // @@protoc_insertion_point(copy_constructor:GetIndexRequest)
}

void GetIndexRequest::SharedCtor() {
  index_id_ = 0;
  _cached_size_ = 0;
}

GetIndexRequest::~GetIndexRequest() {
  // @@protoc_insertion_point(destructor:GetIndexRequest)
  SharedDtor();
}

void GetIndexRequest::SharedDtor() {
}

void GetIndexRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetIndexRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIndexRequest& GetIndexRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetIndexRequest* GetIndexRequest::New(::google::protobuf::Arena* arena) const {
  GetIndexRequest* n = new GetIndexRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_id_ = 0;
  _internal_metadata_.Clear();
}

bool GetIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetIndexRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetIndexRequest)
  return false;
#undef DO_
}

void GetIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index_id = 1;
  if (this->index_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetIndexRequest)
}

::google::protobuf::uint8* GetIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index_id = 1;
  if (this->index_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetIndexRequest)
  return target;
}

size_t GetIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 index_id = 1;
  if (this->index_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetIndexRequest)
    MergeFrom(*source);
  }
}

void GetIndexRequest::MergeFrom(const GetIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_id() != 0) {
    set_index_id(from.index_id());
  }
}

void GetIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIndexRequest::CopyFrom(const GetIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIndexRequest::IsInitialized() const {
  return true;
}

void GetIndexRequest::Swap(GetIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIndexRequest::InternalSwap(GetIndexRequest* other) {
  using std::swap;
  swap(index_id_, other->index_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetIndexRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetIndexRequest

// int32 index_id = 1;
void GetIndexRequest::clear_index_id() {
  index_id_ = 0;
}
::google::protobuf::int32 GetIndexRequest::index_id() const {
  // @@protoc_insertion_point(field_get:GetIndexRequest.index_id)
  return index_id_;
}
void GetIndexRequest::set_index_id(::google::protobuf::int32 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:GetIndexRequest.index_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIndexReply::kCodeFieldNumber;
const int GetIndexReply::kMessageFieldNumber;
const int GetIndexReply::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIndexReply::GetIndexReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetIndexReply)
}
GetIndexReply::GetIndexReply(const GetIndexReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_index()) {
    index_ = new ::IndexInfo(*from.index_);
  } else {
    index_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GetIndexReply)
}

void GetIndexReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&index_)) + sizeof(code_));
  _cached_size_ = 0;
}

GetIndexReply::~GetIndexReply() {
  // @@protoc_insertion_point(destructor:GetIndexReply)
  SharedDtor();
}

void GetIndexReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete index_;
}

void GetIndexReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetIndexReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIndexReply& GetIndexReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetIndexReply* GetIndexReply::New(::google::protobuf::Arena* arena) const {
  GetIndexReply* n = new GetIndexReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetIndexReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GetIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  code_ = 0;
  _internal_metadata_.Clear();
}

bool GetIndexReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetIndexReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetIndexReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IndexInfo index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetIndexReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetIndexReply)
  return false;
#undef DO_
}

void GetIndexReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetIndexReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .IndexInfo index = 3;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->index_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetIndexReply)
}

::google::protobuf::uint8* GetIndexReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetIndexReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .IndexInfo index = 3;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->index_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetIndexReply)
  return target;
}

size_t GetIndexReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetIndexReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .IndexInfo index = 3;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->index_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetIndexReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIndexReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIndexReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetIndexReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetIndexReply)
    MergeFrom(*source);
  }
}

void GetIndexReply::MergeFrom(const GetIndexReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_index()) {
    mutable_index()->::IndexInfo::MergeFrom(from.index());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void GetIndexReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIndexReply::CopyFrom(const GetIndexReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIndexReply::IsInitialized() const {
  return true;
}

void GetIndexReply::Swap(GetIndexReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIndexReply::InternalSwap(GetIndexReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(index_, other->index_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetIndexReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetIndexReply

// int32 code = 1;
void GetIndexReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 GetIndexReply::code() const {
  // @@protoc_insertion_point(field_get:GetIndexReply.code)
  return code_;
}
void GetIndexReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:GetIndexReply.code)
}

// string message = 2;
void GetIndexReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetIndexReply::message() const {
  // @@protoc_insertion_point(field_get:GetIndexReply.message)
  return message_.GetNoArena();
}
void GetIndexReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetIndexReply.message)
}
#if LANG_CXX11
void GetIndexReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetIndexReply.message)
}
#endif
void GetIndexReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetIndexReply.message)
}
void GetIndexReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetIndexReply.message)
}
::std::string* GetIndexReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:GetIndexReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetIndexReply::release_message() {
  // @@protoc_insertion_point(field_release:GetIndexReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetIndexReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:GetIndexReply.message)
}

// .IndexInfo index = 3;
bool GetIndexReply::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
void GetIndexReply::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) delete index_;
  index_ = NULL;
}
const ::IndexInfo& GetIndexReply::index() const {
  const ::IndexInfo* p = index_;
  // @@protoc_insertion_point(field_get:GetIndexReply.index)
  return p != NULL ? *p : *reinterpret_cast<const ::IndexInfo*>(
      &::_IndexInfo_default_instance_);
}
::IndexInfo* GetIndexReply::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::IndexInfo;
  }
  // @@protoc_insertion_point(field_mutable:GetIndexReply.index)
  return index_;
}
::IndexInfo* GetIndexReply::release_index() {
  // @@protoc_insertion_point(field_release:GetIndexReply.index)
  
  ::IndexInfo* temp = index_;
  index_ = NULL;
  return temp;
}
void GetIndexReply::set_allocated_index(::IndexInfo* index) {
  delete index_;
  index_ = index;
  if (index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GetIndexReply.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexInfo::kNameFieldNumber;
const int IndexInfo::kClusterNameFieldNumber;
const int IndexInfo::kProjectNameFieldNumber;
const int IndexInfo::kMappingFieldNumber;
const int IndexInfo::kSettingFieldNumber;
const int IndexInfo::kAliasesFieldNumber;
const int IndexInfo::kTotalDocNumberFieldNumber;
const int IndexInfo::kTotalDataSizeFieldNumber;
const int IndexInfo::kPrimaryShardNumberFieldNumber;
const int IndexInfo::kReplicaShardNumberFieldNumber;
const int IndexInfo::kIndexHealthFieldNumber;
const int IndexInfo::kProjectIdFieldNumber;
const int IndexInfo::kClusterIdFieldNumber;
const int IndexInfo::kRollingPolicyFieldNumber;
const int IndexInfo::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexInfo::IndexInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IndexInfo)
}
IndexInfo::IndexInfo(const IndexInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      aliases_(from.aliases_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_name().size() > 0) {
    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  mapping_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mapping().size() > 0) {
    mapping_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapping_);
  }
  setting_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.setting().size() > 0) {
    setting_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setting_);
  }
  index_health_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index_health().size() > 0) {
    index_health_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_health_);
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  ::memcpy(&total_doc_number_, &from.total_doc_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_id_) -
    reinterpret_cast<char*>(&total_doc_number_)) + sizeof(index_id_));
  // @@protoc_insertion_point(copy_constructor:IndexInfo)
}

void IndexInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapping_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setting_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_health_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_doc_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_id_) -
      reinterpret_cast<char*>(&total_doc_number_)) + sizeof(index_id_));
  _cached_size_ = 0;
}

IndexInfo::~IndexInfo() {
  // @@protoc_insertion_point(destructor:IndexInfo)
  SharedDtor();
}

void IndexInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapping_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setting_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_health_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IndexInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexInfo::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexInfo& IndexInfo::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexInfo* IndexInfo::New(::google::protobuf::Arena* arena) const {
  IndexInfo* n = new IndexInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aliases_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapping_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setting_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_doc_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_id_) -
      reinterpret_cast<char*>(&total_doc_number_)) + sizeof(index_id_));
  _internal_metadata_.Clear();
}

bool IndexInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IndexInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), static_cast<int>(this->project_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.project_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mapping = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapping()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mapping().data(), static_cast<int>(this->mapping().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.mapping"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string setting = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_setting()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->setting().data(), static_cast<int>(this->setting().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.setting"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string aliases = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_aliases()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->aliases(this->aliases_size() - 1).data(),
            static_cast<int>(this->aliases(this->aliases_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.aliases"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_doc_number = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_doc_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_data_size = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_data_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 primary_shard_number = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &primary_shard_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 replica_shard_number = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replica_shard_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string index_health = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_health()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_health().data(), static_cast<int>(this->index_health().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.index_health"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IndexInfo.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AutoIndexRollingPolicy rolling_policy = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rolling_policy(static_cast< ::AutoIndexRollingPolicy >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 index_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IndexInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IndexInfo)
  return false;
#undef DO_
}

void IndexInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IndexInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_name(), output);
  }

  // string project_name = 3;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->project_name(), output);
  }

  // string mapping = 5;
  if (this->mapping().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mapping().data(), static_cast<int>(this->mapping().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.mapping");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mapping(), output);
  }

  // string setting = 6;
  if (this->setting().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setting().data(), static_cast<int>(this->setting().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.setting");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->setting(), output);
  }

  // repeated string aliases = 7;
  for (int i = 0, n = this->aliases_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aliases(i).data(), static_cast<int>(this->aliases(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.aliases");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->aliases(i), output);
  }

  // int64 total_doc_number = 8;
  if (this->total_doc_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->total_doc_number(), output);
  }

  // int64 total_data_size = 9;
  if (this->total_data_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->total_data_size(), output);
  }

  // int32 primary_shard_number = 10;
  if (this->primary_shard_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->primary_shard_number(), output);
  }

  // int32 replica_shard_number = 11;
  if (this->replica_shard_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->replica_shard_number(), output);
  }

  // string index_health = 12;
  if (this->index_health().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_health().data(), static_cast<int>(this->index_health().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.index_health");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->index_health(), output);
  }

  // string project_id = 13;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->project_id(), output);
  }

  // string cluster_id = 14;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->cluster_id(), output);
  }

  // .AutoIndexRollingPolicy rolling_policy = 15;
  if (this->rolling_policy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->rolling_policy(), output);
  }

  // int32 index_id = 16;
  if (this->index_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->index_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IndexInfo)
}

::google::protobuf::uint8* IndexInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IndexInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_name(), target);
  }

  // string project_name = 3;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->project_name(), target);
  }

  // string mapping = 5;
  if (this->mapping().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mapping().data(), static_cast<int>(this->mapping().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.mapping");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mapping(), target);
  }

  // string setting = 6;
  if (this->setting().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setting().data(), static_cast<int>(this->setting().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.setting");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->setting(), target);
  }

  // repeated string aliases = 7;
  for (int i = 0, n = this->aliases_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aliases(i).data(), static_cast<int>(this->aliases(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.aliases");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->aliases(i), target);
  }

  // int64 total_doc_number = 8;
  if (this->total_doc_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->total_doc_number(), target);
  }

  // int64 total_data_size = 9;
  if (this->total_data_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->total_data_size(), target);
  }

  // int32 primary_shard_number = 10;
  if (this->primary_shard_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->primary_shard_number(), target);
  }

  // int32 replica_shard_number = 11;
  if (this->replica_shard_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->replica_shard_number(), target);
  }

  // string index_health = 12;
  if (this->index_health().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_health().data(), static_cast<int>(this->index_health().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.index_health");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->index_health(), target);
  }

  // string project_id = 13;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->project_id(), target);
  }

  // string cluster_id = 14;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IndexInfo.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->cluster_id(), target);
  }

  // .AutoIndexRollingPolicy rolling_policy = 15;
  if (this->rolling_policy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->rolling_policy(), target);
  }

  // int32 index_id = 16;
  if (this->index_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->index_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexInfo)
  return target;
}

size_t IndexInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string aliases = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->aliases_size());
  for (int i = 0, n = this->aliases_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->aliases(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string project_name = 3;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  // string mapping = 5;
  if (this->mapping().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mapping());
  }

  // string setting = 6;
  if (this->setting().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->setting());
  }

  // string index_health = 12;
  if (this->index_health().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_health());
  }

  // string project_id = 13;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string cluster_id = 14;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // int64 total_doc_number = 8;
  if (this->total_doc_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_doc_number());
  }

  // int64 total_data_size = 9;
  if (this->total_data_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_data_size());
  }

  // int32 primary_shard_number = 10;
  if (this->primary_shard_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->primary_shard_number());
  }

  // int32 replica_shard_number = 11;
  if (this->replica_shard_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replica_shard_number());
  }

  // .AutoIndexRollingPolicy rolling_policy = 15;
  if (this->rolling_policy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rolling_policy());
  }

  // int32 index_id = 16;
  if (this->index_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IndexInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IndexInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IndexInfo)
    MergeFrom(*source);
  }
}

void IndexInfo::MergeFrom(const IndexInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IndexInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aliases_.MergeFrom(from.aliases_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.mapping().size() > 0) {

    mapping_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapping_);
  }
  if (from.setting().size() > 0) {

    setting_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setting_);
  }
  if (from.index_health().size() > 0) {

    index_health_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_health_);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.total_doc_number() != 0) {
    set_total_doc_number(from.total_doc_number());
  }
  if (from.total_data_size() != 0) {
    set_total_data_size(from.total_data_size());
  }
  if (from.primary_shard_number() != 0) {
    set_primary_shard_number(from.primary_shard_number());
  }
  if (from.replica_shard_number() != 0) {
    set_replica_shard_number(from.replica_shard_number());
  }
  if (from.rolling_policy() != 0) {
    set_rolling_policy(from.rolling_policy());
  }
  if (from.index_id() != 0) {
    set_index_id(from.index_id());
  }
}

void IndexInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IndexInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexInfo::CopyFrom(const IndexInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexInfo::IsInitialized() const {
  return true;
}

void IndexInfo::Swap(IndexInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexInfo::InternalSwap(IndexInfo* other) {
  using std::swap;
  aliases_.InternalSwap(&other->aliases_);
  name_.Swap(&other->name_);
  cluster_name_.Swap(&other->cluster_name_);
  project_name_.Swap(&other->project_name_);
  mapping_.Swap(&other->mapping_);
  setting_.Swap(&other->setting_);
  index_health_.Swap(&other->index_health_);
  project_id_.Swap(&other->project_id_);
  cluster_id_.Swap(&other->cluster_id_);
  swap(total_doc_number_, other->total_doc_number_);
  swap(total_data_size_, other->total_data_size_);
  swap(primary_shard_number_, other->primary_shard_number_);
  swap(replica_shard_number_, other->replica_shard_number_);
  swap(rolling_policy_, other->rolling_policy_);
  swap(index_id_, other->index_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexInfo::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexInfo

// string name = 1;
void IndexInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexInfo::name() const {
  // @@protoc_insertion_point(field_get:IndexInfo.name)
  return name_.GetNoArena();
}
void IndexInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IndexInfo.name)
}
#if LANG_CXX11
void IndexInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IndexInfo.name)
}
#endif
void IndexInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IndexInfo.name)
}
void IndexInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.name)
}
::std::string* IndexInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:IndexInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexInfo::release_name() {
  // @@protoc_insertion_point(field_release:IndexInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:IndexInfo.name)
}

// string cluster_name = 2;
void IndexInfo::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexInfo::cluster_name() const {
  // @@protoc_insertion_point(field_get:IndexInfo.cluster_name)
  return cluster_name_.GetNoArena();
}
void IndexInfo::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IndexInfo.cluster_name)
}
#if LANG_CXX11
void IndexInfo::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IndexInfo.cluster_name)
}
#endif
void IndexInfo::set_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IndexInfo.cluster_name)
}
void IndexInfo::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.cluster_name)
}
::std::string* IndexInfo::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:IndexInfo.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexInfo::release_cluster_name() {
  // @@protoc_insertion_point(field_release:IndexInfo.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexInfo::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:IndexInfo.cluster_name)
}

// string project_name = 3;
void IndexInfo::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexInfo::project_name() const {
  // @@protoc_insertion_point(field_get:IndexInfo.project_name)
  return project_name_.GetNoArena();
}
void IndexInfo::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IndexInfo.project_name)
}
#if LANG_CXX11
void IndexInfo::set_project_name(::std::string&& value) {
  
  project_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IndexInfo.project_name)
}
#endif
void IndexInfo::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IndexInfo.project_name)
}
void IndexInfo::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.project_name)
}
::std::string* IndexInfo::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:IndexInfo.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexInfo::release_project_name() {
  // @@protoc_insertion_point(field_release:IndexInfo.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexInfo::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:IndexInfo.project_name)
}

// string mapping = 5;
void IndexInfo::clear_mapping() {
  mapping_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexInfo::mapping() const {
  // @@protoc_insertion_point(field_get:IndexInfo.mapping)
  return mapping_.GetNoArena();
}
void IndexInfo::set_mapping(const ::std::string& value) {
  
  mapping_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IndexInfo.mapping)
}
#if LANG_CXX11
void IndexInfo::set_mapping(::std::string&& value) {
  
  mapping_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IndexInfo.mapping)
}
#endif
void IndexInfo::set_mapping(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mapping_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IndexInfo.mapping)
}
void IndexInfo::set_mapping(const char* value, size_t size) {
  
  mapping_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.mapping)
}
::std::string* IndexInfo::mutable_mapping() {
  
  // @@protoc_insertion_point(field_mutable:IndexInfo.mapping)
  return mapping_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexInfo::release_mapping() {
  // @@protoc_insertion_point(field_release:IndexInfo.mapping)
  
  return mapping_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexInfo::set_allocated_mapping(::std::string* mapping) {
  if (mapping != NULL) {
    
  } else {
    
  }
  mapping_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapping);
  // @@protoc_insertion_point(field_set_allocated:IndexInfo.mapping)
}

// string setting = 6;
void IndexInfo::clear_setting() {
  setting_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexInfo::setting() const {
  // @@protoc_insertion_point(field_get:IndexInfo.setting)
  return setting_.GetNoArena();
}
void IndexInfo::set_setting(const ::std::string& value) {
  
  setting_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IndexInfo.setting)
}
#if LANG_CXX11
void IndexInfo::set_setting(::std::string&& value) {
  
  setting_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IndexInfo.setting)
}
#endif
void IndexInfo::set_setting(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  setting_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IndexInfo.setting)
}
void IndexInfo::set_setting(const char* value, size_t size) {
  
  setting_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.setting)
}
::std::string* IndexInfo::mutable_setting() {
  
  // @@protoc_insertion_point(field_mutable:IndexInfo.setting)
  return setting_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexInfo::release_setting() {
  // @@protoc_insertion_point(field_release:IndexInfo.setting)
  
  return setting_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexInfo::set_allocated_setting(::std::string* setting) {
  if (setting != NULL) {
    
  } else {
    
  }
  setting_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), setting);
  // @@protoc_insertion_point(field_set_allocated:IndexInfo.setting)
}

// repeated string aliases = 7;
int IndexInfo::aliases_size() const {
  return aliases_.size();
}
void IndexInfo::clear_aliases() {
  aliases_.Clear();
}
const ::std::string& IndexInfo::aliases(int index) const {
  // @@protoc_insertion_point(field_get:IndexInfo.aliases)
  return aliases_.Get(index);
}
::std::string* IndexInfo::mutable_aliases(int index) {
  // @@protoc_insertion_point(field_mutable:IndexInfo.aliases)
  return aliases_.Mutable(index);
}
void IndexInfo::set_aliases(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:IndexInfo.aliases)
  aliases_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void IndexInfo::set_aliases(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:IndexInfo.aliases)
  aliases_.Mutable(index)->assign(std::move(value));
}
#endif
void IndexInfo::set_aliases(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  aliases_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IndexInfo.aliases)
}
void IndexInfo::set_aliases(int index, const char* value, size_t size) {
  aliases_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.aliases)
}
::std::string* IndexInfo::add_aliases() {
  // @@protoc_insertion_point(field_add_mutable:IndexInfo.aliases)
  return aliases_.Add();
}
void IndexInfo::add_aliases(const ::std::string& value) {
  aliases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:IndexInfo.aliases)
}
#if LANG_CXX11
void IndexInfo::add_aliases(::std::string&& value) {
  aliases_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:IndexInfo.aliases)
}
#endif
void IndexInfo::add_aliases(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  aliases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IndexInfo.aliases)
}
void IndexInfo::add_aliases(const char* value, size_t size) {
  aliases_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IndexInfo.aliases)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
IndexInfo::aliases() const {
  // @@protoc_insertion_point(field_list:IndexInfo.aliases)
  return aliases_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
IndexInfo::mutable_aliases() {
  // @@protoc_insertion_point(field_mutable_list:IndexInfo.aliases)
  return &aliases_;
}

// int64 total_doc_number = 8;
void IndexInfo::clear_total_doc_number() {
  total_doc_number_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 IndexInfo::total_doc_number() const {
  // @@protoc_insertion_point(field_get:IndexInfo.total_doc_number)
  return total_doc_number_;
}
void IndexInfo::set_total_doc_number(::google::protobuf::int64 value) {
  
  total_doc_number_ = value;
  // @@protoc_insertion_point(field_set:IndexInfo.total_doc_number)
}

// int64 total_data_size = 9;
void IndexInfo::clear_total_data_size() {
  total_data_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 IndexInfo::total_data_size() const {
  // @@protoc_insertion_point(field_get:IndexInfo.total_data_size)
  return total_data_size_;
}
void IndexInfo::set_total_data_size(::google::protobuf::int64 value) {
  
  total_data_size_ = value;
  // @@protoc_insertion_point(field_set:IndexInfo.total_data_size)
}

// int32 primary_shard_number = 10;
void IndexInfo::clear_primary_shard_number() {
  primary_shard_number_ = 0;
}
::google::protobuf::int32 IndexInfo::primary_shard_number() const {
  // @@protoc_insertion_point(field_get:IndexInfo.primary_shard_number)
  return primary_shard_number_;
}
void IndexInfo::set_primary_shard_number(::google::protobuf::int32 value) {
  
  primary_shard_number_ = value;
  // @@protoc_insertion_point(field_set:IndexInfo.primary_shard_number)
}

// int32 replica_shard_number = 11;
void IndexInfo::clear_replica_shard_number() {
  replica_shard_number_ = 0;
}
::google::protobuf::int32 IndexInfo::replica_shard_number() const {
  // @@protoc_insertion_point(field_get:IndexInfo.replica_shard_number)
  return replica_shard_number_;
}
void IndexInfo::set_replica_shard_number(::google::protobuf::int32 value) {
  
  replica_shard_number_ = value;
  // @@protoc_insertion_point(field_set:IndexInfo.replica_shard_number)
}

// string index_health = 12;
void IndexInfo::clear_index_health() {
  index_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexInfo::index_health() const {
  // @@protoc_insertion_point(field_get:IndexInfo.index_health)
  return index_health_.GetNoArena();
}
void IndexInfo::set_index_health(const ::std::string& value) {
  
  index_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IndexInfo.index_health)
}
#if LANG_CXX11
void IndexInfo::set_index_health(::std::string&& value) {
  
  index_health_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IndexInfo.index_health)
}
#endif
void IndexInfo::set_index_health(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  index_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IndexInfo.index_health)
}
void IndexInfo::set_index_health(const char* value, size_t size) {
  
  index_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.index_health)
}
::std::string* IndexInfo::mutable_index_health() {
  
  // @@protoc_insertion_point(field_mutable:IndexInfo.index_health)
  return index_health_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexInfo::release_index_health() {
  // @@protoc_insertion_point(field_release:IndexInfo.index_health)
  
  return index_health_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexInfo::set_allocated_index_health(::std::string* index_health) {
  if (index_health != NULL) {
    
  } else {
    
  }
  index_health_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index_health);
  // @@protoc_insertion_point(field_set_allocated:IndexInfo.index_health)
}

// string project_id = 13;
void IndexInfo::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexInfo::project_id() const {
  // @@protoc_insertion_point(field_get:IndexInfo.project_id)
  return project_id_.GetNoArena();
}
void IndexInfo::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IndexInfo.project_id)
}
#if LANG_CXX11
void IndexInfo::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IndexInfo.project_id)
}
#endif
void IndexInfo::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IndexInfo.project_id)
}
void IndexInfo::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.project_id)
}
::std::string* IndexInfo::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:IndexInfo.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexInfo::release_project_id() {
  // @@protoc_insertion_point(field_release:IndexInfo.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexInfo::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:IndexInfo.project_id)
}

// string cluster_id = 14;
void IndexInfo::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexInfo::cluster_id() const {
  // @@protoc_insertion_point(field_get:IndexInfo.cluster_id)
  return cluster_id_.GetNoArena();
}
void IndexInfo::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IndexInfo.cluster_id)
}
#if LANG_CXX11
void IndexInfo::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IndexInfo.cluster_id)
}
#endif
void IndexInfo::set_cluster_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IndexInfo.cluster_id)
}
void IndexInfo::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IndexInfo.cluster_id)
}
::std::string* IndexInfo::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:IndexInfo.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexInfo::release_cluster_id() {
  // @@protoc_insertion_point(field_release:IndexInfo.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexInfo::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:IndexInfo.cluster_id)
}

// .AutoIndexRollingPolicy rolling_policy = 15;
void IndexInfo::clear_rolling_policy() {
  rolling_policy_ = 0;
}
::AutoIndexRollingPolicy IndexInfo::rolling_policy() const {
  // @@protoc_insertion_point(field_get:IndexInfo.rolling_policy)
  return static_cast< ::AutoIndexRollingPolicy >(rolling_policy_);
}
void IndexInfo::set_rolling_policy(::AutoIndexRollingPolicy value) {
  
  rolling_policy_ = value;
  // @@protoc_insertion_point(field_set:IndexInfo.rolling_policy)
}

// int32 index_id = 16;
void IndexInfo::clear_index_id() {
  index_id_ = 0;
}
::google::protobuf::int32 IndexInfo::index_id() const {
  // @@protoc_insertion_point(field_get:IndexInfo.index_id)
  return index_id_;
}
void IndexInfo::set_index_id(::google::protobuf::int32 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:IndexInfo.index_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateIndexRequest::kIndexIdFieldNumber;
const int UpdateIndexRequest::kMappingFieldNumber;
const int UpdateIndexRequest::kSettingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateIndexRequest::UpdateIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateIndexRequest)
}
UpdateIndexRequest::UpdateIndexRequest(const UpdateIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mapping()) {
    mapping_ = new ::google::protobuf::StringValue(*from.mapping_);
  } else {
    mapping_ = NULL;
  }
  if (from.has_setting()) {
    setting_ = new ::google::protobuf::StringValue(*from.setting_);
  } else {
    setting_ = NULL;
  }
  index_id_ = from.index_id_;
  // @@protoc_insertion_point(copy_constructor:UpdateIndexRequest)
}

void UpdateIndexRequest::SharedCtor() {
  ::memset(&mapping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_id_) -
      reinterpret_cast<char*>(&mapping_)) + sizeof(index_id_));
  _cached_size_ = 0;
}

UpdateIndexRequest::~UpdateIndexRequest() {
  // @@protoc_insertion_point(destructor:UpdateIndexRequest)
  SharedDtor();
}

void UpdateIndexRequest::SharedDtor() {
  if (this != internal_default_instance()) delete mapping_;
  if (this != internal_default_instance()) delete setting_;
}

void UpdateIndexRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateIndexRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateIndexRequest& UpdateIndexRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateIndexRequest* UpdateIndexRequest::New(::google::protobuf::Arena* arena) const {
  UpdateIndexRequest* n = new UpdateIndexRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mapping_ != NULL) {
    delete mapping_;
  }
  mapping_ = NULL;
  if (GetArenaNoVirtual() == NULL && setting_ != NULL) {
    delete setting_;
  }
  setting_ = NULL;
  index_id_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateIndexRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue mapping = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mapping()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue setting = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateIndexRequest)
  return false;
#undef DO_
}

void UpdateIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index_id = 1;
  if (this->index_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index_id(), output);
  }

  // .google.protobuf.StringValue mapping = 4;
  if (this->has_mapping()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->mapping_, output);
  }

  // .google.protobuf.StringValue setting = 5;
  if (this->has_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->setting_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateIndexRequest)
}

::google::protobuf::uint8* UpdateIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index_id = 1;
  if (this->index_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index_id(), target);
  }

  // .google.protobuf.StringValue mapping = 4;
  if (this->has_mapping()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->mapping_, deterministic, target);
  }

  // .google.protobuf.StringValue setting = 5;
  if (this->has_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->setting_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateIndexRequest)
  return target;
}

size_t UpdateIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue mapping = 4;
  if (this->has_mapping()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mapping_);
  }

  // .google.protobuf.StringValue setting = 5;
  if (this->has_setting()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->setting_);
  }

  // int32 index_id = 1;
  if (this->index_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateIndexRequest)
    MergeFrom(*source);
  }
}

void UpdateIndexRequest::MergeFrom(const UpdateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mapping()) {
    mutable_mapping()->::google::protobuf::StringValue::MergeFrom(from.mapping());
  }
  if (from.has_setting()) {
    mutable_setting()->::google::protobuf::StringValue::MergeFrom(from.setting());
  }
  if (from.index_id() != 0) {
    set_index_id(from.index_id());
  }
}

void UpdateIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIndexRequest::CopyFrom(const UpdateIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIndexRequest::IsInitialized() const {
  return true;
}

void UpdateIndexRequest::Swap(UpdateIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateIndexRequest::InternalSwap(UpdateIndexRequest* other) {
  using std::swap;
  swap(mapping_, other->mapping_);
  swap(setting_, other->setting_);
  swap(index_id_, other->index_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateIndexRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateIndexRequest

// int32 index_id = 1;
void UpdateIndexRequest::clear_index_id() {
  index_id_ = 0;
}
::google::protobuf::int32 UpdateIndexRequest::index_id() const {
  // @@protoc_insertion_point(field_get:UpdateIndexRequest.index_id)
  return index_id_;
}
void UpdateIndexRequest::set_index_id(::google::protobuf::int32 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateIndexRequest.index_id)
}

// .google.protobuf.StringValue mapping = 4;
bool UpdateIndexRequest::has_mapping() const {
  return this != internal_default_instance() && mapping_ != NULL;
}
void UpdateIndexRequest::clear_mapping() {
  if (GetArenaNoVirtual() == NULL && mapping_ != NULL) delete mapping_;
  mapping_ = NULL;
}
const ::google::protobuf::StringValue& UpdateIndexRequest::mapping() const {
  const ::google::protobuf::StringValue* p = mapping_;
  // @@protoc_insertion_point(field_get:UpdateIndexRequest.mapping)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
::google::protobuf::StringValue* UpdateIndexRequest::mutable_mapping() {
  
  if (mapping_ == NULL) {
    mapping_ = new ::google::protobuf::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:UpdateIndexRequest.mapping)
  return mapping_;
}
::google::protobuf::StringValue* UpdateIndexRequest::release_mapping() {
  // @@protoc_insertion_point(field_release:UpdateIndexRequest.mapping)
  
  ::google::protobuf::StringValue* temp = mapping_;
  mapping_ = NULL;
  return temp;
}
void UpdateIndexRequest::set_allocated_mapping(::google::protobuf::StringValue* mapping) {
  delete mapping_;
  if (mapping != NULL && mapping->GetArena() != NULL) {
    ::google::protobuf::StringValue* new_mapping = new ::google::protobuf::StringValue;
    new_mapping->CopyFrom(*mapping);
    mapping = new_mapping;
  }
  mapping_ = mapping;
  if (mapping) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:UpdateIndexRequest.mapping)
}

// .google.protobuf.StringValue setting = 5;
bool UpdateIndexRequest::has_setting() const {
  return this != internal_default_instance() && setting_ != NULL;
}
void UpdateIndexRequest::clear_setting() {
  if (GetArenaNoVirtual() == NULL && setting_ != NULL) delete setting_;
  setting_ = NULL;
}
const ::google::protobuf::StringValue& UpdateIndexRequest::setting() const {
  const ::google::protobuf::StringValue* p = setting_;
  // @@protoc_insertion_point(field_get:UpdateIndexRequest.setting)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
::google::protobuf::StringValue* UpdateIndexRequest::mutable_setting() {
  
  if (setting_ == NULL) {
    setting_ = new ::google::protobuf::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:UpdateIndexRequest.setting)
  return setting_;
}
::google::protobuf::StringValue* UpdateIndexRequest::release_setting() {
  // @@protoc_insertion_point(field_release:UpdateIndexRequest.setting)
  
  ::google::protobuf::StringValue* temp = setting_;
  setting_ = NULL;
  return temp;
}
void UpdateIndexRequest::set_allocated_setting(::google::protobuf::StringValue* setting) {
  delete setting_;
  if (setting != NULL && setting->GetArena() != NULL) {
    ::google::protobuf::StringValue* new_setting = new ::google::protobuf::StringValue;
    new_setting->CopyFrom(*setting);
    setting = new_setting;
  }
  setting_ = setting;
  if (setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:UpdateIndexRequest.setting)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateIndexReply::kCodeFieldNumber;
const int UpdateIndexReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateIndexReply::UpdateIndexReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateIndexReply)
}
UpdateIndexReply::UpdateIndexReply(const UpdateIndexReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:UpdateIndexReply)
}

void UpdateIndexReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

UpdateIndexReply::~UpdateIndexReply() {
  // @@protoc_insertion_point(destructor:UpdateIndexReply)
  SharedDtor();
}

void UpdateIndexReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateIndexReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateIndexReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateIndexReply& UpdateIndexReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateIndexReply* UpdateIndexReply::New(::google::protobuf::Arena* arena) const {
  UpdateIndexReply* n = new UpdateIndexReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateIndexReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateIndexReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateIndexReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateIndexReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateIndexReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateIndexReply)
  return false;
#undef DO_
}

void UpdateIndexReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateIndexReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateIndexReply)
}

::google::protobuf::uint8* UpdateIndexReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateIndexReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateIndexReply)
  return target;
}

size_t UpdateIndexReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateIndexReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateIndexReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateIndexReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateIndexReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateIndexReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateIndexReply)
    MergeFrom(*source);
  }
}

void UpdateIndexReply::MergeFrom(const UpdateIndexReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void UpdateIndexReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateIndexReply::CopyFrom(const UpdateIndexReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateIndexReply::IsInitialized() const {
  return true;
}

void UpdateIndexReply::Swap(UpdateIndexReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateIndexReply::InternalSwap(UpdateIndexReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateIndexReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateIndexReply

// int32 code = 1;
void UpdateIndexReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 UpdateIndexReply::code() const {
  // @@protoc_insertion_point(field_get:UpdateIndexReply.code)
  return code_;
}
void UpdateIndexReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:UpdateIndexReply.code)
}

// string message = 2;
void UpdateIndexReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateIndexReply::message() const {
  // @@protoc_insertion_point(field_get:UpdateIndexReply.message)
  return message_.GetNoArena();
}
void UpdateIndexReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateIndexReply.message)
}
#if LANG_CXX11
void UpdateIndexReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateIndexReply.message)
}
#endif
void UpdateIndexReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateIndexReply.message)
}
void UpdateIndexReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateIndexReply.message)
}
::std::string* UpdateIndexReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:UpdateIndexReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateIndexReply::release_message() {
  // @@protoc_insertion_point(field_release:UpdateIndexReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateIndexReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:UpdateIndexReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexRequest::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexRequest::DeleteIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteIndexRequest)
}
DeleteIndexRequest::DeleteIndexRequest(const DeleteIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_id_ = from.index_id_;
  // @@protoc_insertion_point(copy_constructor:DeleteIndexRequest)
}

void DeleteIndexRequest::SharedCtor() {
  index_id_ = 0;
  _cached_size_ = 0;
}

DeleteIndexRequest::~DeleteIndexRequest() {
  // @@protoc_insertion_point(destructor:DeleteIndexRequest)
  SharedDtor();
}

void DeleteIndexRequest::SharedDtor() {
}

void DeleteIndexRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteIndexRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexRequest& DeleteIndexRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteIndexRequest* DeleteIndexRequest::New(::google::protobuf::Arena* arena) const {
  DeleteIndexRequest* n = new DeleteIndexRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_id_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteIndexRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteIndexRequest)
  return false;
#undef DO_
}

void DeleteIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index_id = 1;
  if (this->index_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteIndexRequest)
}

::google::protobuf::uint8* DeleteIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeleteIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index_id = 1;
  if (this->index_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteIndexRequest)
  return target;
}

size_t DeleteIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 index_id = 1;
  if (this->index_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteIndexRequest)
    MergeFrom(*source);
  }
}

void DeleteIndexRequest::MergeFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_id() != 0) {
    set_index_id(from.index_id());
  }
}

void DeleteIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexRequest::CopyFrom(const DeleteIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexRequest::IsInitialized() const {
  return true;
}

void DeleteIndexRequest::Swap(DeleteIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexRequest::InternalSwap(DeleteIndexRequest* other) {
  using std::swap;
  swap(index_id_, other->index_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteIndexRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteIndexRequest

// int32 index_id = 1;
void DeleteIndexRequest::clear_index_id() {
  index_id_ = 0;
}
::google::protobuf::int32 DeleteIndexRequest::index_id() const {
  // @@protoc_insertion_point(field_get:DeleteIndexRequest.index_id)
  return index_id_;
}
void DeleteIndexRequest::set_index_id(::google::protobuf::int32 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:DeleteIndexRequest.index_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteIndexReply::kCodeFieldNumber;
const int DeleteIndexReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteIndexReply::DeleteIndexReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteIndexReply)
}
DeleteIndexReply::DeleteIndexReply(const DeleteIndexReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:DeleteIndexReply)
}

void DeleteIndexReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

DeleteIndexReply::~DeleteIndexReply() {
  // @@protoc_insertion_point(destructor:DeleteIndexReply)
  SharedDtor();
}

void DeleteIndexReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteIndexReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteIndexReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteIndexReply& DeleteIndexReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteIndexReply* DeleteIndexReply::New(::google::protobuf::Arena* arena) const {
  DeleteIndexReply* n = new DeleteIndexReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteIndexReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteIndexReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteIndexReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeleteIndexReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteIndexReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteIndexReply)
  return false;
#undef DO_
}

void DeleteIndexReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteIndexReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteIndexReply)
}

::google::protobuf::uint8* DeleteIndexReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeleteIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeleteIndexReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteIndexReply)
  return target;
}

size_t DeleteIndexReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteIndexReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteIndexReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteIndexReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteIndexReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteIndexReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteIndexReply)
    MergeFrom(*source);
  }
}

void DeleteIndexReply::MergeFrom(const DeleteIndexReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void DeleteIndexReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteIndexReply::CopyFrom(const DeleteIndexReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteIndexReply::IsInitialized() const {
  return true;
}

void DeleteIndexReply::Swap(DeleteIndexReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteIndexReply::InternalSwap(DeleteIndexReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteIndexReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteIndexReply

// int32 code = 1;
void DeleteIndexReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 DeleteIndexReply::code() const {
  // @@protoc_insertion_point(field_get:DeleteIndexReply.code)
  return code_;
}
void DeleteIndexReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:DeleteIndexReply.code)
}

// string message = 2;
void DeleteIndexReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteIndexReply::message() const {
  // @@protoc_insertion_point(field_get:DeleteIndexReply.message)
  return message_.GetNoArena();
}
void DeleteIndexReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteIndexReply.message)
}
#if LANG_CXX11
void DeleteIndexReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeleteIndexReply.message)
}
#endif
void DeleteIndexReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteIndexReply.message)
}
void DeleteIndexReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteIndexReply.message)
}
::std::string* DeleteIndexReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:DeleteIndexReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteIndexReply::release_message() {
  // @@protoc_insertion_point(field_release:DeleteIndexReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteIndexReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:DeleteIndexReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListIndexRequest::kClusterIdFieldNumber;
const int ListIndexRequest::kProjectIdFieldNumber;
const int ListIndexRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListIndexRequest::ListIndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListIndexRequest)
}
ListIndexRequest::ListIndexRequest(const ListIndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&cluster_id_, &from.cluster_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&project_id_) -
    reinterpret_cast<char*>(&cluster_id_)) + sizeof(project_id_));
  // @@protoc_insertion_point(copy_constructor:ListIndexRequest)
}

void ListIndexRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&project_id_) -
      reinterpret_cast<char*>(&cluster_id_)) + sizeof(project_id_));
  _cached_size_ = 0;
}

ListIndexRequest::~ListIndexRequest() {
  // @@protoc_insertion_point(destructor:ListIndexRequest)
  SharedDtor();
}

void ListIndexRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListIndexRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListIndexRequest::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListIndexRequest& ListIndexRequest::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListIndexRequest* ListIndexRequest::New(::google::protobuf::Arena* arena) const {
  ListIndexRequest* n = new ListIndexRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ListIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&project_id_) -
      reinterpret_cast<char*>(&cluster_id_)) + sizeof(project_id_));
  _internal_metadata_.Clear();
}

bool ListIndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListIndexRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 cluster_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 project_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &project_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListIndexRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListIndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListIndexRequest)
  return false;
#undef DO_
}

void ListIndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cluster_id = 1;
  if (this->cluster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cluster_id(), output);
  }

  // int32 project_id = 2;
  if (this->project_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->project_id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListIndexRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListIndexRequest)
}

::google::protobuf::uint8* ListIndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListIndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cluster_id = 1;
  if (this->cluster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cluster_id(), target);
  }

  // int32 project_id = 2;
  if (this->project_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->project_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListIndexRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListIndexRequest)
  return target;
}

size_t ListIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListIndexRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 cluster_id = 1;
  if (this->cluster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cluster_id());
  }

  // int32 project_id = 2;
  if (this->project_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->project_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListIndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListIndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListIndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListIndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListIndexRequest)
    MergeFrom(*source);
  }
}

void ListIndexRequest::MergeFrom(const ListIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cluster_id() != 0) {
    set_cluster_id(from.cluster_id());
  }
  if (from.project_id() != 0) {
    set_project_id(from.project_id());
  }
}

void ListIndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListIndexRequest::CopyFrom(const ListIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListIndexRequest::IsInitialized() const {
  return true;
}

void ListIndexRequest::Swap(ListIndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListIndexRequest::InternalSwap(ListIndexRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(cluster_id_, other->cluster_id_);
  swap(project_id_, other->project_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListIndexRequest::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListIndexRequest

// int32 cluster_id = 1;
void ListIndexRequest::clear_cluster_id() {
  cluster_id_ = 0;
}
::google::protobuf::int32 ListIndexRequest::cluster_id() const {
  // @@protoc_insertion_point(field_get:ListIndexRequest.cluster_id)
  return cluster_id_;
}
void ListIndexRequest::set_cluster_id(::google::protobuf::int32 value) {
  
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:ListIndexRequest.cluster_id)
}

// int32 project_id = 2;
void ListIndexRequest::clear_project_id() {
  project_id_ = 0;
}
::google::protobuf::int32 ListIndexRequest::project_id() const {
  // @@protoc_insertion_point(field_get:ListIndexRequest.project_id)
  return project_id_;
}
void ListIndexRequest::set_project_id(::google::protobuf::int32 value) {
  
  project_id_ = value;
  // @@protoc_insertion_point(field_set:ListIndexRequest.project_id)
}

// string name = 3;
void ListIndexRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListIndexRequest::name() const {
  // @@protoc_insertion_point(field_get:ListIndexRequest.name)
  return name_.GetNoArena();
}
void ListIndexRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListIndexRequest.name)
}
#if LANG_CXX11
void ListIndexRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListIndexRequest.name)
}
#endif
void ListIndexRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListIndexRequest.name)
}
void ListIndexRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListIndexRequest.name)
}
::std::string* ListIndexRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ListIndexRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListIndexRequest::release_name() {
  // @@protoc_insertion_point(field_release:ListIndexRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListIndexRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ListIndexRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListIndexReply::kCodeFieldNumber;
const int ListIndexReply::kMessageFieldNumber;
const int ListIndexReply::kIndicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListIndexReply::ListIndexReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fmeta_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListIndexReply)
}
ListIndexReply::ListIndexReply(const ListIndexReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      indices_(from.indices_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ListIndexReply)
}

void ListIndexReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ListIndexReply::~ListIndexReply() {
  // @@protoc_insertion_point(destructor:ListIndexReply)
  SharedDtor();
}

void ListIndexReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListIndexReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListIndexReply::descriptor() {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListIndexReply& ListIndexReply::default_instance() {
  protobuf_admin_2fmeta_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListIndexReply* ListIndexReply::New(::google::protobuf::Arena* arena) const {
  ListIndexReply* n = new ListIndexReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListIndexReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ListIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indices_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool ListIndexReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListIndexReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ListIndexReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IndexInfo indices = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_indices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListIndexReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListIndexReply)
  return false;
#undef DO_
}

void ListIndexReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListIndexReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // repeated .IndexInfo indices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->indices(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListIndexReply)
}

::google::protobuf::uint8* ListIndexReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListIndexReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ListIndexReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // repeated .IndexInfo indices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->indices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListIndexReply)
  return target;
}

size_t ListIndexReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListIndexReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .IndexInfo indices = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->indices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->indices(static_cast<int>(i)));
    }
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListIndexReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListIndexReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListIndexReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListIndexReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListIndexReply)
    MergeFrom(*source);
  }
}

void ListIndexReply::MergeFrom(const ListIndexReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListIndexReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indices_.MergeFrom(from.indices_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ListIndexReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListIndexReply::CopyFrom(const ListIndexReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListIndexReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListIndexReply::IsInitialized() const {
  return true;
}

void ListIndexReply::Swap(ListIndexReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListIndexReply::InternalSwap(ListIndexReply* other) {
  using std::swap;
  indices_.InternalSwap(&other->indices_);
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListIndexReply::GetMetadata() const {
  protobuf_admin_2fmeta_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fmeta_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListIndexReply

// int32 code = 1;
void ListIndexReply::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ListIndexReply::code() const {
  // @@protoc_insertion_point(field_get:ListIndexReply.code)
  return code_;
}
void ListIndexReply::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ListIndexReply.code)
}

// string message = 2;
void ListIndexReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListIndexReply::message() const {
  // @@protoc_insertion_point(field_get:ListIndexReply.message)
  return message_.GetNoArena();
}
void ListIndexReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListIndexReply.message)
}
#if LANG_CXX11
void ListIndexReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListIndexReply.message)
}
#endif
void ListIndexReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListIndexReply.message)
}
void ListIndexReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListIndexReply.message)
}
::std::string* ListIndexReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ListIndexReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListIndexReply::release_message() {
  // @@protoc_insertion_point(field_release:ListIndexReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListIndexReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ListIndexReply.message)
}

// repeated .IndexInfo indices = 3;
int ListIndexReply::indices_size() const {
  return indices_.size();
}
void ListIndexReply::clear_indices() {
  indices_.Clear();
}
const ::IndexInfo& ListIndexReply::indices(int index) const {
  // @@protoc_insertion_point(field_get:ListIndexReply.indices)
  return indices_.Get(index);
}
::IndexInfo* ListIndexReply::mutable_indices(int index) {
  // @@protoc_insertion_point(field_mutable:ListIndexReply.indices)
  return indices_.Mutable(index);
}
::IndexInfo* ListIndexReply::add_indices() {
  // @@protoc_insertion_point(field_add:ListIndexReply.indices)
  return indices_.Add();
}
::google::protobuf::RepeatedPtrField< ::IndexInfo >*
ListIndexReply::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:ListIndexReply.indices)
  return &indices_;
}
const ::google::protobuf::RepeatedPtrField< ::IndexInfo >&
ListIndexReply::indices() const {
  // @@protoc_insertion_point(field_list:ListIndexReply.indices)
  return indices_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
