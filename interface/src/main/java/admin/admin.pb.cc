// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin/admin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "admin/admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PingRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PingRequest>
     _instance;
} _PingRequest_default_instance_;
class PingReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PingReply>
     _instance;
} _PingReply_default_instance_;
class SetReadOnlyRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetReadOnlyRequest>
     _instance;
} _SetReadOnlyRequest_default_instance_;
class ReadOnlyResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReadOnlyResponse>
     _instance;
} _ReadOnlyResponse_default_instance_;
class SetInServiceRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetInServiceRequest>
     _instance;
} _SetInServiceRequest_default_instance_;
class InServiceResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InServiceResponse>
     _instance;
} _InServiceResponse_default_instance_;
class SetSuspendRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetSuspendRequest>
     _instance;
} _SetSuspendRequest_default_instance_;
class SuspendResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SuspendResponse>
     _instance;
} _SuspendResponse_default_instance_;
class GetServiceModeRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetServiceModeRequest>
     _instance;
} _GetServiceModeRequest_default_instance_;
class ServiceModeResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServiceModeResponse>
     _instance;
} _ServiceModeResponse_default_instance_;
class SuspendWorkThreadRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SuspendWorkThreadRequest>
     _instance;
} _SuspendWorkThreadRequest_default_instance_;
class SuspendWorkThreadResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SuspendWorkThreadResponse>
     _instance;
} _SuspendWorkThreadResponse_default_instance_;
class ResumeWorkThreadRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResumeWorkThreadRequest>
     _instance;
} _ResumeWorkThreadRequest_default_instance_;
class ResumeWorkThreadResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResumeWorkThreadResponse>
     _instance;
} _ResumeWorkThreadResponse_default_instance_;
class GetWorkThreadStatusRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetWorkThreadStatusRequest>
     _instance;
} _GetWorkThreadStatusRequest_default_instance_;
class GetWorkThreadStatusResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetWorkThreadStatusResponse>
     _instance;
} _GetWorkThreadStatusResponse_default_instance_;

namespace protobuf_admin_2fadmin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRequest, ping_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReply, pong_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetReadOnlyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOnlyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOnlyResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOnlyResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetInServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InServiceResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InServiceResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSuspendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuspendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuspendResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuspendResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetServiceModeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceModeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceModeResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceModeResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceModeResponse, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuspendWorkThreadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuspendWorkThreadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuspendWorkThreadResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuspendWorkThreadResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResumeWorkThreadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResumeWorkThreadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResumeWorkThreadResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResumeWorkThreadResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorkThreadStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorkThreadStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorkThreadStatusResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorkThreadStatusResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWorkThreadStatusResponse, running_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PingRequest)},
  { 6, -1, sizeof(PingReply)},
  { 12, -1, sizeof(SetReadOnlyRequest)},
  { 17, -1, sizeof(ReadOnlyResponse)},
  { 24, -1, sizeof(SetInServiceRequest)},
  { 29, -1, sizeof(InServiceResponse)},
  { 36, -1, sizeof(SetSuspendRequest)},
  { 41, -1, sizeof(SuspendResponse)},
  { 48, -1, sizeof(GetServiceModeRequest)},
  { 53, -1, sizeof(ServiceModeResponse)},
  { 61, -1, sizeof(SuspendWorkThreadRequest)},
  { 66, -1, sizeof(SuspendWorkThreadResponse)},
  { 73, -1, sizeof(ResumeWorkThreadRequest)},
  { 78, -1, sizeof(ResumeWorkThreadResponse)},
  { 85, -1, sizeof(GetWorkThreadStatusRequest)},
  { 90, -1, sizeof(GetWorkThreadStatusResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PingReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetReadOnlyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadOnlyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetInServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InServiceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetSuspendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SuspendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetServiceModeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServiceModeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SuspendWorkThreadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SuspendWorkThreadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResumeWorkThreadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResumeWorkThreadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetWorkThreadStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetWorkThreadStatusResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "admin/admin.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PingRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PingRequest_default_instance_);_PingReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PingReply_default_instance_);_SetReadOnlyRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetReadOnlyRequest_default_instance_);_ReadOnlyResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReadOnlyResponse_default_instance_);_SetInServiceRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetInServiceRequest_default_instance_);_InServiceResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InServiceResponse_default_instance_);_SetSuspendRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetSuspendRequest_default_instance_);_SuspendResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SuspendResponse_default_instance_);_GetServiceModeRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetServiceModeRequest_default_instance_);_ServiceModeResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServiceModeResponse_default_instance_);_SuspendWorkThreadRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SuspendWorkThreadRequest_default_instance_);_SuspendWorkThreadResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SuspendWorkThreadResponse_default_instance_);_ResumeWorkThreadRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResumeWorkThreadRequest_default_instance_);_ResumeWorkThreadResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResumeWorkThreadResponse_default_instance_);_GetWorkThreadStatusRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetWorkThreadStatusRequest_default_instance_);_GetWorkThreadStatusResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetWorkThreadStatusResponse_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021admin/admin.proto\"\033\n\013PingRequest\022\014\n\004pi"
      "ng\030\001 \001(\t\"\031\n\tPingReply\022\014\n\004pong\030\001 \001(\t\"\024\n\022S"
      "etReadOnlyRequest\"1\n\020ReadOnlyResponse\022\014\n"
      "\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"\025\n\023SetInSer"
      "viceRequest\"2\n\021InServiceResponse\022\014\n\004code"
      "\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"\023\n\021SetSuspendReq"
      "uest\"0\n\017SuspendResponse\022\014\n\004code\030\001 \001(\005\022\017\n"
      "\007message\030\002 \001(\t\"\027\n\025GetServiceModeRequest\""
      "B\n\023ServiceModeResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007"
      "message\030\002 \001(\t\022\014\n\004mode\030\003 \001(\t\"\032\n\030SuspendWo"
      "rkThreadRequest\":\n\031SuspendWorkThreadResp"
      "onse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"\031\n\027R"
      "esumeWorkThreadRequest\"9\n\030ResumeWorkThre"
      "adResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001("
      "\t\"\034\n\032GetWorkThreadStatusRequest\"M\n\033GetWo"
      "rkThreadStatusResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007"
      "message\030\002 \001(\t\022\017\n\007running\030\003 \001(\0102\255\004\n\014Admin"
      "Service\022\"\n\004Ping\022\014.PingRequest\032\n.PingRepl"
      "y\"\000\022>\n\022SetServiceReadOnly\022\023.SetReadOnlyR"
      "equest\032\021.ReadOnlyResponse\"\000\022A\n\023SetServic"
      "eInService\022\024.SetInServiceRequest\032\022.InSer"
      "viceResponse\"\000\022;\n\021SetServiceSuspend\022\022.Se"
      "tSuspendRequest\032\020.SuspendResponse\"\000\022@\n\016G"
      "etServiceMode\022\026.GetServiceModeRequest\032\024."
      "ServiceModeResponse\"\000\022P\n\025SuspendBackendT"
      "hreads\022\031.SuspendWorkThreadRequest\032\032.Susp"
      "endWorkThreadResponse\"\000\022M\n\024ResumeBackend"
      "Threads\022\030.ResumeWorkThreadRequest\032\031.Resu"
      "meWorkThreadResponse\"\000\022V\n\027GetBackendThre"
      "adsStatus\022\033.GetWorkThreadStatusRequest\032\034"
      ".GetWorkThreadStatusResponse\"\000BE\n\037com.ra"
      "ny.service.platform.adminB SearchMiddleP"
      "latformAdminServiceP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1309);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "admin/admin.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_admin_2fadmin_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingRequest::kPingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRequest::PingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ping_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ping().size() > 0) {
    ping_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_);
  }
  // @@protoc_insertion_point(copy_constructor:PingRequest)
}

void PingRequest::SharedCtor() {
  ping_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:PingRequest)
  SharedDtor();
}

void PingRequest::SharedDtor() {
  ping_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingRequest::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingRequest& PingRequest::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

PingRequest* PingRequest::New(::google::protobuf::Arena* arena) const {
  PingRequest* n = new PingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ping_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ping = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ping()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ping().data(), static_cast<int>(this->ping().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PingRequest.ping"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PingRequest)
  return false;
#undef DO_
}

void PingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ping = 1;
  if (this->ping().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ping().data(), static_cast<int>(this->ping().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PingRequest.ping");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ping(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PingRequest)
}

::google::protobuf::uint8* PingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ping = 1;
  if (this->ping().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ping().data(), static_cast<int>(this->ping().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PingRequest.ping");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ping(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PingRequest)
  return target;
}

size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ping = 1;
  if (this->ping().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ping());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ping().size() > 0) {

    ping_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_);
  }
}

void PingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {
  return true;
}

void PingRequest::Swap(PingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRequest::InternalSwap(PingRequest* other) {
  using std::swap;
  ping_.Swap(&other->ping_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingRequest

// string ping = 1;
void PingRequest::clear_ping() {
  ping_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PingRequest::ping() const {
  // @@protoc_insertion_point(field_get:PingRequest.ping)
  return ping_.GetNoArena();
}
void PingRequest::set_ping(const ::std::string& value) {
  
  ping_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PingRequest.ping)
}
#if LANG_CXX11
void PingRequest::set_ping(::std::string&& value) {
  
  ping_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PingRequest.ping)
}
#endif
void PingRequest::set_ping(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ping_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PingRequest.ping)
}
void PingRequest::set_ping(const char* value, size_t size) {
  
  ping_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PingRequest.ping)
}
::std::string* PingRequest::mutable_ping() {
  
  // @@protoc_insertion_point(field_mutable:PingRequest.ping)
  return ping_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PingRequest::release_ping() {
  // @@protoc_insertion_point(field_release:PingRequest.ping)
  
  return ping_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PingRequest::set_allocated_ping(::std::string* ping) {
  if (ping != NULL) {
    
  } else {
    
  }
  ping_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ping);
  // @@protoc_insertion_point(field_set_allocated:PingRequest.ping)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingReply::kPongFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingReply::PingReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PingReply)
}
PingReply::PingReply(const PingReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pong_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pong().size() > 0) {
    pong_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pong_);
  }
  // @@protoc_insertion_point(copy_constructor:PingReply)
}

void PingReply::SharedCtor() {
  pong_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PingReply::~PingReply() {
  // @@protoc_insertion_point(destructor:PingReply)
  SharedDtor();
}

void PingReply::SharedDtor() {
  pong_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PingReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingReply::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingReply& PingReply::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

PingReply* PingReply::New(::google::protobuf::Arena* arena) const {
  PingReply* n = new PingReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingReply::Clear() {
// @@protoc_insertion_point(message_clear_start:PingReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pong_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PingReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PingReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pong = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pong()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pong().data(), static_cast<int>(this->pong().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PingReply.pong"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PingReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PingReply)
  return false;
#undef DO_
}

void PingReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PingReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pong = 1;
  if (this->pong().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pong().data(), static_cast<int>(this->pong().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PingReply.pong");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pong(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PingReply)
}

::google::protobuf::uint8* PingReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PingReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pong = 1;
  if (this->pong().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pong().data(), static_cast<int>(this->pong().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PingReply.pong");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pong(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PingReply)
  return target;
}

size_t PingReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PingReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pong = 1;
  if (this->pong().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pong());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PingReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PingReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PingReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PingReply)
    MergeFrom(*source);
  }
}

void PingReply::MergeFrom(const PingReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PingReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pong().size() > 0) {

    pong_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pong_);
  }
}

void PingReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingReply::CopyFrom(const PingReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingReply::IsInitialized() const {
  return true;
}

void PingReply::Swap(PingReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingReply::InternalSwap(PingReply* other) {
  using std::swap;
  pong_.Swap(&other->pong_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingReply::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingReply

// string pong = 1;
void PingReply::clear_pong() {
  pong_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PingReply::pong() const {
  // @@protoc_insertion_point(field_get:PingReply.pong)
  return pong_.GetNoArena();
}
void PingReply::set_pong(const ::std::string& value) {
  
  pong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PingReply.pong)
}
#if LANG_CXX11
void PingReply::set_pong(::std::string&& value) {
  
  pong_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PingReply.pong)
}
#endif
void PingReply::set_pong(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PingReply.pong)
}
void PingReply::set_pong(const char* value, size_t size) {
  
  pong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PingReply.pong)
}
::std::string* PingReply::mutable_pong() {
  
  // @@protoc_insertion_point(field_mutable:PingReply.pong)
  return pong_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PingReply::release_pong() {
  // @@protoc_insertion_point(field_release:PingReply.pong)
  
  return pong_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PingReply::set_allocated_pong(::std::string* pong) {
  if (pong != NULL) {
    
  } else {
    
  }
  pong_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pong);
  // @@protoc_insertion_point(field_set_allocated:PingReply.pong)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetReadOnlyRequest::SetReadOnlyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetReadOnlyRequest)
}
SetReadOnlyRequest::SetReadOnlyRequest(const SetReadOnlyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SetReadOnlyRequest)
}

void SetReadOnlyRequest::SharedCtor() {
  _cached_size_ = 0;
}

SetReadOnlyRequest::~SetReadOnlyRequest() {
  // @@protoc_insertion_point(destructor:SetReadOnlyRequest)
  SharedDtor();
}

void SetReadOnlyRequest::SharedDtor() {
}

void SetReadOnlyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetReadOnlyRequest::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetReadOnlyRequest& SetReadOnlyRequest::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetReadOnlyRequest* SetReadOnlyRequest::New(::google::protobuf::Arena* arena) const {
  SetReadOnlyRequest* n = new SetReadOnlyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetReadOnlyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetReadOnlyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetReadOnlyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetReadOnlyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SetReadOnlyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetReadOnlyRequest)
  return false;
#undef DO_
}

void SetReadOnlyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetReadOnlyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetReadOnlyRequest)
}

::google::protobuf::uint8* SetReadOnlyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetReadOnlyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetReadOnlyRequest)
  return target;
}

size_t SetReadOnlyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetReadOnlyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetReadOnlyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetReadOnlyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetReadOnlyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetReadOnlyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetReadOnlyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetReadOnlyRequest)
    MergeFrom(*source);
  }
}

void SetReadOnlyRequest::MergeFrom(const SetReadOnlyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetReadOnlyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetReadOnlyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetReadOnlyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetReadOnlyRequest::CopyFrom(const SetReadOnlyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetReadOnlyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetReadOnlyRequest::IsInitialized() const {
  return true;
}

void SetReadOnlyRequest::Swap(SetReadOnlyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetReadOnlyRequest::InternalSwap(SetReadOnlyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetReadOnlyRequest::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetReadOnlyRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOnlyResponse::kCodeFieldNumber;
const int ReadOnlyResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOnlyResponse::ReadOnlyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReadOnlyResponse)
}
ReadOnlyResponse::ReadOnlyResponse(const ReadOnlyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ReadOnlyResponse)
}

void ReadOnlyResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ReadOnlyResponse::~ReadOnlyResponse() {
  // @@protoc_insertion_point(destructor:ReadOnlyResponse)
  SharedDtor();
}

void ReadOnlyResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadOnlyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadOnlyResponse::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadOnlyResponse& ReadOnlyResponse::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadOnlyResponse* ReadOnlyResponse::New(::google::protobuf::Arena* arena) const {
  ReadOnlyResponse* n = new ReadOnlyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadOnlyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ReadOnlyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool ReadOnlyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReadOnlyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ReadOnlyResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReadOnlyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReadOnlyResponse)
  return false;
#undef DO_
}

void ReadOnlyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReadOnlyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReadOnlyResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReadOnlyResponse)
}

::google::protobuf::uint8* ReadOnlyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReadOnlyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReadOnlyResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReadOnlyResponse)
  return target;
}

size_t ReadOnlyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReadOnlyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadOnlyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReadOnlyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadOnlyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadOnlyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReadOnlyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReadOnlyResponse)
    MergeFrom(*source);
  }
}

void ReadOnlyResponse::MergeFrom(const ReadOnlyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReadOnlyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ReadOnlyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReadOnlyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOnlyResponse::CopyFrom(const ReadOnlyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReadOnlyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOnlyResponse::IsInitialized() const {
  return true;
}

void ReadOnlyResponse::Swap(ReadOnlyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOnlyResponse::InternalSwap(ReadOnlyResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadOnlyResponse::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadOnlyResponse

// int32 code = 1;
void ReadOnlyResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ReadOnlyResponse::code() const {
  // @@protoc_insertion_point(field_get:ReadOnlyResponse.code)
  return code_;
}
void ReadOnlyResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ReadOnlyResponse.code)
}

// string message = 2;
void ReadOnlyResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadOnlyResponse::message() const {
  // @@protoc_insertion_point(field_get:ReadOnlyResponse.message)
  return message_.GetNoArena();
}
void ReadOnlyResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReadOnlyResponse.message)
}
#if LANG_CXX11
void ReadOnlyResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ReadOnlyResponse.message)
}
#endif
void ReadOnlyResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReadOnlyResponse.message)
}
void ReadOnlyResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReadOnlyResponse.message)
}
::std::string* ReadOnlyResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ReadOnlyResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadOnlyResponse::release_message() {
  // @@protoc_insertion_point(field_release:ReadOnlyResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadOnlyResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ReadOnlyResponse.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetInServiceRequest::SetInServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetInServiceRequest)
}
SetInServiceRequest::SetInServiceRequest(const SetInServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SetInServiceRequest)
}

void SetInServiceRequest::SharedCtor() {
  _cached_size_ = 0;
}

SetInServiceRequest::~SetInServiceRequest() {
  // @@protoc_insertion_point(destructor:SetInServiceRequest)
  SharedDtor();
}

void SetInServiceRequest::SharedDtor() {
}

void SetInServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetInServiceRequest::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetInServiceRequest& SetInServiceRequest::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetInServiceRequest* SetInServiceRequest::New(::google::protobuf::Arena* arena) const {
  SetInServiceRequest* n = new SetInServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetInServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetInServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetInServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetInServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SetInServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetInServiceRequest)
  return false;
#undef DO_
}

void SetInServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetInServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetInServiceRequest)
}

::google::protobuf::uint8* SetInServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetInServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetInServiceRequest)
  return target;
}

size_t SetInServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetInServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetInServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetInServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetInServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetInServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetInServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetInServiceRequest)
    MergeFrom(*source);
  }
}

void SetInServiceRequest::MergeFrom(const SetInServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetInServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetInServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetInServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetInServiceRequest::CopyFrom(const SetInServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetInServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetInServiceRequest::IsInitialized() const {
  return true;
}

void SetInServiceRequest::Swap(SetInServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetInServiceRequest::InternalSwap(SetInServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetInServiceRequest::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetInServiceRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InServiceResponse::kCodeFieldNumber;
const int InServiceResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InServiceResponse::InServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:InServiceResponse)
}
InServiceResponse::InServiceResponse(const InServiceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:InServiceResponse)
}

void InServiceResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

InServiceResponse::~InServiceResponse() {
  // @@protoc_insertion_point(destructor:InServiceResponse)
  SharedDtor();
}

void InServiceResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InServiceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InServiceResponse::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InServiceResponse& InServiceResponse::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

InServiceResponse* InServiceResponse::New(::google::protobuf::Arena* arena) const {
  InServiceResponse* n = new InServiceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:InServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool InServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InServiceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "InServiceResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InServiceResponse)
  return false;
#undef DO_
}

void InServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "InServiceResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:InServiceResponse)
}

::google::protobuf::uint8* InServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "InServiceResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InServiceResponse)
  return target;
}

size_t InServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InServiceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InServiceResponse)
    MergeFrom(*source);
  }
}

void InServiceResponse::MergeFrom(const InServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void InServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InServiceResponse::CopyFrom(const InServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InServiceResponse::IsInitialized() const {
  return true;
}

void InServiceResponse::Swap(InServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InServiceResponse::InternalSwap(InServiceResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InServiceResponse::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InServiceResponse

// int32 code = 1;
void InServiceResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 InServiceResponse::code() const {
  // @@protoc_insertion_point(field_get:InServiceResponse.code)
  return code_;
}
void InServiceResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:InServiceResponse.code)
}

// string message = 2;
void InServiceResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InServiceResponse::message() const {
  // @@protoc_insertion_point(field_get:InServiceResponse.message)
  return message_.GetNoArena();
}
void InServiceResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InServiceResponse.message)
}
#if LANG_CXX11
void InServiceResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InServiceResponse.message)
}
#endif
void InServiceResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InServiceResponse.message)
}
void InServiceResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InServiceResponse.message)
}
::std::string* InServiceResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:InServiceResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InServiceResponse::release_message() {
  // @@protoc_insertion_point(field_release:InServiceResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InServiceResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:InServiceResponse.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSuspendRequest::SetSuspendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetSuspendRequest)
}
SetSuspendRequest::SetSuspendRequest(const SetSuspendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SetSuspendRequest)
}

void SetSuspendRequest::SharedCtor() {
  _cached_size_ = 0;
}

SetSuspendRequest::~SetSuspendRequest() {
  // @@protoc_insertion_point(destructor:SetSuspendRequest)
  SharedDtor();
}

void SetSuspendRequest::SharedDtor() {
}

void SetSuspendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSuspendRequest::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSuspendRequest& SetSuspendRequest::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetSuspendRequest* SetSuspendRequest::New(::google::protobuf::Arena* arena) const {
  SetSuspendRequest* n = new SetSuspendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSuspendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetSuspendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetSuspendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetSuspendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SetSuspendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetSuspendRequest)
  return false;
#undef DO_
}

void SetSuspendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetSuspendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetSuspendRequest)
}

::google::protobuf::uint8* SetSuspendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetSuspendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetSuspendRequest)
  return target;
}

size_t SetSuspendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetSuspendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSuspendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetSuspendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSuspendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSuspendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetSuspendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetSuspendRequest)
    MergeFrom(*source);
  }
}

void SetSuspendRequest::MergeFrom(const SetSuspendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetSuspendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetSuspendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetSuspendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSuspendRequest::CopyFrom(const SetSuspendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetSuspendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSuspendRequest::IsInitialized() const {
  return true;
}

void SetSuspendRequest::Swap(SetSuspendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSuspendRequest::InternalSwap(SetSuspendRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSuspendRequest::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSuspendRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SuspendResponse::kCodeFieldNumber;
const int SuspendResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SuspendResponse::SuspendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SuspendResponse)
}
SuspendResponse::SuspendResponse(const SuspendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:SuspendResponse)
}

void SuspendResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

SuspendResponse::~SuspendResponse() {
  // @@protoc_insertion_point(destructor:SuspendResponse)
  SharedDtor();
}

void SuspendResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SuspendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SuspendResponse::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SuspendResponse& SuspendResponse::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SuspendResponse* SuspendResponse::New(::google::protobuf::Arena* arena) const {
  SuspendResponse* n = new SuspendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SuspendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SuspendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool SuspendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SuspendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SuspendResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SuspendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SuspendResponse)
  return false;
#undef DO_
}

void SuspendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SuspendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SuspendResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SuspendResponse)
}

::google::protobuf::uint8* SuspendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SuspendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SuspendResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SuspendResponse)
  return target;
}

size_t SuspendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SuspendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SuspendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SuspendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SuspendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SuspendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SuspendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SuspendResponse)
    MergeFrom(*source);
  }
}

void SuspendResponse::MergeFrom(const SuspendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SuspendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void SuspendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SuspendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SuspendResponse::CopyFrom(const SuspendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SuspendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SuspendResponse::IsInitialized() const {
  return true;
}

void SuspendResponse::Swap(SuspendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SuspendResponse::InternalSwap(SuspendResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SuspendResponse::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SuspendResponse

// int32 code = 1;
void SuspendResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 SuspendResponse::code() const {
  // @@protoc_insertion_point(field_get:SuspendResponse.code)
  return code_;
}
void SuspendResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:SuspendResponse.code)
}

// string message = 2;
void SuspendResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SuspendResponse::message() const {
  // @@protoc_insertion_point(field_get:SuspendResponse.message)
  return message_.GetNoArena();
}
void SuspendResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SuspendResponse.message)
}
#if LANG_CXX11
void SuspendResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SuspendResponse.message)
}
#endif
void SuspendResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SuspendResponse.message)
}
void SuspendResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SuspendResponse.message)
}
::std::string* SuspendResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SuspendResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SuspendResponse::release_message() {
  // @@protoc_insertion_point(field_release:SuspendResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SuspendResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SuspendResponse.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceModeRequest::GetServiceModeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetServiceModeRequest)
}
GetServiceModeRequest::GetServiceModeRequest(const GetServiceModeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetServiceModeRequest)
}

void GetServiceModeRequest::SharedCtor() {
  _cached_size_ = 0;
}

GetServiceModeRequest::~GetServiceModeRequest() {
  // @@protoc_insertion_point(destructor:GetServiceModeRequest)
  SharedDtor();
}

void GetServiceModeRequest::SharedDtor() {
}

void GetServiceModeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServiceModeRequest::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceModeRequest& GetServiceModeRequest::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetServiceModeRequest* GetServiceModeRequest::New(::google::protobuf::Arena* arena) const {
  GetServiceModeRequest* n = new GetServiceModeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServiceModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetServiceModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetServiceModeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetServiceModeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GetServiceModeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetServiceModeRequest)
  return false;
#undef DO_
}

void GetServiceModeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetServiceModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetServiceModeRequest)
}

::google::protobuf::uint8* GetServiceModeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetServiceModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetServiceModeRequest)
  return target;
}

size_t GetServiceModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetServiceModeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServiceModeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetServiceModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceModeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceModeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetServiceModeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetServiceModeRequest)
    MergeFrom(*source);
  }
}

void GetServiceModeRequest::MergeFrom(const GetServiceModeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetServiceModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetServiceModeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetServiceModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceModeRequest::CopyFrom(const GetServiceModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetServiceModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceModeRequest::IsInitialized() const {
  return true;
}

void GetServiceModeRequest::Swap(GetServiceModeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceModeRequest::InternalSwap(GetServiceModeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServiceModeRequest::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetServiceModeRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceModeResponse::kCodeFieldNumber;
const int ServiceModeResponse::kMessageFieldNumber;
const int ServiceModeResponse::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceModeResponse::ServiceModeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceModeResponse)
}
ServiceModeResponse::ServiceModeResponse(const ServiceModeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mode().size() > 0) {
    mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mode_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ServiceModeResponse)
}

void ServiceModeResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ServiceModeResponse::~ServiceModeResponse() {
  // @@protoc_insertion_point(destructor:ServiceModeResponse)
  SharedDtor();
}

void ServiceModeResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceModeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceModeResponse::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceModeResponse& ServiceModeResponse::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServiceModeResponse* ServiceModeResponse::New(::google::protobuf::Arena* arena) const {
  ServiceModeResponse* n = new ServiceModeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool ServiceModeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceModeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServiceModeResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mode().data(), static_cast<int>(this->mode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServiceModeResponse.mode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceModeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceModeResponse)
  return false;
#undef DO_
}

void ServiceModeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceModeResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // string mode = 3;
  if (this->mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mode().data(), static_cast<int>(this->mode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceModeResponse.mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceModeResponse)
}

::google::protobuf::uint8* ServiceModeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceModeResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // string mode = 3;
  if (this->mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mode().data(), static_cast<int>(this->mode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceModeResponse.mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceModeResponse)
  return target;
}

size_t ServiceModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceModeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string mode = 3;
  if (this->mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mode());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceModeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceModeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceModeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceModeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceModeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceModeResponse)
    MergeFrom(*source);
  }
}

void ServiceModeResponse::MergeFrom(const ServiceModeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceModeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.mode().size() > 0) {

    mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mode_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ServiceModeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceModeResponse::CopyFrom(const ServiceModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceModeResponse::IsInitialized() const {
  return true;
}

void ServiceModeResponse::Swap(ServiceModeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceModeResponse::InternalSwap(ServiceModeResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  mode_.Swap(&other->mode_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceModeResponse::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceModeResponse

// int32 code = 1;
void ServiceModeResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ServiceModeResponse::code() const {
  // @@protoc_insertion_point(field_get:ServiceModeResponse.code)
  return code_;
}
void ServiceModeResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ServiceModeResponse.code)
}

// string message = 2;
void ServiceModeResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceModeResponse::message() const {
  // @@protoc_insertion_point(field_get:ServiceModeResponse.message)
  return message_.GetNoArena();
}
void ServiceModeResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServiceModeResponse.message)
}
#if LANG_CXX11
void ServiceModeResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServiceModeResponse.message)
}
#endif
void ServiceModeResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServiceModeResponse.message)
}
void ServiceModeResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServiceModeResponse.message)
}
::std::string* ServiceModeResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ServiceModeResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceModeResponse::release_message() {
  // @@protoc_insertion_point(field_release:ServiceModeResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceModeResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ServiceModeResponse.message)
}

// string mode = 3;
void ServiceModeResponse::clear_mode() {
  mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceModeResponse::mode() const {
  // @@protoc_insertion_point(field_get:ServiceModeResponse.mode)
  return mode_.GetNoArena();
}
void ServiceModeResponse::set_mode(const ::std::string& value) {
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServiceModeResponse.mode)
}
#if LANG_CXX11
void ServiceModeResponse::set_mode(::std::string&& value) {
  
  mode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServiceModeResponse.mode)
}
#endif
void ServiceModeResponse::set_mode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServiceModeResponse.mode)
}
void ServiceModeResponse::set_mode(const char* value, size_t size) {
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServiceModeResponse.mode)
}
::std::string* ServiceModeResponse::mutable_mode() {
  
  // @@protoc_insertion_point(field_mutable:ServiceModeResponse.mode)
  return mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceModeResponse::release_mode() {
  // @@protoc_insertion_point(field_release:ServiceModeResponse.mode)
  
  return mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceModeResponse::set_allocated_mode(::std::string* mode) {
  if (mode != NULL) {
    
  } else {
    
  }
  mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mode);
  // @@protoc_insertion_point(field_set_allocated:ServiceModeResponse.mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SuspendWorkThreadRequest::SuspendWorkThreadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SuspendWorkThreadRequest)
}
SuspendWorkThreadRequest::SuspendWorkThreadRequest(const SuspendWorkThreadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SuspendWorkThreadRequest)
}

void SuspendWorkThreadRequest::SharedCtor() {
  _cached_size_ = 0;
}

SuspendWorkThreadRequest::~SuspendWorkThreadRequest() {
  // @@protoc_insertion_point(destructor:SuspendWorkThreadRequest)
  SharedDtor();
}

void SuspendWorkThreadRequest::SharedDtor() {
}

void SuspendWorkThreadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SuspendWorkThreadRequest::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SuspendWorkThreadRequest& SuspendWorkThreadRequest::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SuspendWorkThreadRequest* SuspendWorkThreadRequest::New(::google::protobuf::Arena* arena) const {
  SuspendWorkThreadRequest* n = new SuspendWorkThreadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SuspendWorkThreadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SuspendWorkThreadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SuspendWorkThreadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SuspendWorkThreadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SuspendWorkThreadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SuspendWorkThreadRequest)
  return false;
#undef DO_
}

void SuspendWorkThreadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SuspendWorkThreadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SuspendWorkThreadRequest)
}

::google::protobuf::uint8* SuspendWorkThreadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SuspendWorkThreadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SuspendWorkThreadRequest)
  return target;
}

size_t SuspendWorkThreadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SuspendWorkThreadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SuspendWorkThreadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SuspendWorkThreadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SuspendWorkThreadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SuspendWorkThreadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SuspendWorkThreadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SuspendWorkThreadRequest)
    MergeFrom(*source);
  }
}

void SuspendWorkThreadRequest::MergeFrom(const SuspendWorkThreadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SuspendWorkThreadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SuspendWorkThreadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SuspendWorkThreadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SuspendWorkThreadRequest::CopyFrom(const SuspendWorkThreadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SuspendWorkThreadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SuspendWorkThreadRequest::IsInitialized() const {
  return true;
}

void SuspendWorkThreadRequest::Swap(SuspendWorkThreadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SuspendWorkThreadRequest::InternalSwap(SuspendWorkThreadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SuspendWorkThreadRequest::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SuspendWorkThreadRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SuspendWorkThreadResponse::kCodeFieldNumber;
const int SuspendWorkThreadResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SuspendWorkThreadResponse::SuspendWorkThreadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SuspendWorkThreadResponse)
}
SuspendWorkThreadResponse::SuspendWorkThreadResponse(const SuspendWorkThreadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:SuspendWorkThreadResponse)
}

void SuspendWorkThreadResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

SuspendWorkThreadResponse::~SuspendWorkThreadResponse() {
  // @@protoc_insertion_point(destructor:SuspendWorkThreadResponse)
  SharedDtor();
}

void SuspendWorkThreadResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SuspendWorkThreadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SuspendWorkThreadResponse::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SuspendWorkThreadResponse& SuspendWorkThreadResponse::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SuspendWorkThreadResponse* SuspendWorkThreadResponse::New(::google::protobuf::Arena* arena) const {
  SuspendWorkThreadResponse* n = new SuspendWorkThreadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SuspendWorkThreadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SuspendWorkThreadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool SuspendWorkThreadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SuspendWorkThreadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SuspendWorkThreadResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SuspendWorkThreadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SuspendWorkThreadResponse)
  return false;
#undef DO_
}

void SuspendWorkThreadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SuspendWorkThreadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SuspendWorkThreadResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SuspendWorkThreadResponse)
}

::google::protobuf::uint8* SuspendWorkThreadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SuspendWorkThreadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SuspendWorkThreadResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SuspendWorkThreadResponse)
  return target;
}

size_t SuspendWorkThreadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SuspendWorkThreadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SuspendWorkThreadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SuspendWorkThreadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SuspendWorkThreadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SuspendWorkThreadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SuspendWorkThreadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SuspendWorkThreadResponse)
    MergeFrom(*source);
  }
}

void SuspendWorkThreadResponse::MergeFrom(const SuspendWorkThreadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SuspendWorkThreadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void SuspendWorkThreadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SuspendWorkThreadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SuspendWorkThreadResponse::CopyFrom(const SuspendWorkThreadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SuspendWorkThreadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SuspendWorkThreadResponse::IsInitialized() const {
  return true;
}

void SuspendWorkThreadResponse::Swap(SuspendWorkThreadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SuspendWorkThreadResponse::InternalSwap(SuspendWorkThreadResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SuspendWorkThreadResponse::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SuspendWorkThreadResponse

// int32 code = 1;
void SuspendWorkThreadResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 SuspendWorkThreadResponse::code() const {
  // @@protoc_insertion_point(field_get:SuspendWorkThreadResponse.code)
  return code_;
}
void SuspendWorkThreadResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:SuspendWorkThreadResponse.code)
}

// string message = 2;
void SuspendWorkThreadResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SuspendWorkThreadResponse::message() const {
  // @@protoc_insertion_point(field_get:SuspendWorkThreadResponse.message)
  return message_.GetNoArena();
}
void SuspendWorkThreadResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SuspendWorkThreadResponse.message)
}
#if LANG_CXX11
void SuspendWorkThreadResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SuspendWorkThreadResponse.message)
}
#endif
void SuspendWorkThreadResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SuspendWorkThreadResponse.message)
}
void SuspendWorkThreadResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SuspendWorkThreadResponse.message)
}
::std::string* SuspendWorkThreadResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SuspendWorkThreadResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SuspendWorkThreadResponse::release_message() {
  // @@protoc_insertion_point(field_release:SuspendWorkThreadResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SuspendWorkThreadResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SuspendWorkThreadResponse.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResumeWorkThreadRequest::ResumeWorkThreadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResumeWorkThreadRequest)
}
ResumeWorkThreadRequest::ResumeWorkThreadRequest(const ResumeWorkThreadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResumeWorkThreadRequest)
}

void ResumeWorkThreadRequest::SharedCtor() {
  _cached_size_ = 0;
}

ResumeWorkThreadRequest::~ResumeWorkThreadRequest() {
  // @@protoc_insertion_point(destructor:ResumeWorkThreadRequest)
  SharedDtor();
}

void ResumeWorkThreadRequest::SharedDtor() {
}

void ResumeWorkThreadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResumeWorkThreadRequest::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResumeWorkThreadRequest& ResumeWorkThreadRequest::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResumeWorkThreadRequest* ResumeWorkThreadRequest::New(::google::protobuf::Arena* arena) const {
  ResumeWorkThreadRequest* n = new ResumeWorkThreadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResumeWorkThreadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ResumeWorkThreadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ResumeWorkThreadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResumeWorkThreadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ResumeWorkThreadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResumeWorkThreadRequest)
  return false;
#undef DO_
}

void ResumeWorkThreadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResumeWorkThreadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResumeWorkThreadRequest)
}

::google::protobuf::uint8* ResumeWorkThreadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResumeWorkThreadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResumeWorkThreadRequest)
  return target;
}

size_t ResumeWorkThreadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResumeWorkThreadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResumeWorkThreadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResumeWorkThreadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResumeWorkThreadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResumeWorkThreadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResumeWorkThreadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResumeWorkThreadRequest)
    MergeFrom(*source);
  }
}

void ResumeWorkThreadRequest::MergeFrom(const ResumeWorkThreadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResumeWorkThreadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResumeWorkThreadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResumeWorkThreadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeWorkThreadRequest::CopyFrom(const ResumeWorkThreadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResumeWorkThreadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeWorkThreadRequest::IsInitialized() const {
  return true;
}

void ResumeWorkThreadRequest::Swap(ResumeWorkThreadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResumeWorkThreadRequest::InternalSwap(ResumeWorkThreadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResumeWorkThreadRequest::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResumeWorkThreadRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResumeWorkThreadResponse::kCodeFieldNumber;
const int ResumeWorkThreadResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResumeWorkThreadResponse::ResumeWorkThreadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResumeWorkThreadResponse)
}
ResumeWorkThreadResponse::ResumeWorkThreadResponse(const ResumeWorkThreadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ResumeWorkThreadResponse)
}

void ResumeWorkThreadResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ResumeWorkThreadResponse::~ResumeWorkThreadResponse() {
  // @@protoc_insertion_point(destructor:ResumeWorkThreadResponse)
  SharedDtor();
}

void ResumeWorkThreadResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResumeWorkThreadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResumeWorkThreadResponse::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResumeWorkThreadResponse& ResumeWorkThreadResponse::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResumeWorkThreadResponse* ResumeWorkThreadResponse::New(::google::protobuf::Arena* arena) const {
  ResumeWorkThreadResponse* n = new ResumeWorkThreadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResumeWorkThreadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ResumeWorkThreadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool ResumeWorkThreadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResumeWorkThreadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResumeWorkThreadResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResumeWorkThreadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResumeWorkThreadResponse)
  return false;
#undef DO_
}

void ResumeWorkThreadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResumeWorkThreadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResumeWorkThreadResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResumeWorkThreadResponse)
}

::google::protobuf::uint8* ResumeWorkThreadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResumeWorkThreadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResumeWorkThreadResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResumeWorkThreadResponse)
  return target;
}

size_t ResumeWorkThreadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResumeWorkThreadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResumeWorkThreadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResumeWorkThreadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResumeWorkThreadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResumeWorkThreadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResumeWorkThreadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResumeWorkThreadResponse)
    MergeFrom(*source);
  }
}

void ResumeWorkThreadResponse::MergeFrom(const ResumeWorkThreadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResumeWorkThreadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ResumeWorkThreadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResumeWorkThreadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeWorkThreadResponse::CopyFrom(const ResumeWorkThreadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResumeWorkThreadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeWorkThreadResponse::IsInitialized() const {
  return true;
}

void ResumeWorkThreadResponse::Swap(ResumeWorkThreadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResumeWorkThreadResponse::InternalSwap(ResumeWorkThreadResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResumeWorkThreadResponse::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResumeWorkThreadResponse

// int32 code = 1;
void ResumeWorkThreadResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ResumeWorkThreadResponse::code() const {
  // @@protoc_insertion_point(field_get:ResumeWorkThreadResponse.code)
  return code_;
}
void ResumeWorkThreadResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ResumeWorkThreadResponse.code)
}

// string message = 2;
void ResumeWorkThreadResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResumeWorkThreadResponse::message() const {
  // @@protoc_insertion_point(field_get:ResumeWorkThreadResponse.message)
  return message_.GetNoArena();
}
void ResumeWorkThreadResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResumeWorkThreadResponse.message)
}
#if LANG_CXX11
void ResumeWorkThreadResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ResumeWorkThreadResponse.message)
}
#endif
void ResumeWorkThreadResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResumeWorkThreadResponse.message)
}
void ResumeWorkThreadResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResumeWorkThreadResponse.message)
}
::std::string* ResumeWorkThreadResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ResumeWorkThreadResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResumeWorkThreadResponse::release_message() {
  // @@protoc_insertion_point(field_release:ResumeWorkThreadResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResumeWorkThreadResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ResumeWorkThreadResponse.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWorkThreadStatusRequest::GetWorkThreadStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetWorkThreadStatusRequest)
}
GetWorkThreadStatusRequest::GetWorkThreadStatusRequest(const GetWorkThreadStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetWorkThreadStatusRequest)
}

void GetWorkThreadStatusRequest::SharedCtor() {
  _cached_size_ = 0;
}

GetWorkThreadStatusRequest::~GetWorkThreadStatusRequest() {
  // @@protoc_insertion_point(destructor:GetWorkThreadStatusRequest)
  SharedDtor();
}

void GetWorkThreadStatusRequest::SharedDtor() {
}

void GetWorkThreadStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetWorkThreadStatusRequest::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWorkThreadStatusRequest& GetWorkThreadStatusRequest::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetWorkThreadStatusRequest* GetWorkThreadStatusRequest::New(::google::protobuf::Arena* arena) const {
  GetWorkThreadStatusRequest* n = new GetWorkThreadStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetWorkThreadStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetWorkThreadStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetWorkThreadStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetWorkThreadStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GetWorkThreadStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetWorkThreadStatusRequest)
  return false;
#undef DO_
}

void GetWorkThreadStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetWorkThreadStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetWorkThreadStatusRequest)
}

::google::protobuf::uint8* GetWorkThreadStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetWorkThreadStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetWorkThreadStatusRequest)
  return target;
}

size_t GetWorkThreadStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetWorkThreadStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetWorkThreadStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetWorkThreadStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkThreadStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWorkThreadStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetWorkThreadStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetWorkThreadStatusRequest)
    MergeFrom(*source);
  }
}

void GetWorkThreadStatusRequest::MergeFrom(const GetWorkThreadStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetWorkThreadStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetWorkThreadStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetWorkThreadStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkThreadStatusRequest::CopyFrom(const GetWorkThreadStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetWorkThreadStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkThreadStatusRequest::IsInitialized() const {
  return true;
}

void GetWorkThreadStatusRequest::Swap(GetWorkThreadStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWorkThreadStatusRequest::InternalSwap(GetWorkThreadStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetWorkThreadStatusRequest::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetWorkThreadStatusRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetWorkThreadStatusResponse::kCodeFieldNumber;
const int GetWorkThreadStatusResponse::kMessageFieldNumber;
const int GetWorkThreadStatusResponse::kRunningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWorkThreadStatusResponse::GetWorkThreadStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetWorkThreadStatusResponse)
}
GetWorkThreadStatusResponse::GetWorkThreadStatusResponse(const GetWorkThreadStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&running_) -
    reinterpret_cast<char*>(&code_)) + sizeof(running_));
  // @@protoc_insertion_point(copy_constructor:GetWorkThreadStatusResponse)
}

void GetWorkThreadStatusResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&running_) -
      reinterpret_cast<char*>(&code_)) + sizeof(running_));
  _cached_size_ = 0;
}

GetWorkThreadStatusResponse::~GetWorkThreadStatusResponse() {
  // @@protoc_insertion_point(destructor:GetWorkThreadStatusResponse)
  SharedDtor();
}

void GetWorkThreadStatusResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetWorkThreadStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetWorkThreadStatusResponse::descriptor() {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWorkThreadStatusResponse& GetWorkThreadStatusResponse::default_instance() {
  protobuf_admin_2fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetWorkThreadStatusResponse* GetWorkThreadStatusResponse::New(::google::protobuf::Arena* arena) const {
  GetWorkThreadStatusResponse* n = new GetWorkThreadStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetWorkThreadStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetWorkThreadStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&running_) -
      reinterpret_cast<char*>(&code_)) + sizeof(running_));
  _internal_metadata_.Clear();
}

bool GetWorkThreadStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetWorkThreadStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetWorkThreadStatusResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool running = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetWorkThreadStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetWorkThreadStatusResponse)
  return false;
#undef DO_
}

void GetWorkThreadStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetWorkThreadStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetWorkThreadStatusResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // bool running = 3;
  if (this->running() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->running(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetWorkThreadStatusResponse)
}

::google::protobuf::uint8* GetWorkThreadStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetWorkThreadStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetWorkThreadStatusResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // bool running = 3;
  if (this->running() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->running(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetWorkThreadStatusResponse)
  return target;
}

size_t GetWorkThreadStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetWorkThreadStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // bool running = 3;
  if (this->running() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetWorkThreadStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetWorkThreadStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkThreadStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWorkThreadStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetWorkThreadStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetWorkThreadStatusResponse)
    MergeFrom(*source);
  }
}

void GetWorkThreadStatusResponse::MergeFrom(const GetWorkThreadStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetWorkThreadStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.running() != 0) {
    set_running(from.running());
  }
}

void GetWorkThreadStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetWorkThreadStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkThreadStatusResponse::CopyFrom(const GetWorkThreadStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetWorkThreadStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkThreadStatusResponse::IsInitialized() const {
  return true;
}

void GetWorkThreadStatusResponse::Swap(GetWorkThreadStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWorkThreadStatusResponse::InternalSwap(GetWorkThreadStatusResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(code_, other->code_);
  swap(running_, other->running_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetWorkThreadStatusResponse::GetMetadata() const {
  protobuf_admin_2fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetWorkThreadStatusResponse

// int32 code = 1;
void GetWorkThreadStatusResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 GetWorkThreadStatusResponse::code() const {
  // @@protoc_insertion_point(field_get:GetWorkThreadStatusResponse.code)
  return code_;
}
void GetWorkThreadStatusResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:GetWorkThreadStatusResponse.code)
}

// string message = 2;
void GetWorkThreadStatusResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetWorkThreadStatusResponse::message() const {
  // @@protoc_insertion_point(field_get:GetWorkThreadStatusResponse.message)
  return message_.GetNoArena();
}
void GetWorkThreadStatusResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetWorkThreadStatusResponse.message)
}
#if LANG_CXX11
void GetWorkThreadStatusResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetWorkThreadStatusResponse.message)
}
#endif
void GetWorkThreadStatusResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetWorkThreadStatusResponse.message)
}
void GetWorkThreadStatusResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetWorkThreadStatusResponse.message)
}
::std::string* GetWorkThreadStatusResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:GetWorkThreadStatusResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetWorkThreadStatusResponse::release_message() {
  // @@protoc_insertion_point(field_release:GetWorkThreadStatusResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetWorkThreadStatusResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:GetWorkThreadStatusResponse.message)
}

// bool running = 3;
void GetWorkThreadStatusResponse::clear_running() {
  running_ = false;
}
bool GetWorkThreadStatusResponse::running() const {
  // @@protoc_insertion_point(field_get:GetWorkThreadStatusResponse.running)
  return running_;
}
void GetWorkThreadStatusResponse::set_running(bool value) {
  
  running_ = value;
  // @@protoc_insertion_point(field_set:GetWorkThreadStatusResponse.running)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
